{"version":3,"file":"Text.js","names":["defaultDestroyOptions","texture","children","baseTexture","Text","Sprite","constructor","text","style","canvas","Doc","createElement","width","height","Texture","fromCanvas","settings","SCALE_MODE","orig","Rectangle","trim","addToTextureCache","_texture","textureCacheIds","context","getContext","resolution","RESOLUTION","_text","_style","_styleListener","_font","localStyleID","updateText","respectDirty","styleID","dirty","toFontString","measured","TextMetrics","measureText","wordWrap","lines","lineHeight","lineWidths","maxLineWidth","fontProperties","Math","ceil","max","padding","scale","clearRect","drawBackground","font","strokeStyle","stroke","lineWidth","strokeThickness","textBaseline","lineJoin","miterLimit","linePositionX","linePositionY","dropShadow","fillStyle","dropShadowColor","globalAlpha","dropShadowAlpha","shadowBlur","dropShadowBlur","shadowColor","xShadowOffset","cos","dropShadowAngle","dropShadowDistance","yShadowOffset","sin","i","length","ascent","align","fill","drawLetterSpacing","_generateFillStyle","updateTexture","background","backgroundColor","ftext","String","fillRect","x","y","isStroke","letterSpacing","strokeText","fillText","characters","prototype","split","call","currentPosition","index","current","previousWidth","currentWidth","substring","updateStyle","key","newKey","camelCase","name","SPECIAL_CHARS_REGEXP","MOZ_HACK_REGEXP","replace","_","separator","letter","offset","toUpperCase","trimmed","trimCanvas","data","putImageData","hasLoaded","realWidth","realHeight","_frame","_onTextureUpdate","emit","renderWebGL","renderer","_renderCanvas","getLocalBounds","rect","_calculateBounds","calculateVertices","_bounds","addQuad","vertexData","_onStyleChange","Array","isArray","gradient","totalIterations","currentIteration","stop","slice","fillGradientStops","lengthPlus1","push","unshift","fillGradientType","TEXT_GRADIENT","LINEAR_VERTICAL","createLinearGradient","j","addColorStop","destroy","options","destroyed","Object","assign","abs","value","s","sign","_width","_height","TextStyle","undefined"],"sources":["../../src/text/Text.js"],"sourcesContent":["import Sprite from \"../sprites/Sprite\";\nimport Texture from \"../textures/Texture\";\nimport { sign } from \"../utils\";\nimport { Rectangle } from \"../math\";\nimport { TEXT_GRADIENT } from \"../const\";\nimport settings from \"../settings\";\nimport TextStyle from \"./TextStyle\";\nimport TextMetrics from \"./TextMetrics\";\nimport trimCanvas from \"../utils/trimCanvas\";\nimport Doc from \"../polyfill/Doc\";\nimport { addToTextureCache } from \"../utils/cache\";\n\nconst defaultDestroyOptions = {\n  texture: true,\n  children: false,\n  baseTexture: true\n};\n\nexport default class Text extends Sprite {\n  constructor(text, style, canvas) {\n    canvas = canvas || Doc.createElement(\"canvas\");\n    canvas.width = 3;\n    canvas.height = 3;\n\n    const texture = Texture.fromCanvas(canvas, settings.SCALE_MODE, \"text\");\n    texture.orig = new Rectangle();\n    texture.trim = new Rectangle();\n\n    super(texture);\n    addToTextureCache(\n      this._texture,\n      this._texture.baseTexture.textureCacheIds[0]\n    );\n\n    this.canvas = canvas;\n    this.context = this.canvas.getContext(\"2d\");\n    this.resolution = settings.RESOLUTION;\n    this._text = null;\n    this._style = null;\n    this._styleListener = null;\n    this._font = \"\";\n    this.text = text;\n    this.style = style;\n    this.localStyleID = -1;\n  }\n\n  updateText(respectDirty) {\n    const style = this._style;\n\n    if (this.localStyleID !== style.styleID) {\n      this.dirty = true;\n      this.localStyleID = style.styleID;\n    }\n\n    if (!this.dirty && respectDirty) {\n      return;\n    }\n\n    this._font = this._style.toFontString();\n\n    const context = this.context;\n    const measured = TextMetrics.measureText(\n      this._text,\n      this._style,\n      this._style.wordWrap,\n      this.canvas\n    );\n    const width = measured.width;\n    const height = measured.height;\n    const lines = measured.lines;\n    const lineHeight = measured.lineHeight;\n    const lineWidths = measured.lineWidths;\n    const maxLineWidth = measured.maxLineWidth;\n    const fontProperties = measured.fontProperties;\n\n    this.canvas.width = Math.ceil(\n      (Math.max(1, width) + style.padding * 2) * this.resolution\n    );\n    this.canvas.height = Math.ceil(\n      (Math.max(1, height) + style.padding * 2) * this.resolution\n    );\n\n    context.scale(this.resolution, this.resolution);\n    context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.drawBackground(style);\n\n    context.font = this._font;\n    context.strokeStyle = style.stroke;\n    context.lineWidth = style.strokeThickness;\n    context.textBaseline = style.textBaseline;\n    context.lineJoin = style.lineJoin;\n    context.miterLimit = style.miterLimit;\n\n    let linePositionX;\n    let linePositionY;\n\n    if (style.dropShadow) {\n      context.fillStyle = style.dropShadowColor;\n      context.globalAlpha = style.dropShadowAlpha;\n      context.shadowBlur = style.dropShadowBlur;\n\n      if (style.dropShadowBlur > 0) {\n        context.shadowColor = style.dropShadowColor;\n      }\n\n      const xShadowOffset =\n        Math.cos(style.dropShadowAngle) * style.dropShadowDistance;\n      const yShadowOffset =\n        Math.sin(style.dropShadowAngle) * style.dropShadowDistance;\n\n      for (let i = 0; i < lines.length; i++) {\n        linePositionX = style.strokeThickness / 2;\n        linePositionY =\n          style.strokeThickness / 2 + i * lineHeight + fontProperties.ascent;\n\n        if (style.align === \"right\") {\n          linePositionX += maxLineWidth - lineWidths[i];\n        } else if (style.align === \"center\") {\n          linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n        }\n\n        if (style.fill) {\n          this.drawLetterSpacing(\n            lines[i],\n            linePositionX + xShadowOffset + style.padding,\n            linePositionY + yShadowOffset + style.padding\n          );\n\n          if (style.stroke && style.strokeThickness) {\n            context.strokeStyle = style.dropShadowColor;\n            this.drawLetterSpacing(\n              lines[i],\n              linePositionX + xShadowOffset + style.padding,\n              linePositionY + yShadowOffset + style.padding,\n              true\n            );\n            context.strokeStyle = style.stroke;\n          }\n        }\n      }\n    }\n\n    context.shadowBlur = 0;\n    context.globalAlpha = 1;\n    context.fillStyle = this._generateFillStyle(style, lines);\n\n    // draw lines line by line\n    for (let i = 0; i < lines.length; i++) {\n      linePositionX = style.strokeThickness / 2;\n      linePositionY =\n        style.strokeThickness / 2 + i * lineHeight + fontProperties.ascent;\n\n      if (style.align === \"right\") {\n        linePositionX += maxLineWidth - lineWidths[i];\n      } else if (style.align === \"center\") {\n        linePositionX += (maxLineWidth - lineWidths[i]) / 2;\n      }\n\n      if (style.stroke && style.strokeThickness) {\n        this.drawLetterSpacing(\n          lines[i],\n          linePositionX + style.padding,\n          linePositionY + style.padding,\n          true\n        );\n      }\n\n      if (style.fill) {\n        this.drawLetterSpacing(\n          lines[i],\n          linePositionX + style.padding,\n          linePositionY + style.padding\n        );\n      }\n    }\n\n    this.updateTexture();\n  }\n\n  drawBackground(style) {\n    const background = style.background || style.backgroundColor;\n    if (!background) return;\n\n    const { context, canvas, text } = this;\n    const ftext = String(text).trim();\n    if (ftext) {\n      context.fillStyle = background;\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    } else {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    }\n  }\n\n  drawLetterSpacing(text, x, y, isStroke = false) {\n    const style = this._style;\n\n    // letterSpacing of 0 means normal\n    const letterSpacing = style.letterSpacing;\n\n    if (letterSpacing === 0) {\n      if (isStroke) {\n        this.context.strokeText(text, x, y);\n      } else {\n        this.context.fillText(text, x, y);\n      }\n\n      return;\n    }\n\n    const characters = String.prototype.split.call(text, \"\");\n    let currentPosition = x;\n    let index = 0;\n    let current = \"\";\n    let previousWidth = this.context.measureText(text).width;\n    let currentWidth = 0;\n\n    while (index < text.length) {\n      current = characters[index++];\n      if (isStroke) {\n        this.context.strokeText(current, currentPosition, y);\n      } else {\n        this.context.fillText(current, currentPosition, y);\n      }\n\n      currentWidth = this.context.measureText(text.substring(index)).width;\n      currentPosition += previousWidth - currentWidth + letterSpacing;\n      previousWidth = currentWidth;\n    }\n  }\n\n  updateStyle(style) {\n    for (let key in style) {\n      let newKey = this.camelCase(key);\n      if (newKey === \"color\") newKey = \"fill\";\n\n      this.style[newKey] = style[key];\n    }\n  }\n\n  camelCase(name) {\n    const SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\n    const MOZ_HACK_REGEXP = /^moz([A-Z])/;\n\n    return name\n      .replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n        return offset ? letter.toUpperCase() : letter;\n      })\n      .replace(MOZ_HACK_REGEXP, \"Moz$1\");\n  }\n\n  updateTexture() {\n    const canvas = this.canvas;\n\n    if (this._style.trim) {\n      const trimmed = trimCanvas(canvas);\n\n      if (trimmed.data) {\n        canvas.width = trimmed.width;\n        canvas.height = trimmed.height;\n        this.context.putImageData(trimmed.data, 0, 0);\n      }\n    }\n\n    const texture = this._texture;\n    const style = this._style;\n    const padding = style.trim ? 0 : style.padding;\n    const baseTexture = texture.baseTexture;\n\n    baseTexture.hasLoaded = true;\n    baseTexture.resolution = this.resolution;\n\n    baseTexture.realWidth = canvas.width;\n    baseTexture.realHeight = canvas.height;\n    baseTexture.width = canvas.width / this.resolution;\n    baseTexture.height = canvas.height / this.resolution;\n\n    texture.trim.width = texture._frame.width = canvas.width / this.resolution;\n    texture.trim.height = texture._frame.height =\n      canvas.height / this.resolution;\n    texture.trim.x = -padding;\n    texture.trim.y = -padding;\n\n    texture.orig.width = texture._frame.width - padding * 2;\n    texture.orig.height = texture._frame.height - padding * 2;\n\n    // call sprite onTextureUpdate to update scale if _width or _height were set\n    this._onTextureUpdate();\n    baseTexture.emit(\"update\", baseTexture);\n    this.dirty = false;\n  }\n\n  renderWebGL(renderer) {\n    if (this.resolution !== renderer.resolution) {\n      this.resolution = renderer.resolution;\n      this.dirty = true;\n    }\n\n    this.updateText(true);\n    super.renderWebGL(renderer);\n  }\n\n  _renderCanvas(renderer) {\n    if (this.resolution !== renderer.resolution) {\n      this.resolution = renderer.resolution;\n      this.dirty = true;\n    }\n\n    this.updateText(true);\n    super._renderCanvas(renderer);\n  }\n\n  getLocalBounds(rect) {\n    this.updateText(true);\n    return super.getLocalBounds.call(this, rect);\n  }\n\n  _calculateBounds() {\n    this.updateText(true);\n    this.calculateVertices();\n    // if we have already done this on THIS frame.\n    this._bounds.addQuad(this.vertexData);\n  }\n\n  _onStyleChange() {\n    this.dirty = true;\n  }\n\n  _generateFillStyle(style, lines) {\n    if (!Array.isArray(style.fill)) {\n      return style.fill;\n    }\n\n    let gradient;\n    let totalIterations;\n    let currentIteration;\n    let stop;\n\n    const width = this.canvas.width / this.resolution;\n    const height = this.canvas.height / this.resolution;\n    const fill = style.fill.slice();\n    const fillGradientStops = style.fillGradientStops.slice();\n\n    if (!fillGradientStops.length) {\n      const lengthPlus1 = fill.length + 1;\n\n      for (let i = 1; i < lengthPlus1; ++i) {\n        fillGradientStops.push(i / lengthPlus1);\n      }\n    }\n\n    fill.unshift(style.fill[0]);\n    fillGradientStops.unshift(0);\n\n    fill.push(style.fill[style.fill.length - 1]);\n    fillGradientStops.push(1);\n\n    if (style.fillGradientType === TEXT_GRADIENT.LINEAR_VERTICAL) {\n      gradient = this.context.createLinearGradient(\n        width / 2,\n        0,\n        width / 2,\n        height\n      );\n\n      totalIterations = (fill.length + 1) * lines.length;\n      currentIteration = 0;\n      for (let i = 0; i < lines.length; i++) {\n        currentIteration += 1;\n        for (let j = 0; j < fill.length; j++) {\n          if (typeof fillGradientStops[j] === \"number\") {\n            stop = fillGradientStops[j] / lines.length + i / lines.length;\n          } else {\n            stop = currentIteration / totalIterations;\n          }\n          gradient.addColorStop(stop, fill[j]);\n          currentIteration++;\n        }\n      }\n    } else {\n      gradient = this.context.createLinearGradient(\n        0,\n        height / 2,\n        width,\n        height / 2\n      );\n\n      totalIterations = fill.length + 1;\n      currentIteration = 1;\n\n      for (let i = 0; i < fill.length; i++) {\n        if (typeof fillGradientStops[i] === \"number\") {\n          stop = fillGradientStops[i];\n        } else {\n          stop = currentIteration / totalIterations;\n        }\n        gradient.addColorStop(stop, fill[i]);\n        currentIteration++;\n      }\n    }\n\n    return gradient;\n  }\n\n  destroy(options) {\n    if (this.destroyed) return;\n\n    if (typeof options === \"boolean\") {\n      options = { children: options };\n    }\n\n    options = Object.assign({}, defaultDestroyOptions, options);\n    super.destroy(options);\n    this.context = null;\n    this.canvas = null;\n    this._style = null;\n  }\n\n  get width() {\n    this.updateText(true);\n    return Math.abs(this.scale.x) * this._texture.orig.width;\n  }\n\n  set width(value) {\n    this.updateText(true);\n    const s = sign(this.scale.x) || 1;\n    this.scale.x = (s * value) / this._texture.orig.width;\n    this._width = value;\n  }\n\n  get height() {\n    this.updateText(true);\n    return Math.abs(this.scale.y) * this._texture.orig.height;\n  }\n\n  set height(value) {\n    this.updateText(true);\n    const s = sign(this.scale.y) || 1;\n    this.scale.y = (s * value) / this._texture.orig.height;\n    this._height = value;\n  }\n\n  get font() {\n    return this._font;\n  }\n\n  get style() {\n    return this._style;\n  }\n\n  set style(style) {\n    style = style || {};\n\n    if (style instanceof TextStyle) {\n      this._style = style;\n    } else {\n      this._style = new TextStyle(style);\n    }\n\n    this.localStyleID = -1;\n    this.dirty = true;\n  }\n\n  get text() {\n    return this._text;\n  }\n\n  set text(text) {\n    text = String(\n      text === \"\" || text === null || text === undefined ? \" \" : text\n    );\n\n    if (this._text === text) return;\n    this._text = text;\n    this.dirty = true;\n  }\n}\n"],"mappings":"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"}