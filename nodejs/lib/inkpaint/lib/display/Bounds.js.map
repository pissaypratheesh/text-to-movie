{"version":3,"file":"Bounds.js","names":["Bounds","constructor","minX","Infinity","minY","maxX","maxY","rect","isEmpty","clear","updateID","getRectangle","Rectangle","EMPTY","x","y","width","height","addPoint","point","Math","min","max","addQuad","vertices","addFrame","transform","x0","y0","x1","y1","matrix","worldTransform","a","b","c","d","tx","ty","addVertices","beginOffset","endOffset","i","rawX","rawY","addBounds","bounds","addBoundsMask","mask","_minX","_minY","_maxX","_maxY","addBoundsArea","area"],"sources":["../../src/display/Bounds.js"],"sourcesContent":["import { Rectangle } from \"../math\";\n\nexport default class Bounds {\n  constructor() {\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = -Infinity;\n    this.maxY = -Infinity;\n    this.rect = null;\n  }\n\n  isEmpty() {\n    return this.minX > this.maxX || this.minY > this.maxY;\n  }\n\n  clear() {\n    this.updateID++;\n\n    this.minX = Infinity;\n    this.minY = Infinity;\n    this.maxX = -Infinity;\n    this.maxY = -Infinity;\n  }\n\n  getRectangle(rect) {\n    if (this.minX > this.maxX || this.minY > this.maxY) {\n      return Rectangle.EMPTY;\n    }\n\n    rect = rect || new Rectangle(0, 0, 1, 1);\n\n    rect.x = this.minX;\n    rect.y = this.minY;\n    rect.width = this.maxX - this.minX;\n    rect.height = this.maxY - this.minY;\n\n    return rect;\n  }\n\n  addPoint(point) {\n    this.minX = Math.min(this.minX, point.x);\n    this.maxX = Math.max(this.maxX, point.x);\n    this.minY = Math.min(this.minY, point.y);\n    this.maxY = Math.max(this.maxY, point.y);\n  }\n\n  addQuad(vertices) {\n    let minX = this.minX;\n    let minY = this.minY;\n    let maxX = this.maxX;\n    let maxY = this.maxY;\n\n    let x = vertices[0];\n    let y = vertices[1];\n\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n\n    x = vertices[2];\n    y = vertices[3];\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n\n    x = vertices[4];\n    y = vertices[5];\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n\n    x = vertices[6];\n    y = vertices[7];\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n\n    this.minX = minX;\n    this.minY = minY;\n    this.maxX = maxX;\n    this.maxY = maxY;\n  }\n\n  addFrame(transform, x0, y0, x1, y1) {\n    const matrix = transform.worldTransform;\n    const a = matrix.a;\n    const b = matrix.b;\n    const c = matrix.c;\n    const d = matrix.d;\n    const tx = matrix.tx;\n    const ty = matrix.ty;\n\n    let minX = this.minX;\n    let minY = this.minY;\n    let maxX = this.maxX;\n    let maxY = this.maxY;\n\n    let x = a * x0 + c * y0 + tx;\n    let y = b * x0 + d * y0 + ty;\n\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n\n    x = a * x1 + c * y0 + tx;\n    y = b * x1 + d * y0 + ty;\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n\n    x = a * x0 + c * y1 + tx;\n    y = b * x0 + d * y1 + ty;\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n\n    x = a * x1 + c * y1 + tx;\n    y = b * x1 + d * y1 + ty;\n    minX = x < minX ? x : minX;\n    minY = y < minY ? y : minY;\n    maxX = x > maxX ? x : maxX;\n    maxY = y > maxY ? y : maxY;\n\n    this.minX = minX;\n    this.minY = minY;\n    this.maxX = maxX;\n    this.maxY = maxY;\n  }\n\n  addVertices(transform, vertices, beginOffset, endOffset) {\n    const matrix = transform.worldTransform;\n    const a = matrix.a;\n    const b = matrix.b;\n    const c = matrix.c;\n    const d = matrix.d;\n    const tx = matrix.tx;\n    const ty = matrix.ty;\n\n    let minX = this.minX;\n    let minY = this.minY;\n    let maxX = this.maxX;\n    let maxY = this.maxY;\n\n    for (let i = beginOffset; i < endOffset; i += 2) {\n      const rawX = vertices[i];\n      const rawY = vertices[i + 1];\n      const x = a * rawX + c * rawY + tx;\n      const y = d * rawY + b * rawX + ty;\n\n      minX = x < minX ? x : minX;\n      minY = y < minY ? y : minY;\n      maxX = x > maxX ? x : maxX;\n      maxY = y > maxY ? y : maxY;\n    }\n\n    this.minX = minX;\n    this.minY = minY;\n    this.maxX = maxX;\n    this.maxY = maxY;\n  }\n\n  addBounds(bounds) {\n    const minX = this.minX;\n    const minY = this.minY;\n    const maxX = this.maxX;\n    const maxY = this.maxY;\n\n    this.minX = bounds.minX < minX ? bounds.minX : minX;\n    this.minY = bounds.minY < minY ? bounds.minY : minY;\n    this.maxX = bounds.maxX > maxX ? bounds.maxX : maxX;\n    this.maxY = bounds.maxY > maxY ? bounds.maxY : maxY;\n  }\n\n  addBoundsMask(bounds, mask) {\n    const _minX = bounds.minX > mask.minX ? bounds.minX : mask.minX;\n    const _minY = bounds.minY > mask.minY ? bounds.minY : mask.minY;\n    const _maxX = bounds.maxX < mask.maxX ? bounds.maxX : mask.maxX;\n    const _maxY = bounds.maxY < mask.maxY ? bounds.maxY : mask.maxY;\n\n    if (_minX <= _maxX && _minY <= _maxY) {\n      const minX = this.minX;\n      const minY = this.minY;\n      const maxX = this.maxX;\n      const maxY = this.maxY;\n\n      this.minX = _minX < minX ? _minX : minX;\n      this.minY = _minY < minY ? _minY : minY;\n      this.maxX = _maxX > maxX ? _maxX : maxX;\n      this.maxY = _maxY > maxY ? _maxY : maxY;\n    }\n  }\n\n  addBoundsArea(bounds, area) {\n    const _minX = bounds.minX > area.x ? bounds.minX : area.x;\n    const _minY = bounds.minY > area.y ? bounds.minY : area.y;\n    const _maxX =\n      bounds.maxX < area.x + area.width ? bounds.maxX : area.x + area.width;\n    const _maxY =\n      bounds.maxY < area.y + area.height ? bounds.maxY : area.y + area.height;\n\n    if (_minX <= _maxX && _minY <= _maxY) {\n      const minX = this.minX;\n      const minY = this.minY;\n      const maxX = this.maxX;\n      const maxY = this.maxY;\n\n      this.minX = _minX < minX ? _minX : minX;\n      this.minY = _minY < minY ? _minY : minY;\n      this.maxX = _maxX > maxX ? _maxX : maxX;\n      this.maxY = _maxY > maxY ? _maxY : maxY;\n    }\n  }\n}\n"],"mappings":"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"}