{"version":3,"file":"CanvasMaskManager.js","names":["CanvasMaskManager","constructor","renderer","pushMask","maskData","context","save","cacheAlpha","alpha","transform","worldTransform","resolution","setTransform","a","b","c","d","tx","ty","_texture","renderGraphicsShape","clip","worldAlpha","graphics","len","graphicsData","length","beginPath","i","data","shape","type","SHAPES","POLY","points","holes","outerArea","innerArea","moveTo","j","lineTo","closePath","k","RECT","rect","x","y","width","height","CIRC","arc","radius","Math","PI","ELIP","w","h","kappa","ox","oy","xe","ye","xm","ym","bezierCurveTo","RREC","rx","ry","maxRadius","min","quadraticCurveTo","popMask","restore","invalidateBlendMode","destroy"],"sources":["../../../../src/renderers/canvas/utils/CanvasMaskManager.js"],"sourcesContent":["import { SHAPES } from \"../../../const\";\n\nexport default class CanvasMaskManager {\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n\n  pushMask(maskData) {\n    const renderer = this.renderer;\n\n    renderer.context.save();\n    const cacheAlpha = maskData.alpha;\n    const transform = maskData.transform.worldTransform;\n    const resolution = renderer.resolution;\n\n    renderer.context.setTransform(\n      transform.a * resolution,\n      transform.b * resolution,\n      transform.c * resolution,\n      transform.d * resolution,\n      transform.tx * resolution,\n      transform.ty * resolution\n    );\n\n    if (!maskData._texture) {\n      this.renderGraphicsShape(maskData);\n      renderer.context.clip();\n    }\n\n    maskData.worldAlpha = cacheAlpha;\n  }\n\n  renderGraphicsShape(graphics) {\n    const context = this.renderer.context;\n    const len = graphics.graphicsData.length;\n\n    if (len === 0) {\n      return;\n    }\n\n    context.beginPath();\n    for (let i = 0; i < len; i++) {\n      const data = graphics.graphicsData[i];\n      const shape = data.shape;\n\n      if (data.type === SHAPES.POLY) {\n        let points = shape.points;\n        const holes = data.holes;\n        let outerArea;\n        let innerArea;\n\n        context.moveTo(points[0], points[1]);\n\n        for (let j = 2; j < points.length; j += 2) {\n          context.lineTo(points[j], points[j + 1]);\n        }\n\n        // if the first and last point are the same close the path - much neater :)\n        if (\n          points[0] === points[points.length - 2] &&\n          points[1] === points[points.length - 1]\n        ) {\n          context.closePath();\n        }\n\n        if (holes.length > 0) {\n          outerArea = 0;\n          for (let j = 0; j < points.length; j += 2) {\n            outerArea +=\n              points[j] * points[j + 3] - points[j + 1] * points[j + 2];\n          }\n\n          for (let k = 0; k < holes.length; k++) {\n            points = holes[k].points;\n\n            innerArea = 0;\n            for (let j = 0; j < points.length; j += 2) {\n              innerArea +=\n                points[j] * points[j + 3] - points[j + 1] * points[j + 2];\n            }\n\n            context.moveTo(points[0], points[1]);\n\n            if (innerArea * outerArea < 0) {\n              for (let j = 2; j < points.length; j += 2) {\n                context.lineTo(points[j], points[j + 1]);\n              }\n            } else {\n              for (let j = points.length - 2; j >= 2; j -= 2) {\n                context.lineTo(points[j], points[j + 1]);\n              }\n            }\n          }\n        }\n      } else if (data.type === SHAPES.RECT) {\n        context.rect(shape.x, shape.y, shape.width, shape.height);\n        context.closePath();\n      } else if (data.type === SHAPES.CIRC) {\n        // TODO - need to be Undefined!\n        context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n        context.closePath();\n      } else if (data.type === SHAPES.ELIP) {\n        // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n        const w = shape.width * 2;\n        const h = shape.height * 2;\n\n        const x = shape.x - w / 2;\n        const y = shape.y - h / 2;\n\n        const kappa = 0.5522848;\n        const ox = (w / 2) * kappa; // control point offset horizontal\n        const oy = (h / 2) * kappa; // control point offset vertical\n        const xe = x + w; // x-end\n        const ye = y + h; // y-end\n        const xm = x + w / 2; // x-middle\n        const ym = y + h / 2; // y-middle\n\n        context.moveTo(x, ym);\n        context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n        context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n        context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n        context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n        context.closePath();\n      } else if (data.type === SHAPES.RREC) {\n        const rx = shape.x;\n        const ry = shape.y;\n        const width = shape.width;\n        const height = shape.height;\n        let radius = shape.radius;\n\n        const maxRadius = (Math.min(width, height) / 2) | 0;\n\n        radius = radius > maxRadius ? maxRadius : radius;\n\n        context.moveTo(rx, ry + radius);\n        context.lineTo(rx, ry + height - radius);\n        context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n        context.lineTo(rx + width - radius, ry + height);\n        context.quadraticCurveTo(\n          rx + width,\n          ry + height,\n          rx + width,\n          ry + height - radius\n        );\n        context.lineTo(rx + width, ry + radius);\n        context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n        context.lineTo(rx + radius, ry);\n        context.quadraticCurveTo(rx, ry, rx, ry + radius);\n        context.closePath();\n      }\n    }\n  }\n\n  /**\n   * Restores the current drawing context to the state it was before the mask was applied.\n   *\n   * @param {InkPaint.CanvasRenderer} renderer - The renderer context to use.\n   */\n  popMask(renderer) {\n    renderer.context.restore();\n    renderer.invalidateBlendMode();\n  }\n\n  /**\n   * Destroys this canvas mask manager.\n   *\n   */\n  destroy() {\n    /* empty */\n  }\n}\n"],"mappings":"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"}