{"version":3,"file":"TextureGarbageCollector.js","names":["TextureGarbageCollector","constructor","renderer","count","checkCount","maxIdle","settings","GC_MAX_IDLE","checkCountMax","GC_MAX_CHECK_COUNT","mode","GC_MODE","update","GC_MODES","MANUAL","run","tm","textureManager","managedTextures","_managedTextures","wasRemoved","i","length","texture","_glRenderTargets","touched","destroyTexture","j","unload","displayObject","_texture","children"],"sources":["../../../src/renderers/webgl/TextureGarbageCollector.js"],"sourcesContent":["import { GC_MODES } from \"../../const\";\nimport settings from \"../../settings\";\n\nexport default class TextureGarbageCollector {\n  constructor(renderer) {\n    this.renderer = renderer;\n\n    this.count = 0;\n    this.checkCount = 0;\n    this.maxIdle = settings.GC_MAX_IDLE;\n    this.checkCountMax = settings.GC_MAX_CHECK_COUNT;\n    this.mode = settings.GC_MODE;\n  }\n\n  update() {\n    this.count++;\n\n    if (this.mode === GC_MODES.MANUAL) {\n      return;\n    }\n\n    this.checkCount++;\n\n    if (this.checkCount > this.checkCountMax) {\n      this.checkCount = 0;\n\n      this.run();\n    }\n  }\n\n  run() {\n    const tm = this.renderer.textureManager;\n    const managedTextures = tm._managedTextures;\n    let wasRemoved = false;\n\n    for (let i = 0; i < managedTextures.length; i++) {\n      const texture = managedTextures[i];\n\n      // only supports non generated textures at the moment!\n      if (\n        !texture._glRenderTargets &&\n        this.count - texture.touched > this.maxIdle\n      ) {\n        tm.destroyTexture(texture, true);\n        managedTextures[i] = null;\n        wasRemoved = true;\n      }\n    }\n\n    if (wasRemoved) {\n      let j = 0;\n\n      for (let i = 0; i < managedTextures.length; i++) {\n        if (managedTextures[i] !== null) {\n          managedTextures[j++] = managedTextures[i];\n        }\n      }\n\n      managedTextures.length = j;\n    }\n  }\n\n  unload(displayObject) {\n    const tm = this.renderer.textureManager;\n\n    // only destroy non generated textures\n    if (displayObject._texture && displayObject._texture._glRenderTargets) {\n      tm.destroyTexture(displayObject._texture, true);\n    }\n\n    for (let i = displayObject.children.length - 1; i >= 0; i--) {\n      this.unload(displayObject.children[i]);\n    }\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AAAsC;AAEvB,MAAMA,uBAAuB,CAAC;EAC3CC,WAAW,CAACC,QAAQ,EAAE;IACpB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAExB,IAAI,CAACC,KAAK,GAAG,CAAC;IACd,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,OAAO,GAAGC,iBAAQ,CAACC,WAAW;IACnC,IAAI,CAACC,aAAa,GAAGF,iBAAQ,CAACG,kBAAkB;IAChD,IAAI,CAACC,IAAI,GAAGJ,iBAAQ,CAACK,OAAO;EAC9B;EAEAC,MAAM,GAAG;IACP,IAAI,CAACT,KAAK,EAAE;IAEZ,IAAI,IAAI,CAACO,IAAI,KAAKG,eAAQ,CAACC,MAAM,EAAE;MACjC;IACF;IAEA,IAAI,CAACV,UAAU,EAAE;IAEjB,IAAI,IAAI,CAACA,UAAU,GAAG,IAAI,CAACI,aAAa,EAAE;MACxC,IAAI,CAACJ,UAAU,GAAG,CAAC;MAEnB,IAAI,CAACW,GAAG,EAAE;IACZ;EACF;EAEAA,GAAG,GAAG;IACJ,IAAMC,EAAE,GAAG,IAAI,CAACd,QAAQ,CAACe,cAAc;IACvC,IAAMC,eAAe,GAAGF,EAAE,CAACG,gBAAgB;IAC3C,IAAIC,UAAU,GAAG,KAAK;IAEtB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,eAAe,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;MAC/C,IAAME,OAAO,GAAGL,eAAe,CAACG,CAAC,CAAC;;MAElC;MACA,IACE,CAACE,OAAO,CAACC,gBAAgB,IACzB,IAAI,CAACrB,KAAK,GAAGoB,OAAO,CAACE,OAAO,GAAG,IAAI,CAACpB,OAAO,EAC3C;QACAW,EAAE,CAACU,cAAc,CAACH,OAAO,EAAE,IAAI,CAAC;QAChCL,eAAe,CAACG,CAAC,CAAC,GAAG,IAAI;QACzBD,UAAU,GAAG,IAAI;MACnB;IACF;IAEA,IAAIA,UAAU,EAAE;MACd,IAAIO,CAAC,GAAG,CAAC;MAET,KAAK,IAAIN,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAGH,eAAe,CAACI,MAAM,EAAED,EAAC,EAAE,EAAE;QAC/C,IAAIH,eAAe,CAACG,EAAC,CAAC,KAAK,IAAI,EAAE;UAC/BH,eAAe,CAACS,CAAC,EAAE,CAAC,GAAGT,eAAe,CAACG,EAAC,CAAC;QAC3C;MACF;MAEAH,eAAe,CAACI,MAAM,GAAGK,CAAC;IAC5B;EACF;EAEAC,MAAM,CAACC,aAAa,EAAE;IACpB,IAAMb,EAAE,GAAG,IAAI,CAACd,QAAQ,CAACe,cAAc;;IAEvC;IACA,IAAIY,aAAa,CAACC,QAAQ,IAAID,aAAa,CAACC,QAAQ,CAACN,gBAAgB,EAAE;MACrER,EAAE,CAACU,cAAc,CAACG,aAAa,CAACC,QAAQ,EAAE,IAAI,CAAC;IACjD;IAEA,KAAK,IAAIT,CAAC,GAAGQ,aAAa,CAACE,QAAQ,CAACT,MAAM,GAAG,CAAC,EAAED,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC3D,IAAI,CAACO,MAAM,CAACC,aAAa,CAACE,QAAQ,CAACV,CAAC,CAAC,CAAC;IACxC;EACF;AACF;AAAC"}