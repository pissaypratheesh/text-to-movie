{"version":3,"file":"FilterManager.js","names":["FilterState","constructor","renderTarget","target","resolution","sourceFrame","Rectangle","destinationFrame","filters","clear","screenKey","FilterManager","WebGLManager","renderer","gl","quad","Quad","state","attribState","shaderCache","pool","filterData","managedFilters","on","onPrerender","_screenWidth","view","width","_screenHeight","height","pushFilter","_activeRenderTarget","filterStack","filterState","size","index","stack","currentState","renderTargetFrame","fullScreen","filterArea","x","y","screen","padding","targetBounds","getBounds","transform","autoFit","fit","pad","getPotRenderTarget","setFrame","bindRenderTarget","popFilter","lastState","map","upload","length","apply","freePotRenderTarget","flip","flop","i","t","applyFilter","filter","input","output","shader","glShaders","CONTEXT_UID","glShaderKey","Shader","vertexSrc","fragmentSrc","push","bindVao","initVao","vao","disable","SCISSOR_TEST","enable","maskManager","scissorRenderTarget","pushScissorMask","scissorData","bindShader","tex","emptyTextures","boundTextures","syncUniforms","setBlendMode","blendMode","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texture","draw","TRIANGLES","_glTextures","uniformData","uniforms","textureCount","filterClamp","data","type","baseTexture","bind","a","undefined","toArray","val","Float32Array","value","getRenderTarget","returnRenderTarget","calculateScreenSpaceMatrix","outputMatrix","filterTransforms","calculateNormalizedScreenSpaceMatrix","calculateSpriteMatrix","sprite","destroy","contextLost","off","emptyPool","minWidth","minHeight","key","bitTwiddle","nextPow2","pop","RenderTarget","defaultFrame","filterPoolKey","textures","j"],"sources":["../../../../src/renderers/webgl/managers/FilterManager.js"],"sourcesContent":["import WebGLManager from \"./WebGLManager\";\nimport RenderTarget from \"../utils/RenderTarget\";\nimport Quad from \"../utils/Quad\";\nimport { Rectangle } from \"../../../math\";\nimport Shader from \"../../../Shader\";\nimport * as filterTransforms from \"../filters/filterTransforms\";\nimport bitTwiddle from \"bit-twiddle\";\n\nclass FilterState {\n  constructor() {\n    this.renderTarget = null;\n    this.target = null;\n    this.resolution = 1;\n    this.sourceFrame = new Rectangle();\n    this.destinationFrame = new Rectangle();\n    this.filters = [];\n  }\n\n  clear() {\n    this.filters = null;\n    this.target = null;\n    this.renderTarget = null;\n  }\n}\n\nconst screenKey = \"screen\";\n\nexport default class FilterManager extends WebGLManager {\n  constructor(renderer) {\n    super(renderer);\n\n    this.gl = this.renderer.gl;\n    // know about sprites!\n    this.quad = new Quad(this.gl, renderer.state.attribState);\n\n    this.shaderCache = {};\n    // todo add default!\n    this.pool = {};\n    this.filterData = null;\n    this.managedFilters = [];\n    this.renderer.on(\"prerender\", this.onPrerender, this);\n\n    this._screenWidth = renderer.view.width;\n    this._screenHeight = renderer.view.height;\n  }\n\n  pushFilter(target, filters) {\n    const renderer = this.renderer;\n    let filterData = this.filterData;\n\n    if (!filterData) {\n      filterData = this.renderer._activeRenderTarget.filterStack;\n\n      // add new stack\n      const filterState = new FilterState();\n\n      filterState.sourceFrame = filterState.destinationFrame = this.renderer._activeRenderTarget.size;\n      filterState.renderTarget = renderer._activeRenderTarget;\n\n      this.renderer._activeRenderTarget.filterData = filterData = {\n        index: 0,\n        stack: [filterState]\n      };\n\n      this.filterData = filterData;\n    }\n\n    // get the current filter state..\n    let currentState = filterData.stack[++filterData.index];\n    const renderTargetFrame = filterData.stack[0].destinationFrame;\n\n    if (!currentState) {\n      currentState = filterData.stack[filterData.index] = new FilterState();\n    }\n\n    const fullScreen =\n      target.filterArea &&\n      target.filterArea.x === 0 &&\n      target.filterArea.y === 0 &&\n      target.filterArea.width === renderer.screen.width &&\n      target.filterArea.height === renderer.screen.height;\n\n    // for now we go off the filter of the first resolution..\n    const resolution = filters[0].resolution;\n    const padding = filters[0].padding | 0;\n    const targetBounds = fullScreen\n      ? renderer.screen\n      : target.filterArea || target.getBounds(true);\n    const sourceFrame = currentState.sourceFrame;\n    const destinationFrame = currentState.destinationFrame;\n\n    sourceFrame.x = ((targetBounds.x * resolution) | 0) / resolution;\n    sourceFrame.y = ((targetBounds.y * resolution) | 0) / resolution;\n    sourceFrame.width = ((targetBounds.width * resolution) | 0) / resolution;\n    sourceFrame.height = ((targetBounds.height * resolution) | 0) / resolution;\n\n    if (!fullScreen) {\n      if (filterData.stack[0].renderTarget.transform) {\n      } else if (filters[0].autoFit) {\n        sourceFrame.fit(renderTargetFrame);\n      }\n\n      sourceFrame.pad(padding);\n    }\n\n    destinationFrame.width = sourceFrame.width;\n    destinationFrame.height = sourceFrame.height;\n    const renderTarget = this.getPotRenderTarget(\n      renderer.gl,\n      sourceFrame.width,\n      sourceFrame.height,\n      resolution\n    );\n\n    currentState.target = target;\n    currentState.filters = filters;\n    currentState.resolution = resolution;\n    currentState.renderTarget = renderTarget;\n\n    renderTarget.setFrame(destinationFrame, sourceFrame);\n    renderer.bindRenderTarget(renderTarget);\n    renderTarget.clear();\n  }\n\n  popFilter() {\n    const filterData = this.filterData;\n    const lastState = filterData.stack[filterData.index - 1];\n    const currentState = filterData.stack[filterData.index];\n\n    this.quad\n      .map(currentState.renderTarget.size, currentState.sourceFrame)\n      .upload();\n\n    const filters = currentState.filters;\n\n    if (filters.length === 1) {\n      filters[0].apply(\n        this,\n        currentState.renderTarget,\n        lastState.renderTarget,\n        false,\n        currentState\n      );\n      this.freePotRenderTarget(currentState.renderTarget);\n    } else {\n      let flip = currentState.renderTarget;\n      let flop = this.getPotRenderTarget(\n        this.renderer.gl,\n        currentState.sourceFrame.width,\n        currentState.sourceFrame.height,\n        currentState.resolution\n      );\n\n      flop.setFrame(currentState.destinationFrame, currentState.sourceFrame);\n\n      // finally lets clear the render target before drawing to it..\n      flop.clear();\n\n      let i = 0;\n\n      for (i = 0; i < filters.length - 1; ++i) {\n        filters[i].apply(this, flip, flop, true, currentState);\n\n        const t = flip;\n\n        flip = flop;\n        flop = t;\n      }\n\n      filters[i].apply(this, flip, lastState.renderTarget, false, currentState);\n\n      this.freePotRenderTarget(flip);\n      this.freePotRenderTarget(flop);\n    }\n\n    currentState.clear();\n    filterData.index--;\n\n    if (filterData.index === 0) {\n      this.filterData = null;\n    }\n  }\n\n  applyFilter(filter, input, output, clear) {\n    const renderer = this.renderer;\n    const gl = renderer.gl;\n\n    let shader = filter.glShaders[renderer.CONTEXT_UID];\n\n    // caching..\n    if (!shader) {\n      if (filter.glShaderKey) {\n        shader = this.shaderCache[filter.glShaderKey];\n\n        if (!shader) {\n          shader = new Shader(this.gl, filter.vertexSrc, filter.fragmentSrc);\n\n          filter.glShaders[renderer.CONTEXT_UID] = this.shaderCache[\n            filter.glShaderKey\n          ] = shader;\n          this.managedFilters.push(filter);\n        }\n      } else {\n        shader = filter.glShaders[renderer.CONTEXT_UID] = new Shader(\n          this.gl,\n          filter.vertexSrc,\n          filter.fragmentSrc\n        );\n        this.managedFilters.push(filter);\n      }\n\n      // TODO - this only needs to be done once?\n      renderer.bindVao(null);\n\n      this.quad.initVao(shader);\n    }\n\n    renderer.bindVao(this.quad.vao);\n\n    renderer.bindRenderTarget(output);\n\n    if (clear) {\n      gl.disable(gl.SCISSOR_TEST);\n      renderer.clear(); // [1, 1, 1, 1]);\n      gl.enable(gl.SCISSOR_TEST);\n    }\n\n    // in case the render target is being masked using a scissor rect\n    if (output === renderer.maskManager.scissorRenderTarget) {\n      renderer.maskManager.pushScissorMask(\n        null,\n        renderer.maskManager.scissorData\n      );\n    }\n\n    renderer.bindShader(shader);\n\n    // free unit 0 for us, doesn't matter what was there\n    // don't try to restore it, because syncUniforms can upload it to another slot\n    // and it'll be a problem\n    const tex = this.renderer.emptyTextures[0];\n\n    this.renderer.boundTextures[0] = tex;\n    // this syncs the PixiJS filters  uniforms with glsl uniforms\n    this.syncUniforms(shader, filter);\n\n    renderer.state.setBlendMode(filter.blendMode);\n\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, input.texture.texture);\n\n    this.quad.vao.draw(this.renderer.gl.TRIANGLES, 6, 0);\n\n    gl.bindTexture(\n      gl.TEXTURE_2D,\n      tex._glTextures[this.renderer.CONTEXT_UID].texture\n    );\n  }\n\n  syncUniforms(shader, filter) {\n    const uniformData = filter.uniformData;\n    const uniforms = filter.uniforms;\n\n    // 0 is reserved for the PixiJS texture so we start at 1!\n    let textureCount = 1;\n    let currentState;\n\n    // filterArea and filterClamp that are handled by FilterManager directly\n    // they must not appear in uniformData\n\n    if (shader.uniforms.filterArea) {\n      currentState = this.filterData.stack[this.filterData.index];\n\n      const filterArea = shader.uniforms.filterArea;\n\n      filterArea[0] = currentState.renderTarget.size.width;\n      filterArea[1] = currentState.renderTarget.size.height;\n      filterArea[2] = currentState.sourceFrame.x;\n      filterArea[3] = currentState.sourceFrame.y;\n\n      shader.uniforms.filterArea = filterArea;\n    }\n\n    // use this to clamp displaced texture coords so they belong to filterArea\n    // see displacementFilter fragment shader for an example\n    if (shader.uniforms.filterClamp) {\n      currentState =\n        currentState || this.filterData.stack[this.filterData.index];\n\n      const filterClamp = shader.uniforms.filterClamp;\n\n      filterClamp[0] = 0;\n      filterClamp[1] = 0;\n      filterClamp[2] =\n        (currentState.sourceFrame.width - 1) /\n        currentState.renderTarget.size.width;\n      filterClamp[3] =\n        (currentState.sourceFrame.height - 1) /\n        currentState.renderTarget.size.height;\n\n      shader.uniforms.filterClamp = filterClamp;\n    }\n\n    // TODO Caching layer..\n    for (const i in uniformData) {\n      if (!shader.uniforms.data[i]) {\n        continue;\n      }\n\n      const type = uniformData[i].type;\n\n      if (type === \"sampler2d\" && uniforms[i] !== 0) {\n        if (uniforms[i].baseTexture) {\n          shader.uniforms[i] = this.renderer.bindTexture(\n            uniforms[i].baseTexture,\n            textureCount\n          );\n        } else {\n          shader.uniforms[i] = textureCount;\n\n          // TODO\n          // this is helpful as renderTargets can also be set.\n          // Although thinking about it, we could probably\n          // make the filter texture cache return a RenderTexture\n          // rather than a renderTarget\n          const gl = this.renderer.gl;\n\n          this.renderer.boundTextures[\n            textureCount\n          ] = this.renderer.emptyTextures[textureCount];\n          gl.activeTexture(gl.TEXTURE0 + textureCount);\n\n          uniforms[i].texture.bind();\n        }\n\n        textureCount++;\n      } else if (type === \"mat3\") {\n        // check if its PixiJS matrix..\n        if (uniforms[i].a !== undefined) {\n          shader.uniforms[i] = uniforms[i].toArray(true);\n        } else {\n          shader.uniforms[i] = uniforms[i];\n        }\n      } else if (type === \"vec2\") {\n        // check if its a point..\n        if (uniforms[i].x !== undefined) {\n          const val = shader.uniforms[i] || new Float32Array(2);\n\n          val[0] = uniforms[i].x;\n          val[1] = uniforms[i].y;\n          shader.uniforms[i] = val;\n        } else {\n          shader.uniforms[i] = uniforms[i];\n        }\n      } else if (type === \"float\") {\n        if (shader.uniforms.data[i].value !== uniformData[i]) {\n          shader.uniforms[i] = uniforms[i];\n        }\n      } else {\n        shader.uniforms[i] = uniforms[i];\n      }\n    }\n  }\n\n  getRenderTarget(clear, resolution) {\n    const currentState = this.filterData.stack[this.filterData.index];\n    const renderTarget = this.getPotRenderTarget(\n      this.renderer.gl,\n      currentState.sourceFrame.width,\n      currentState.sourceFrame.height,\n      resolution || currentState.resolution\n    );\n\n    renderTarget.setFrame(\n      currentState.destinationFrame,\n      currentState.sourceFrame\n    );\n\n    return renderTarget;\n  }\n\n  returnRenderTarget(renderTarget) {\n    this.freePotRenderTarget(renderTarget);\n  }\n\n  calculateScreenSpaceMatrix(outputMatrix) {\n    const currentState = this.filterData.stack[this.filterData.index];\n\n    return filterTransforms.calculateScreenSpaceMatrix(\n      outputMatrix,\n      currentState.sourceFrame,\n      currentState.renderTarget.size\n    );\n  }\n\n  calculateNormalizedScreenSpaceMatrix(outputMatrix) {\n    const currentState = this.filterData.stack[this.filterData.index];\n\n    return filterTransforms.calculateNormalizedScreenSpaceMatrix(\n      outputMatrix,\n      currentState.sourceFrame,\n      currentState.renderTarget.size,\n      currentState.destinationFrame\n    );\n  }\n\n  calculateSpriteMatrix(outputMatrix, sprite) {\n    const currentState = this.filterData.stack[this.filterData.index];\n\n    return filterTransforms.calculateSpriteMatrix(\n      outputMatrix,\n      currentState.sourceFrame,\n      currentState.renderTarget.size,\n      sprite\n    );\n  }\n\n  destroy(contextLost = false) {\n    const renderer = this.renderer;\n    const filters = this.managedFilters;\n\n    renderer.off(\"prerender\", this.onPrerender, this);\n\n    for (let i = 0; i < filters.length; i++) {\n      if (!contextLost) {\n        filters[i].glShaders[renderer.CONTEXT_UID].destroy();\n      }\n      delete filters[i].glShaders[renderer.CONTEXT_UID];\n    }\n\n    this.shaderCache = {};\n    if (!contextLost) {\n      this.emptyPool();\n    } else {\n      this.pool = {};\n    }\n  }\n\n  getPotRenderTarget(gl, minWidth, minHeight, resolution) {\n    let key = screenKey;\n\n    minWidth *= resolution;\n    minHeight *= resolution;\n\n    if (minWidth !== this._screenWidth || minHeight !== this._screenHeight) {\n      // TODO you could return a bigger texture if there is not one in the pool?\n      minWidth = bitTwiddle.nextPow2(minWidth);\n      minHeight = bitTwiddle.nextPow2(minHeight);\n      key = ((minWidth & 0xffff) << 16) | (minHeight & 0xffff);\n    }\n\n    if (!this.pool[key]) {\n      this.pool[key] = [];\n    }\n\n    let renderTarget = this.pool[key].pop();\n\n    // creating render target will cause texture to be bound!\n    if (!renderTarget) {\n      // temporary bypass cache..\n      const tex = this.renderer.boundTextures[0];\n\n      gl.activeTexture(gl.TEXTURE0);\n\n      // internally - this will cause a texture to be bound..\n      renderTarget = new RenderTarget(gl, minWidth, minHeight, null, 1);\n\n      // set the current one back\n      gl.bindTexture(\n        gl.TEXTURE_2D,\n        tex._glTextures[this.renderer.CONTEXT_UID].texture\n      );\n    }\n\n    // manually tweak the resolution...\n    // this will not modify the size of the frame buffer, just its resolution.\n    renderTarget.resolution = resolution;\n    renderTarget.defaultFrame.width = renderTarget.size.width =\n      minWidth / resolution;\n    renderTarget.defaultFrame.height = renderTarget.size.height =\n      minHeight / resolution;\n    renderTarget.filterPoolKey = key;\n\n    return renderTarget;\n  }\n\n  emptyPool() {\n    for (const i in this.pool) {\n      const textures = this.pool[i];\n\n      if (textures) {\n        for (let j = 0; j < textures.length; j++) {\n          textures[j].destroy(true);\n        }\n      }\n    }\n\n    this.pool = {};\n  }\n\n  freePotRenderTarget(renderTarget) {\n    this.pool[renderTarget.filterPoolKey].push(renderTarget);\n  }\n\n  onPrerender() {\n    if (\n      this._screenWidth !== this.renderer.view.width ||\n      this._screenHeight !== this.renderer.view.height\n    ) {\n      this._screenWidth = this.renderer.view.width;\n      this._screenHeight = this.renderer.view.height;\n\n      const textures = this.pool[screenKey];\n\n      if (textures) {\n        for (let j = 0; j < textures.length; j++) {\n          textures[j].destroy(true);\n        }\n      }\n      this.pool[screenKey] = [];\n    }\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAqC;AAAA;AAAA;AAErC,MAAMA,WAAW,CAAC;EAChBC,WAAW,GAAG;IACZ,IAAI,CAACC,YAAY,GAAG,IAAI;IACxB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,UAAU,GAAG,CAAC;IACnB,IAAI,CAACC,WAAW,GAAG,IAAIC,eAAS,EAAE;IAClC,IAAI,CAACC,gBAAgB,GAAG,IAAID,eAAS,EAAE;IACvC,IAAI,CAACE,OAAO,GAAG,EAAE;EACnB;EAEAC,KAAK,GAAG;IACN,IAAI,CAACD,OAAO,GAAG,IAAI;IACnB,IAAI,CAACL,MAAM,GAAG,IAAI;IAClB,IAAI,CAACD,YAAY,GAAG,IAAI;EAC1B;AACF;AAEA,IAAMQ,SAAS,GAAG,QAAQ;AAEX,MAAMC,aAAa,SAASC,qBAAY,CAAC;EACtDX,WAAW,CAACY,QAAQ,EAAE;IACpB,KAAK,CAACA,QAAQ,CAAC;IAEf,IAAI,CAACC,EAAE,GAAG,IAAI,CAACD,QAAQ,CAACC,EAAE;IAC1B;IACA,IAAI,CAACC,IAAI,GAAG,IAAIC,aAAI,CAAC,IAAI,CAACF,EAAE,EAAED,QAAQ,CAACI,KAAK,CAACC,WAAW,CAAC;IAEzD,IAAI,CAACC,WAAW,GAAG,CAAC,CAAC;IACrB;IACA,IAAI,CAACC,IAAI,GAAG,CAAC,CAAC;IACd,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACC,cAAc,GAAG,EAAE;IACxB,IAAI,CAACT,QAAQ,CAACU,EAAE,CAAC,WAAW,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAAC;IAErD,IAAI,CAACC,YAAY,GAAGZ,QAAQ,CAACa,IAAI,CAACC,KAAK;IACvC,IAAI,CAACC,aAAa,GAAGf,QAAQ,CAACa,IAAI,CAACG,MAAM;EAC3C;EAEAC,UAAU,CAAC3B,MAAM,EAAEK,OAAO,EAAE;IAC1B,IAAMK,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,IAAIQ,UAAU,GAAG,IAAI,CAACA,UAAU;IAEhC,IAAI,CAACA,UAAU,EAAE;MACfA,UAAU,GAAG,IAAI,CAACR,QAAQ,CAACkB,mBAAmB,CAACC,WAAW;;MAE1D;MACA,IAAMC,WAAW,GAAG,IAAIjC,WAAW,EAAE;MAErCiC,WAAW,CAAC5B,WAAW,GAAG4B,WAAW,CAAC1B,gBAAgB,GAAG,IAAI,CAACM,QAAQ,CAACkB,mBAAmB,CAACG,IAAI;MAC/FD,WAAW,CAAC/B,YAAY,GAAGW,QAAQ,CAACkB,mBAAmB;MAEvD,IAAI,CAAClB,QAAQ,CAACkB,mBAAmB,CAACV,UAAU,GAAGA,UAAU,GAAG;QAC1Dc,KAAK,EAAE,CAAC;QACRC,KAAK,EAAE,CAACH,WAAW;MACrB,CAAC;MAED,IAAI,CAACZ,UAAU,GAAGA,UAAU;IAC9B;;IAEA;IACA,IAAIgB,YAAY,GAAGhB,UAAU,CAACe,KAAK,CAAC,EAAEf,UAAU,CAACc,KAAK,CAAC;IACvD,IAAMG,iBAAiB,GAAGjB,UAAU,CAACe,KAAK,CAAC,CAAC,CAAC,CAAC7B,gBAAgB;IAE9D,IAAI,CAAC8B,YAAY,EAAE;MACjBA,YAAY,GAAGhB,UAAU,CAACe,KAAK,CAACf,UAAU,CAACc,KAAK,CAAC,GAAG,IAAInC,WAAW,EAAE;IACvE;IAEA,IAAMuC,UAAU,GACdpC,MAAM,CAACqC,UAAU,IACjBrC,MAAM,CAACqC,UAAU,CAACC,CAAC,KAAK,CAAC,IACzBtC,MAAM,CAACqC,UAAU,CAACE,CAAC,KAAK,CAAC,IACzBvC,MAAM,CAACqC,UAAU,CAACb,KAAK,KAAKd,QAAQ,CAAC8B,MAAM,CAAChB,KAAK,IACjDxB,MAAM,CAACqC,UAAU,CAACX,MAAM,KAAKhB,QAAQ,CAAC8B,MAAM,CAACd,MAAM;;IAErD;IACA,IAAMzB,UAAU,GAAGI,OAAO,CAAC,CAAC,CAAC,CAACJ,UAAU;IACxC,IAAMwC,OAAO,GAAGpC,OAAO,CAAC,CAAC,CAAC,CAACoC,OAAO,GAAG,CAAC;IACtC,IAAMC,YAAY,GAAGN,UAAU,GAC3B1B,QAAQ,CAAC8B,MAAM,GACfxC,MAAM,CAACqC,UAAU,IAAIrC,MAAM,CAAC2C,SAAS,CAAC,IAAI,CAAC;IAC/C,IAAMzC,WAAW,GAAGgC,YAAY,CAAChC,WAAW;IAC5C,IAAME,gBAAgB,GAAG8B,YAAY,CAAC9B,gBAAgB;IAEtDF,WAAW,CAACoC,CAAC,GAAG,CAAEI,YAAY,CAACJ,CAAC,GAAGrC,UAAU,GAAI,CAAC,IAAIA,UAAU;IAChEC,WAAW,CAACqC,CAAC,GAAG,CAAEG,YAAY,CAACH,CAAC,GAAGtC,UAAU,GAAI,CAAC,IAAIA,UAAU;IAChEC,WAAW,CAACsB,KAAK,GAAG,CAAEkB,YAAY,CAAClB,KAAK,GAAGvB,UAAU,GAAI,CAAC,IAAIA,UAAU;IACxEC,WAAW,CAACwB,MAAM,GAAG,CAAEgB,YAAY,CAAChB,MAAM,GAAGzB,UAAU,GAAI,CAAC,IAAIA,UAAU;IAE1E,IAAI,CAACmC,UAAU,EAAE;MACf,IAAIlB,UAAU,CAACe,KAAK,CAAC,CAAC,CAAC,CAAClC,YAAY,CAAC6C,SAAS,EAAE,CAChD,CAAC,MAAM,IAAIvC,OAAO,CAAC,CAAC,CAAC,CAACwC,OAAO,EAAE;QAC7B3C,WAAW,CAAC4C,GAAG,CAACX,iBAAiB,CAAC;MACpC;MAEAjC,WAAW,CAAC6C,GAAG,CAACN,OAAO,CAAC;IAC1B;IAEArC,gBAAgB,CAACoB,KAAK,GAAGtB,WAAW,CAACsB,KAAK;IAC1CpB,gBAAgB,CAACsB,MAAM,GAAGxB,WAAW,CAACwB,MAAM;IAC5C,IAAM3B,YAAY,GAAG,IAAI,CAACiD,kBAAkB,CAC1CtC,QAAQ,CAACC,EAAE,EACXT,WAAW,CAACsB,KAAK,EACjBtB,WAAW,CAACwB,MAAM,EAClBzB,UAAU,CACX;IAEDiC,YAAY,CAAClC,MAAM,GAAGA,MAAM;IAC5BkC,YAAY,CAAC7B,OAAO,GAAGA,OAAO;IAC9B6B,YAAY,CAACjC,UAAU,GAAGA,UAAU;IACpCiC,YAAY,CAACnC,YAAY,GAAGA,YAAY;IAExCA,YAAY,CAACkD,QAAQ,CAAC7C,gBAAgB,EAAEF,WAAW,CAAC;IACpDQ,QAAQ,CAACwC,gBAAgB,CAACnD,YAAY,CAAC;IACvCA,YAAY,CAACO,KAAK,EAAE;EACtB;EAEA6C,SAAS,GAAG;IACV,IAAMjC,UAAU,GAAG,IAAI,CAACA,UAAU;IAClC,IAAMkC,SAAS,GAAGlC,UAAU,CAACe,KAAK,CAACf,UAAU,CAACc,KAAK,GAAG,CAAC,CAAC;IACxD,IAAME,YAAY,GAAGhB,UAAU,CAACe,KAAK,CAACf,UAAU,CAACc,KAAK,CAAC;IAEvD,IAAI,CAACpB,IAAI,CACNyC,GAAG,CAACnB,YAAY,CAACnC,YAAY,CAACgC,IAAI,EAAEG,YAAY,CAAChC,WAAW,CAAC,CAC7DoD,MAAM,EAAE;IAEX,IAAMjD,OAAO,GAAG6B,YAAY,CAAC7B,OAAO;IAEpC,IAAIA,OAAO,CAACkD,MAAM,KAAK,CAAC,EAAE;MACxBlD,OAAO,CAAC,CAAC,CAAC,CAACmD,KAAK,CACd,IAAI,EACJtB,YAAY,CAACnC,YAAY,EACzBqD,SAAS,CAACrD,YAAY,EACtB,KAAK,EACLmC,YAAY,CACb;MACD,IAAI,CAACuB,mBAAmB,CAACvB,YAAY,CAACnC,YAAY,CAAC;IACrD,CAAC,MAAM;MACL,IAAI2D,IAAI,GAAGxB,YAAY,CAACnC,YAAY;MACpC,IAAI4D,IAAI,GAAG,IAAI,CAACX,kBAAkB,CAChC,IAAI,CAACtC,QAAQ,CAACC,EAAE,EAChBuB,YAAY,CAAChC,WAAW,CAACsB,KAAK,EAC9BU,YAAY,CAAChC,WAAW,CAACwB,MAAM,EAC/BQ,YAAY,CAACjC,UAAU,CACxB;MAED0D,IAAI,CAACV,QAAQ,CAACf,YAAY,CAAC9B,gBAAgB,EAAE8B,YAAY,CAAChC,WAAW,CAAC;;MAEtE;MACAyD,IAAI,CAACrD,KAAK,EAAE;MAEZ,IAAIsD,CAAC,GAAG,CAAC;MAET,KAAKA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvD,OAAO,CAACkD,MAAM,GAAG,CAAC,EAAE,EAAEK,CAAC,EAAE;QACvCvD,OAAO,CAACuD,CAAC,CAAC,CAACJ,KAAK,CAAC,IAAI,EAAEE,IAAI,EAAEC,IAAI,EAAE,IAAI,EAAEzB,YAAY,CAAC;QAEtD,IAAM2B,CAAC,GAAGH,IAAI;QAEdA,IAAI,GAAGC,IAAI;QACXA,IAAI,GAAGE,CAAC;MACV;MAEAxD,OAAO,CAACuD,CAAC,CAAC,CAACJ,KAAK,CAAC,IAAI,EAAEE,IAAI,EAAEN,SAAS,CAACrD,YAAY,EAAE,KAAK,EAAEmC,YAAY,CAAC;MAEzE,IAAI,CAACuB,mBAAmB,CAACC,IAAI,CAAC;MAC9B,IAAI,CAACD,mBAAmB,CAACE,IAAI,CAAC;IAChC;IAEAzB,YAAY,CAAC5B,KAAK,EAAE;IACpBY,UAAU,CAACc,KAAK,EAAE;IAElB,IAAId,UAAU,CAACc,KAAK,KAAK,CAAC,EAAE;MAC1B,IAAI,CAACd,UAAU,GAAG,IAAI;IACxB;EACF;EAEA4C,WAAW,CAACC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAE3D,KAAK,EAAE;IACxC,IAAMI,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,IAAMC,EAAE,GAAGD,QAAQ,CAACC,EAAE;IAEtB,IAAIuD,MAAM,GAAGH,MAAM,CAACI,SAAS,CAACzD,QAAQ,CAAC0D,WAAW,CAAC;;IAEnD;IACA,IAAI,CAACF,MAAM,EAAE;MACX,IAAIH,MAAM,CAACM,WAAW,EAAE;QACtBH,MAAM,GAAG,IAAI,CAAClD,WAAW,CAAC+C,MAAM,CAACM,WAAW,CAAC;QAE7C,IAAI,CAACH,MAAM,EAAE;UACXA,MAAM,GAAG,IAAII,eAAM,CAAC,IAAI,CAAC3D,EAAE,EAAEoD,MAAM,CAACQ,SAAS,EAAER,MAAM,CAACS,WAAW,CAAC;UAElET,MAAM,CAACI,SAAS,CAACzD,QAAQ,CAAC0D,WAAW,CAAC,GAAG,IAAI,CAACpD,WAAW,CACvD+C,MAAM,CAACM,WAAW,CACnB,GAAGH,MAAM;UACV,IAAI,CAAC/C,cAAc,CAACsD,IAAI,CAACV,MAAM,CAAC;QAClC;MACF,CAAC,MAAM;QACLG,MAAM,GAAGH,MAAM,CAACI,SAAS,CAACzD,QAAQ,CAAC0D,WAAW,CAAC,GAAG,IAAIE,eAAM,CAC1D,IAAI,CAAC3D,EAAE,EACPoD,MAAM,CAACQ,SAAS,EAChBR,MAAM,CAACS,WAAW,CACnB;QACD,IAAI,CAACrD,cAAc,CAACsD,IAAI,CAACV,MAAM,CAAC;MAClC;;MAEA;MACArD,QAAQ,CAACgE,OAAO,CAAC,IAAI,CAAC;MAEtB,IAAI,CAAC9D,IAAI,CAAC+D,OAAO,CAACT,MAAM,CAAC;IAC3B;IAEAxD,QAAQ,CAACgE,OAAO,CAAC,IAAI,CAAC9D,IAAI,CAACgE,GAAG,CAAC;IAE/BlE,QAAQ,CAACwC,gBAAgB,CAACe,MAAM,CAAC;IAEjC,IAAI3D,KAAK,EAAE;MACTK,EAAE,CAACkE,OAAO,CAAClE,EAAE,CAACmE,YAAY,CAAC;MAC3BpE,QAAQ,CAACJ,KAAK,EAAE,CAAC,CAAC;MAClBK,EAAE,CAACoE,MAAM,CAACpE,EAAE,CAACmE,YAAY,CAAC;IAC5B;;IAEA;IACA,IAAIb,MAAM,KAAKvD,QAAQ,CAACsE,WAAW,CAACC,mBAAmB,EAAE;MACvDvE,QAAQ,CAACsE,WAAW,CAACE,eAAe,CAClC,IAAI,EACJxE,QAAQ,CAACsE,WAAW,CAACG,WAAW,CACjC;IACH;IAEAzE,QAAQ,CAAC0E,UAAU,CAAClB,MAAM,CAAC;;IAE3B;IACA;IACA;IACA,IAAMmB,GAAG,GAAG,IAAI,CAAC3E,QAAQ,CAAC4E,aAAa,CAAC,CAAC,CAAC;IAE1C,IAAI,CAAC5E,QAAQ,CAAC6E,aAAa,CAAC,CAAC,CAAC,GAAGF,GAAG;IACpC;IACA,IAAI,CAACG,YAAY,CAACtB,MAAM,EAAEH,MAAM,CAAC;IAEjCrD,QAAQ,CAACI,KAAK,CAAC2E,YAAY,CAAC1B,MAAM,CAAC2B,SAAS,CAAC;IAE7C/E,EAAE,CAACgF,aAAa,CAAChF,EAAE,CAACiF,QAAQ,CAAC;IAC7BjF,EAAE,CAACkF,WAAW,CAAClF,EAAE,CAACmF,UAAU,EAAE9B,KAAK,CAAC+B,OAAO,CAACA,OAAO,CAAC;IAEpD,IAAI,CAACnF,IAAI,CAACgE,GAAG,CAACoB,IAAI,CAAC,IAAI,CAACtF,QAAQ,CAACC,EAAE,CAACsF,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;IAEpDtF,EAAE,CAACkF,WAAW,CACZlF,EAAE,CAACmF,UAAU,EACbT,GAAG,CAACa,WAAW,CAAC,IAAI,CAACxF,QAAQ,CAAC0D,WAAW,CAAC,CAAC2B,OAAO,CACnD;EACH;EAEAP,YAAY,CAACtB,MAAM,EAAEH,MAAM,EAAE;IAC3B,IAAMoC,WAAW,GAAGpC,MAAM,CAACoC,WAAW;IACtC,IAAMC,QAAQ,GAAGrC,MAAM,CAACqC,QAAQ;;IAEhC;IACA,IAAIC,YAAY,GAAG,CAAC;IACpB,IAAInE,YAAY;;IAEhB;IACA;;IAEA,IAAIgC,MAAM,CAACkC,QAAQ,CAAC/D,UAAU,EAAE;MAC9BH,YAAY,GAAG,IAAI,CAAChB,UAAU,CAACe,KAAK,CAAC,IAAI,CAACf,UAAU,CAACc,KAAK,CAAC;MAE3D,IAAMK,UAAU,GAAG6B,MAAM,CAACkC,QAAQ,CAAC/D,UAAU;MAE7CA,UAAU,CAAC,CAAC,CAAC,GAAGH,YAAY,CAACnC,YAAY,CAACgC,IAAI,CAACP,KAAK;MACpDa,UAAU,CAAC,CAAC,CAAC,GAAGH,YAAY,CAACnC,YAAY,CAACgC,IAAI,CAACL,MAAM;MACrDW,UAAU,CAAC,CAAC,CAAC,GAAGH,YAAY,CAAChC,WAAW,CAACoC,CAAC;MAC1CD,UAAU,CAAC,CAAC,CAAC,GAAGH,YAAY,CAAChC,WAAW,CAACqC,CAAC;MAE1C2B,MAAM,CAACkC,QAAQ,CAAC/D,UAAU,GAAGA,UAAU;IACzC;;IAEA;IACA;IACA,IAAI6B,MAAM,CAACkC,QAAQ,CAACE,WAAW,EAAE;MAC/BpE,YAAY,GACVA,YAAY,IAAI,IAAI,CAAChB,UAAU,CAACe,KAAK,CAAC,IAAI,CAACf,UAAU,CAACc,KAAK,CAAC;MAE9D,IAAMsE,WAAW,GAAGpC,MAAM,CAACkC,QAAQ,CAACE,WAAW;MAE/CA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;MAClBA,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC;MAClBA,WAAW,CAAC,CAAC,CAAC,GACZ,CAACpE,YAAY,CAAChC,WAAW,CAACsB,KAAK,GAAG,CAAC,IACnCU,YAAY,CAACnC,YAAY,CAACgC,IAAI,CAACP,KAAK;MACtC8E,WAAW,CAAC,CAAC,CAAC,GACZ,CAACpE,YAAY,CAAChC,WAAW,CAACwB,MAAM,GAAG,CAAC,IACpCQ,YAAY,CAACnC,YAAY,CAACgC,IAAI,CAACL,MAAM;MAEvCwC,MAAM,CAACkC,QAAQ,CAACE,WAAW,GAAGA,WAAW;IAC3C;;IAEA;IACA,KAAK,IAAM1C,CAAC,IAAIuC,WAAW,EAAE;MAC3B,IAAI,CAACjC,MAAM,CAACkC,QAAQ,CAACG,IAAI,CAAC3C,CAAC,CAAC,EAAE;QAC5B;MACF;MAEA,IAAM4C,IAAI,GAAGL,WAAW,CAACvC,CAAC,CAAC,CAAC4C,IAAI;MAEhC,IAAIA,IAAI,KAAK,WAAW,IAAIJ,QAAQ,CAACxC,CAAC,CAAC,KAAK,CAAC,EAAE;QAC7C,IAAIwC,QAAQ,CAACxC,CAAC,CAAC,CAAC6C,WAAW,EAAE;UAC3BvC,MAAM,CAACkC,QAAQ,CAACxC,CAAC,CAAC,GAAG,IAAI,CAAClD,QAAQ,CAACmF,WAAW,CAC5CO,QAAQ,CAACxC,CAAC,CAAC,CAAC6C,WAAW,EACvBJ,YAAY,CACb;QACH,CAAC,MAAM;UACLnC,MAAM,CAACkC,QAAQ,CAACxC,CAAC,CAAC,GAAGyC,YAAY;;UAEjC;UACA;UACA;UACA;UACA;UACA,IAAM1F,EAAE,GAAG,IAAI,CAACD,QAAQ,CAACC,EAAE;UAE3B,IAAI,CAACD,QAAQ,CAAC6E,aAAa,CACzBc,YAAY,CACb,GAAG,IAAI,CAAC3F,QAAQ,CAAC4E,aAAa,CAACe,YAAY,CAAC;UAC7C1F,EAAE,CAACgF,aAAa,CAAChF,EAAE,CAACiF,QAAQ,GAAGS,YAAY,CAAC;UAE5CD,QAAQ,CAACxC,CAAC,CAAC,CAACmC,OAAO,CAACW,IAAI,EAAE;QAC5B;QAEAL,YAAY,EAAE;MAChB,CAAC,MAAM,IAAIG,IAAI,KAAK,MAAM,EAAE;QAC1B;QACA,IAAIJ,QAAQ,CAACxC,CAAC,CAAC,CAAC+C,CAAC,KAAKC,SAAS,EAAE;UAC/B1C,MAAM,CAACkC,QAAQ,CAACxC,CAAC,CAAC,GAAGwC,QAAQ,CAACxC,CAAC,CAAC,CAACiD,OAAO,CAAC,IAAI,CAAC;QAChD,CAAC,MAAM;UACL3C,MAAM,CAACkC,QAAQ,CAACxC,CAAC,CAAC,GAAGwC,QAAQ,CAACxC,CAAC,CAAC;QAClC;MACF,CAAC,MAAM,IAAI4C,IAAI,KAAK,MAAM,EAAE;QAC1B;QACA,IAAIJ,QAAQ,CAACxC,CAAC,CAAC,CAACtB,CAAC,KAAKsE,SAAS,EAAE;UAC/B,IAAME,GAAG,GAAG5C,MAAM,CAACkC,QAAQ,CAACxC,CAAC,CAAC,IAAI,IAAImD,YAAY,CAAC,CAAC,CAAC;UAErDD,GAAG,CAAC,CAAC,CAAC,GAAGV,QAAQ,CAACxC,CAAC,CAAC,CAACtB,CAAC;UACtBwE,GAAG,CAAC,CAAC,CAAC,GAAGV,QAAQ,CAACxC,CAAC,CAAC,CAACrB,CAAC;UACtB2B,MAAM,CAACkC,QAAQ,CAACxC,CAAC,CAAC,GAAGkD,GAAG;QAC1B,CAAC,MAAM;UACL5C,MAAM,CAACkC,QAAQ,CAACxC,CAAC,CAAC,GAAGwC,QAAQ,CAACxC,CAAC,CAAC;QAClC;MACF,CAAC,MAAM,IAAI4C,IAAI,KAAK,OAAO,EAAE;QAC3B,IAAItC,MAAM,CAACkC,QAAQ,CAACG,IAAI,CAAC3C,CAAC,CAAC,CAACoD,KAAK,KAAKb,WAAW,CAACvC,CAAC,CAAC,EAAE;UACpDM,MAAM,CAACkC,QAAQ,CAACxC,CAAC,CAAC,GAAGwC,QAAQ,CAACxC,CAAC,CAAC;QAClC;MACF,CAAC,MAAM;QACLM,MAAM,CAACkC,QAAQ,CAACxC,CAAC,CAAC,GAAGwC,QAAQ,CAACxC,CAAC,CAAC;MAClC;IACF;EACF;EAEAqD,eAAe,CAAC3G,KAAK,EAAEL,UAAU,EAAE;IACjC,IAAMiC,YAAY,GAAG,IAAI,CAAChB,UAAU,CAACe,KAAK,CAAC,IAAI,CAACf,UAAU,CAACc,KAAK,CAAC;IACjE,IAAMjC,YAAY,GAAG,IAAI,CAACiD,kBAAkB,CAC1C,IAAI,CAACtC,QAAQ,CAACC,EAAE,EAChBuB,YAAY,CAAChC,WAAW,CAACsB,KAAK,EAC9BU,YAAY,CAAChC,WAAW,CAACwB,MAAM,EAC/BzB,UAAU,IAAIiC,YAAY,CAACjC,UAAU,CACtC;IAEDF,YAAY,CAACkD,QAAQ,CACnBf,YAAY,CAAC9B,gBAAgB,EAC7B8B,YAAY,CAAChC,WAAW,CACzB;IAED,OAAOH,YAAY;EACrB;EAEAmH,kBAAkB,CAACnH,YAAY,EAAE;IAC/B,IAAI,CAAC0D,mBAAmB,CAAC1D,YAAY,CAAC;EACxC;EAEAoH,0BAA0B,CAACC,YAAY,EAAE;IACvC,IAAMlF,YAAY,GAAG,IAAI,CAAChB,UAAU,CAACe,KAAK,CAAC,IAAI,CAACf,UAAU,CAACc,KAAK,CAAC;IAEjE,OAAOqF,gBAAgB,CAACF,0BAA0B,CAChDC,YAAY,EACZlF,YAAY,CAAChC,WAAW,EACxBgC,YAAY,CAACnC,YAAY,CAACgC,IAAI,CAC/B;EACH;EAEAuF,oCAAoC,CAACF,YAAY,EAAE;IACjD,IAAMlF,YAAY,GAAG,IAAI,CAAChB,UAAU,CAACe,KAAK,CAAC,IAAI,CAACf,UAAU,CAACc,KAAK,CAAC;IAEjE,OAAOqF,gBAAgB,CAACC,oCAAoC,CAC1DF,YAAY,EACZlF,YAAY,CAAChC,WAAW,EACxBgC,YAAY,CAACnC,YAAY,CAACgC,IAAI,EAC9BG,YAAY,CAAC9B,gBAAgB,CAC9B;EACH;EAEAmH,qBAAqB,CAACH,YAAY,EAAEI,MAAM,EAAE;IAC1C,IAAMtF,YAAY,GAAG,IAAI,CAAChB,UAAU,CAACe,KAAK,CAAC,IAAI,CAACf,UAAU,CAACc,KAAK,CAAC;IAEjE,OAAOqF,gBAAgB,CAACE,qBAAqB,CAC3CH,YAAY,EACZlF,YAAY,CAAChC,WAAW,EACxBgC,YAAY,CAACnC,YAAY,CAACgC,IAAI,EAC9ByF,MAAM,CACP;EACH;EAEAC,OAAO,CAACC,WAAW,EAAU;IAAA,IAArBA,WAAW;MAAXA,WAAW,GAAG,KAAK;IAAA;IACzB,IAAMhH,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,IAAML,OAAO,GAAG,IAAI,CAACc,cAAc;IAEnCT,QAAQ,CAACiH,GAAG,CAAC,WAAW,EAAE,IAAI,CAACtG,WAAW,EAAE,IAAI,CAAC;IAEjD,KAAK,IAAIuC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvD,OAAO,CAACkD,MAAM,EAAEK,CAAC,EAAE,EAAE;MACvC,IAAI,CAAC8D,WAAW,EAAE;QAChBrH,OAAO,CAACuD,CAAC,CAAC,CAACO,SAAS,CAACzD,QAAQ,CAAC0D,WAAW,CAAC,CAACqD,OAAO,EAAE;MACtD;MACA,OAAOpH,OAAO,CAACuD,CAAC,CAAC,CAACO,SAAS,CAACzD,QAAQ,CAAC0D,WAAW,CAAC;IACnD;IAEA,IAAI,CAACpD,WAAW,GAAG,CAAC,CAAC;IACrB,IAAI,CAAC0G,WAAW,EAAE;MAChB,IAAI,CAACE,SAAS,EAAE;IAClB,CAAC,MAAM;MACL,IAAI,CAAC3G,IAAI,GAAG,CAAC,CAAC;IAChB;EACF;EAEA+B,kBAAkB,CAACrC,EAAE,EAAEkH,QAAQ,EAAEC,SAAS,EAAE7H,UAAU,EAAE;IACtD,IAAI8H,GAAG,GAAGxH,SAAS;IAEnBsH,QAAQ,IAAI5H,UAAU;IACtB6H,SAAS,IAAI7H,UAAU;IAEvB,IAAI4H,QAAQ,KAAK,IAAI,CAACvG,YAAY,IAAIwG,SAAS,KAAK,IAAI,CAACrG,aAAa,EAAE;MACtE;MACAoG,QAAQ,GAAGG,mBAAU,CAACC,QAAQ,CAACJ,QAAQ,CAAC;MACxCC,SAAS,GAAGE,mBAAU,CAACC,QAAQ,CAACH,SAAS,CAAC;MAC1CC,GAAG,GAAI,CAACF,QAAQ,GAAG,MAAM,KAAK,EAAE,GAAKC,SAAS,GAAG,MAAO;IAC1D;IAEA,IAAI,CAAC,IAAI,CAAC7G,IAAI,CAAC8G,GAAG,CAAC,EAAE;MACnB,IAAI,CAAC9G,IAAI,CAAC8G,GAAG,CAAC,GAAG,EAAE;IACrB;IAEA,IAAIhI,YAAY,GAAG,IAAI,CAACkB,IAAI,CAAC8G,GAAG,CAAC,CAACG,GAAG,EAAE;;IAEvC;IACA,IAAI,CAACnI,YAAY,EAAE;MACjB;MACA,IAAMsF,GAAG,GAAG,IAAI,CAAC3E,QAAQ,CAAC6E,aAAa,CAAC,CAAC,CAAC;MAE1C5E,EAAE,CAACgF,aAAa,CAAChF,EAAE,CAACiF,QAAQ,CAAC;;MAE7B;MACA7F,YAAY,GAAG,IAAIoI,qBAAY,CAACxH,EAAE,EAAEkH,QAAQ,EAAEC,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;;MAEjE;MACAnH,EAAE,CAACkF,WAAW,CACZlF,EAAE,CAACmF,UAAU,EACbT,GAAG,CAACa,WAAW,CAAC,IAAI,CAACxF,QAAQ,CAAC0D,WAAW,CAAC,CAAC2B,OAAO,CACnD;IACH;;IAEA;IACA;IACAhG,YAAY,CAACE,UAAU,GAAGA,UAAU;IACpCF,YAAY,CAACqI,YAAY,CAAC5G,KAAK,GAAGzB,YAAY,CAACgC,IAAI,CAACP,KAAK,GACvDqG,QAAQ,GAAG5H,UAAU;IACvBF,YAAY,CAACqI,YAAY,CAAC1G,MAAM,GAAG3B,YAAY,CAACgC,IAAI,CAACL,MAAM,GACzDoG,SAAS,GAAG7H,UAAU;IACxBF,YAAY,CAACsI,aAAa,GAAGN,GAAG;IAEhC,OAAOhI,YAAY;EACrB;EAEA6H,SAAS,GAAG;IACV,KAAK,IAAMhE,CAAC,IAAI,IAAI,CAAC3C,IAAI,EAAE;MACzB,IAAMqH,QAAQ,GAAG,IAAI,CAACrH,IAAI,CAAC2C,CAAC,CAAC;MAE7B,IAAI0E,QAAQ,EAAE;QACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAAC/E,MAAM,EAAEgF,CAAC,EAAE,EAAE;UACxCD,QAAQ,CAACC,CAAC,CAAC,CAACd,OAAO,CAAC,IAAI,CAAC;QAC3B;MACF;IACF;IAEA,IAAI,CAACxG,IAAI,GAAG,CAAC,CAAC;EAChB;EAEAwC,mBAAmB,CAAC1D,YAAY,EAAE;IAChC,IAAI,CAACkB,IAAI,CAAClB,YAAY,CAACsI,aAAa,CAAC,CAAC5D,IAAI,CAAC1E,YAAY,CAAC;EAC1D;EAEAsB,WAAW,GAAG;IACZ,IACE,IAAI,CAACC,YAAY,KAAK,IAAI,CAACZ,QAAQ,CAACa,IAAI,CAACC,KAAK,IAC9C,IAAI,CAACC,aAAa,KAAK,IAAI,CAACf,QAAQ,CAACa,IAAI,CAACG,MAAM,EAChD;MACA,IAAI,CAACJ,YAAY,GAAG,IAAI,CAACZ,QAAQ,CAACa,IAAI,CAACC,KAAK;MAC5C,IAAI,CAACC,aAAa,GAAG,IAAI,CAACf,QAAQ,CAACa,IAAI,CAACG,MAAM;MAE9C,IAAM4G,QAAQ,GAAG,IAAI,CAACrH,IAAI,CAACV,SAAS,CAAC;MAErC,IAAI+H,QAAQ,EAAE;QACZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAAC/E,MAAM,EAAEgF,CAAC,EAAE,EAAE;UACxCD,QAAQ,CAACC,CAAC,CAAC,CAACd,OAAO,CAAC,IAAI,CAAC;QAC3B;MACF;MACA,IAAI,CAACxG,IAAI,CAACV,SAAS,CAAC,GAAG,EAAE;IAC3B;EACF;AACF;AAAC"}