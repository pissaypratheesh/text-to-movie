{"version":3,"file":"MaskManager.js","names":["MaskManager","WebGLManager","constructor","renderer","scissor","scissorData","scissorRenderTarget","enableScissor","alphaMaskPool","alphaMaskIndex","pushMask","target","maskData","texture","pushSpriteMask","_activeRenderTarget","root","stencilManager","stencilMaskStack","length","isFastRect","matrix","worldTransform","rot","Math","atan2","b","a","round","PI","pushStencilMask","pushScissorMask","popMask","popSpriteMask","popScissorMask","popStencilMask","alphaMaskFilter","AlphaMaskFilter","resolution","maskSprite","stashFilterArea","filterArea","getBounds","filterManager","pushFilter","popFilter","currentRenderer","stop","pushStencil","popStencil","renderable","renderTarget","bounds","fit","size","gl","enable","SCISSOR_TEST","x","height","y","width","disable"],"sources":["../../../../src/renderers/webgl/managers/MaskManager.js"],"sourcesContent":["import WebGLManager from \"./WebGLManager\";\nimport AlphaMaskFilter from \"../filters/spriteMask/SpriteMaskFilter\";\n\nexport default class MaskManager extends WebGLManager {\n  constructor(renderer) {\n    super(renderer);\n    this.scissor = false;\n    this.scissorData = null;\n    this.scissorRenderTarget = null;\n    this.enableScissor = true;\n    this.alphaMaskPool = [];\n    this.alphaMaskIndex = 0;\n  }\n\n  pushMask(target, maskData) {\n    if (maskData.texture) {\n      this.pushSpriteMask(target, maskData);\n    } else if (\n      this.enableScissor &&\n      !this.scissor &&\n      this.renderer._activeRenderTarget.root &&\n      !this.renderer.stencilManager.stencilMaskStack.length &&\n      maskData.isFastRect()\n    ) {\n      const matrix = maskData.worldTransform;\n\n      let rot = Math.atan2(matrix.b, matrix.a);\n\n      // use the nearest degree!\n      rot = Math.round(rot * (180 / Math.PI));\n\n      if (rot % 90) {\n        this.pushStencilMask(maskData);\n      } else {\n        this.pushScissorMask(target, maskData);\n      }\n    } else {\n      this.pushStencilMask(maskData);\n    }\n  }\n\n  popMask(target, maskData) {\n    if (maskData.texture) {\n      this.popSpriteMask(target, maskData);\n    } else if (\n      this.enableScissor &&\n      !this.renderer.stencilManager.stencilMaskStack.length\n    ) {\n      this.popScissorMask(target, maskData);\n    } else {\n      this.popStencilMask(target, maskData);\n    }\n  }\n\n  pushSpriteMask(target, maskData) {\n    let alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex];\n\n    if (!alphaMaskFilter) {\n      alphaMaskFilter = this.alphaMaskPool[this.alphaMaskIndex] = [\n        new AlphaMaskFilter(maskData)\n      ];\n    }\n\n    alphaMaskFilter[0].resolution = this.renderer.resolution;\n    alphaMaskFilter[0].maskSprite = maskData;\n\n    const stashFilterArea = target.filterArea;\n\n    target.filterArea = maskData.getBounds(true);\n    this.renderer.filterManager.pushFilter(target, alphaMaskFilter);\n    target.filterArea = stashFilterArea;\n\n    this.alphaMaskIndex++;\n  }\n\n  popSpriteMask() {\n    this.renderer.filterManager.popFilter();\n    this.alphaMaskIndex--;\n  }\n\n  pushStencilMask(maskData) {\n    this.renderer.currentRenderer.stop();\n    this.renderer.stencilManager.pushStencil(maskData);\n  }\n\n  popStencilMask() {\n    this.renderer.currentRenderer.stop();\n    this.renderer.stencilManager.popStencil();\n  }\n\n  pushScissorMask(target, maskData) {\n    maskData.renderable = true;\n\n    const renderTarget = this.renderer._activeRenderTarget;\n\n    const bounds = maskData.getBounds();\n\n    bounds.fit(renderTarget.size);\n    maskData.renderable = false;\n\n    this.renderer.gl.enable(this.renderer.gl.SCISSOR_TEST);\n\n    const resolution = this.renderer.resolution;\n\n    this.renderer.gl.scissor(\n      bounds.x * resolution,\n      (renderTarget.root\n        ? renderTarget.size.height - bounds.y - bounds.height\n        : bounds.y) * resolution,\n      bounds.width * resolution,\n      bounds.height * resolution\n    );\n\n    this.scissorRenderTarget = renderTarget;\n    this.scissorData = maskData;\n    this.scissor = true;\n  }\n\n  popScissorMask() {\n    this.scissorRenderTarget = null;\n    this.scissorData = null;\n    this.scissor = false;\n\n    // must be scissor!\n    const gl = this.renderer.gl;\n\n    gl.disable(gl.SCISSOR_TEST);\n  }\n}\n"],"mappings":"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"}