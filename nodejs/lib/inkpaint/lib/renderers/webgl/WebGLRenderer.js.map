{"version":3,"file":"WebGLRenderer.js","names":["CONTEXT_UID","WebGLRenderer","SystemRenderer","constructor","options","arg2","arg3","legacy","glCore","VertexArrayObject","FORCE_NATIVE","type","RENDERER_TYPE","WEBGL","handleContextLost","bind","handleContextRestored","view","addEventListener","_contextOptions","alpha","transparent","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","powerPreference","_backgroundColorRgba","maskManager","MaskManager","stencilManager","StencilManager","emptyRenderer","ObjectRenderer","currentRenderer","textureManager","filterManager","initPlugins","context","validateContext","gl","createContext","state","WebGLState","renderingToScreen","boundTextures","_activeShader","_activeVao","_activeRenderTarget","_initContext","drawModes","mapWebGLDrawModesToPixi","_nextTextureLocation","setBlendMode","isContextLost","getExtension","restoreContext","maxTextures","getParameter","MAX_TEXTURE_IMAGE_UNITS","Array","emptyTextures","_unknownBoundTextures","TextureManager","FilterManager","textureGC","TextureGarbageCollector","resetToDefault","rootRenderTarget","RenderTarget","width","height","resolution","clearColor","bindRenderTarget","emptyGLTexture","GLTexture","fromData","tempObj","_glTextures","i","empty","BaseTexture","bindTexture","emit","resize","screen","render","displayObject","renderTexture","clear","transform","skipUpdateTransform","_lastObjectRendered","cacheParent","parent","_tempDisplayObjectParent","updateTransform","bindRenderTexture","start","undefined","clearBeforeRender","renderWebGL","flush","update","setObjectRenderer","objectRenderer","stop","screenWidth","screenHeight","prototype","call","activate","uniforms","projectionMatrix","toArray","blendMode","deleteTexture","texture","setTransform","matrix","clearRenderTexture","baseTexture","renderTarget","_glRenderTargets","updateTexture","unbindTexture","setFrame","frame","setMaskStack","stencilMaskStack","bindShader","shader","autoProject","location","forceLocation","touched","count","length","glTexture","activeTexture","TEXTURE0","TEXTURE_2D","createVao","attribState","bindVao","vao","unbind","reset","event","preventDefault","removeAll","destroy","removeView","destroyPlugins","removeEventListener","uid","useProgram","loseContext","pluginTarget","mixin"],"sources":["../../../src/renderers/webgl/WebGLRenderer.js"],"sourcesContent":["import SystemRenderer from \"../SystemRenderer\";\nimport MaskManager from \"./managers/MaskManager\";\nimport StencilManager from \"./managers/StencilManager\";\nimport FilterManager from \"./managers/FilterManager\";\nimport RenderTarget from \"./utils/RenderTarget\";\nimport ObjectRenderer from \"./utils/ObjectRenderer\";\nimport TextureManager from \"./TextureManager\";\nimport BaseTexture from \"../../textures/BaseTexture\";\nimport TextureGarbageCollector from \"./TextureGarbageCollector\";\nimport WebGLState from \"./WebGLState\";\nimport mapWebGLDrawModesToPixi from \"./utils/mapWebGLDrawModesToPixi\";\nimport validateContext from \"./utils/validateContext\";\nimport { pluginTarget } from \"../../utils\";\nimport glCore from \"pixi-gl-core\";\nimport { RENDERER_TYPE } from \"../../const\";\n\nlet CONTEXT_UID = 0;\n\nexport default class WebGLRenderer extends SystemRenderer {\n  constructor(options, arg2, arg3) {\n    super(\"WebGL\", options, arg2, arg3);\n\n    this.legacy = this.options.legacy;\n    if (this.legacy) {\n      glCore.VertexArrayObject.FORCE_NATIVE = true;\n    }\n\n    this.type = RENDERER_TYPE.WEBGL;\n    this.handleContextLost = this.handleContextLost.bind(this);\n    this.handleContextRestored = this.handleContextRestored.bind(this);\n    this.view.addEventListener(\n      \"webglcontextlost\",\n      this.handleContextLost,\n      false\n    );\n    this.view.addEventListener(\n      \"webglcontextrestored\",\n      this.handleContextRestored,\n      false\n    );\n\n    this._contextOptions = {\n      alpha: this.transparent,\n      antialias: this.options.antialias,\n      premultipliedAlpha:\n        this.transparent && this.transparent !== \"notMultiplied\",\n      stencil: true,\n      preserveDrawingBuffer: this.options.preserveDrawingBuffer,\n      powerPreference: this.options.powerPreference\n    };\n\n    this._backgroundColorRgba[3] = this.transparent ? 0 : 1;\n    this.maskManager = new MaskManager(this);\n    this.stencilManager = new StencilManager(this);\n    this.emptyRenderer = new ObjectRenderer(this);\n    this.currentRenderer = this.emptyRenderer;\n    this.textureManager = null;\n    this.filterManager = null;\n\n    this.initPlugins();\n    if (this.options.context) {\n      validateContext(this.options.context);\n    }\n\n    this.gl =\n      this.options.context ||\n      glCore.createContext(this.view, this._contextOptions);\n    this.CONTEXT_UID = CONTEXT_UID++;\n    this.state = new WebGLState(this.gl);\n    this.renderingToScreen = true;\n\n    this.boundTextures = null;\n    this._activeShader = null;\n    this._activeVao = null;\n    this._activeRenderTarget = null;\n    this._initContext();\n\n    this.drawModes = mapWebGLDrawModesToPixi(this.gl);\n    this._nextTextureLocation = 0;\n    this.setBlendMode(0);\n  }\n\n  _initContext() {\n    const gl = this.gl;\n    if (gl.isContextLost() && gl.getExtension(\"WEBGL_lose_context\")) {\n      gl.getExtension(\"WEBGL_lose_context\").restoreContext();\n    }\n\n    const maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    this._activeShader = null;\n    this._activeVao = null;\n    this.boundTextures = new Array(maxTextures);\n    this.emptyTextures = new Array(maxTextures);\n    this._unknownBoundTextures = false;\n\n    // create a texture manager...\n    this.textureManager = new TextureManager(this);\n    this.filterManager = new FilterManager(this);\n    this.textureGC = new TextureGarbageCollector(this);\n    this.state.resetToDefault();\n\n    this.rootRenderTarget = new RenderTarget(\n      gl,\n      this.width,\n      this.height,\n      null,\n      this.resolution,\n      true\n    );\n    this.rootRenderTarget.clearColor = this._backgroundColorRgba;\n\n    this.bindRenderTarget(this.rootRenderTarget);\n    const emptyGLTexture = new glCore.GLTexture.fromData(gl, null, 1, 1);\n    const tempObj = { _glTextures: {} };\n    tempObj._glTextures[this.CONTEXT_UID] = {};\n\n    for (let i = 0; i < maxTextures; i++) {\n      const empty = new BaseTexture();\n      empty._glTextures[this.CONTEXT_UID] = emptyGLTexture;\n      this.boundTextures[i] = tempObj;\n      this.emptyTextures[i] = empty;\n      this.bindTexture(null, i);\n    }\n\n    this.emit(\"context\", gl);\n    this.resize(this.screen.width, this.screen.height);\n  }\n\n  render(displayObject, renderTexture, clear, transform, skipUpdateTransform) {\n    this.renderingToScreen = !renderTexture;\n    this.emit(\"prerender\");\n\n    if (!this.gl || this.gl.isContextLost()) return;\n    this._nextTextureLocation = 0;\n\n    if (!renderTexture) {\n      this._lastObjectRendered = displayObject;\n    }\n\n    if (!skipUpdateTransform) {\n      const cacheParent = displayObject.parent;\n      displayObject.parent = this._tempDisplayObjectParent;\n      displayObject.updateTransform();\n      displayObject.parent = cacheParent;\n    }\n\n    this.bindRenderTexture(renderTexture, transform);\n    this.currentRenderer.start();\n\n    if (clear !== undefined ? clear : this.clearBeforeRender) {\n      this._activeRenderTarget.clear();\n    }\n\n    displayObject.renderWebGL(this);\n    this.currentRenderer.flush();\n    this.textureGC.update();\n\n    this.emit(\"postrender\");\n  }\n\n  setObjectRenderer(objectRenderer) {\n    if (this.currentRenderer === objectRenderer) {\n      return;\n    }\n\n    this.currentRenderer.stop();\n    this.currentRenderer = objectRenderer;\n    this.currentRenderer.start();\n  }\n\n  flush() {\n    this.setObjectRenderer(this.emptyRenderer);\n  }\n\n  resize(screenWidth, screenHeight) {\n    SystemRenderer.prototype.resize.call(this, screenWidth, screenHeight);\n    this.rootRenderTarget.resize(screenWidth, screenHeight);\n\n    if (this._activeRenderTarget === this.rootRenderTarget) {\n      this.rootRenderTarget.activate();\n\n      if (this._activeShader) {\n        this._activeShader.uniforms.projectionMatrix = this.rootRenderTarget.projectionMatrix.toArray(\n          true\n        );\n      }\n    }\n  }\n\n  setBlendMode(blendMode) {\n    this.state.setBlendMode(blendMode);\n  }\n\n  deleteTexture(texture) {\n    this.gl.deleteTexture(texture);\n  }\n\n  clear(clearColor) {\n    this._activeRenderTarget.clear(clearColor);\n  }\n\n  setTransform(matrix) {\n    this._activeRenderTarget.transform = matrix;\n  }\n\n  clearRenderTexture(renderTexture, clearColor) {\n    const baseTexture = renderTexture.baseTexture;\n    const renderTarget = baseTexture._glRenderTargets[this.CONTEXT_UID];\n\n    if (renderTarget) {\n      renderTarget.clear(clearColor);\n    }\n\n    return this;\n  }\n\n  bindRenderTexture(renderTexture, transform) {\n    let renderTarget;\n\n    if (renderTexture) {\n      const baseTexture = renderTexture.baseTexture;\n\n      if (!baseTexture._glRenderTargets[this.CONTEXT_UID]) {\n        this.textureManager.updateTexture(baseTexture, 0);\n      }\n\n      this.unbindTexture(baseTexture);\n\n      renderTarget = baseTexture._glRenderTargets[this.CONTEXT_UID];\n      renderTarget.setFrame(renderTexture.frame);\n    } else {\n      renderTarget = this.rootRenderTarget;\n    }\n\n    renderTarget.transform = transform;\n    this.bindRenderTarget(renderTarget);\n\n    return this;\n  }\n\n  bindRenderTarget(renderTarget) {\n    if (renderTarget !== this._activeRenderTarget) {\n      this._activeRenderTarget = renderTarget;\n      renderTarget.activate();\n\n      if (this._activeShader) {\n        this._activeShader.uniforms.projectionMatrix = renderTarget.projectionMatrix.toArray(\n          true\n        );\n      }\n\n      this.stencilManager.setMaskStack(renderTarget.stencilMaskStack);\n    }\n\n    return this;\n  }\n\n  bindShader(shader, autoProject) {\n    // TODO cache\n    if (this._activeShader !== shader) {\n      this._activeShader = shader;\n      shader.bind();\n\n      // `autoProject` normally would be a default parameter set to true\n      // but because of how Babel transpiles default parameters\n      // it hinders the performance of this method.\n      if (autoProject !== false) {\n        // automatically set the projection matrix\n        shader.uniforms.projectionMatrix = this._activeRenderTarget.projectionMatrix.toArray(\n          true\n        );\n      }\n    }\n\n    return this;\n  }\n\n  bindTexture(texture, location, forceLocation) {\n    texture = texture || this.emptyTextures[location];\n    texture = texture.baseTexture || texture;\n    texture.touched = this.textureGC.count;\n\n    if (!forceLocation) {\n      // TODO - maybe look into adding boundIds.. save us the loop?\n      for (let i = 0; i < this.boundTextures.length; i++) {\n        if (this.boundTextures[i] === texture) {\n          return i;\n        }\n      }\n\n      if (location === undefined) {\n        this._nextTextureLocation++;\n        this._nextTextureLocation %= this.boundTextures.length;\n        location = this.boundTextures.length - this._nextTextureLocation - 1;\n      }\n    } else {\n      location = location || 0;\n    }\n\n    const gl = this.gl;\n    const glTexture = texture._glTextures[this.CONTEXT_UID];\n\n    if (!glTexture) {\n      // this will also bind the texture..\n      this.textureManager.updateTexture(texture, location);\n    } else {\n      // bind the current texture\n      this.boundTextures[location] = texture;\n      gl.activeTexture(gl.TEXTURE0 + location);\n      gl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\n    }\n\n    return location;\n  }\n\n  unbindTexture(texture) {\n    const gl = this.gl;\n\n    texture = texture.baseTexture || texture;\n\n    if (this._unknownBoundTextures) {\n      this._unknownBoundTextures = false;\n      // someone changed webGL state,\n      // we have to be sure that our texture does not appear in multitexture renderer samplers\n\n      for (let i = 0; i < this.boundTextures.length; i++) {\n        if (this.boundTextures[i] === this.emptyTextures[i]) {\n          gl.activeTexture(gl.TEXTURE0 + i);\n          gl.bindTexture(\n            gl.TEXTURE_2D,\n            this.emptyTextures[i]._glTextures[this.CONTEXT_UID].texture\n          );\n        }\n      }\n    }\n\n    for (let i = 0; i < this.boundTextures.length; i++) {\n      if (this.boundTextures[i] === texture) {\n        this.boundTextures[i] = this.emptyTextures[i];\n\n        gl.activeTexture(gl.TEXTURE0 + i);\n        gl.bindTexture(\n          gl.TEXTURE_2D,\n          this.emptyTextures[i]._glTextures[this.CONTEXT_UID].texture\n        );\n      }\n    }\n\n    return this;\n  }\n\n  createVao() {\n    return new glCore.VertexArrayObject(this.gl, this.state.attribState);\n  }\n\n  bindVao(vao) {\n    if (this._activeVao === vao) {\n      return this;\n    }\n\n    if (vao) {\n      vao.bind();\n    } else if (this._activeVao) {\n      // TODO this should always be true i think?\n      this._activeVao.unbind();\n    }\n\n    this._activeVao = vao;\n\n    return this;\n  }\n\n  reset() {\n    this.setObjectRenderer(this.emptyRenderer);\n\n    this.bindVao(null);\n    this._activeShader = null;\n    this._activeRenderTarget = this.rootRenderTarget;\n\n    this._unknownBoundTextures = true;\n\n    for (let i = 0; i < this.boundTextures.length; i++) {\n      this.boundTextures[i] = this.emptyTextures[i];\n    }\n\n    // bind the main frame buffer (the screen);\n    this.rootRenderTarget.activate();\n    this.state.resetToDefault();\n    return this;\n  }\n\n  handleContextLost(event) {\n    event.preventDefault();\n  }\n\n  handleContextRestored() {\n    this.textureManager.removeAll();\n    this.filterManager.destroy(true);\n    this._initContext();\n  }\n\n  destroy(removeView) {\n    this.destroyPlugins();\n\n    // remove listeners\n    this.view.removeEventListener(\"webglcontextlost\", this.handleContextLost);\n    this.view.removeEventListener(\n      \"webglcontextrestored\",\n      this.handleContextRestored\n    );\n\n    this.textureManager.destroy();\n    super.destroy(removeView);\n    this.uid = 0;\n\n    // destroy the managers\n    this.maskManager.destroy();\n    this.stencilManager.destroy();\n    this.filterManager.destroy();\n\n    this.maskManager = null;\n    this.filterManager = null;\n    this.textureManager = null;\n    this.currentRenderer = null;\n\n    this.handleContextLost = null;\n    this.handleContextRestored = null;\n\n    this._contextOptions = null;\n    this.gl.useProgram(null);\n\n    if (this.gl.getExtension(\"WEBGL_lose_context\")) {\n      this.gl.getExtension(\"WEBGL_lose_context\").loseContext();\n    }\n\n    this.gl = null;\n  }\n}\n\npluginTarget.mixin(WebGLRenderer);\n"],"mappings":"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"}