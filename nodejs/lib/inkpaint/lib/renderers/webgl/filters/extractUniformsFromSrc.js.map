{"version":3,"file":"extractUniformsFromSrc.js","names":["defaultValue","glCore","shader","extractUniformsFromSrc","vertexSrc","fragmentSrc","mask","vertUniforms","extractUniformsFromString","fragUniforms","Object","assign","string","maskRegex","RegExp","uniforms","nameSplit","lines","replace","split","i","length","line","trim","indexOf","splitLine","type","name","size","Number","match","value"],"sources":["../../../../src/renderers/webgl/filters/extractUniformsFromSrc.js"],"sourcesContent":["import glCore from 'pixi-gl-core';\n\nconst defaultValue = glCore.shader.defaultValue;\n\nexport default function extractUniformsFromSrc(vertexSrc, fragmentSrc, mask)\n{\n    const vertUniforms = extractUniformsFromString(vertexSrc, mask);\n    const fragUniforms = extractUniformsFromString(fragmentSrc, mask);\n\n    return Object.assign(vertUniforms, fragUniforms);\n}\n\nfunction extractUniformsFromString(string)\n{\n    const maskRegex = new RegExp('^(projectionMatrix|uSampler|filterArea|filterClamp)$');\n\n    const uniforms = {};\n    let nameSplit;\n\n    // clean the lines a little - remove extra spaces / tabs etc\n    // then split along ';'\n    const lines = string.replace(/\\s+/g, ' ')\n                .split(/\\s*;\\s*/);\n\n    // loop through..\n    for (let i = 0; i < lines.length; i++)\n    {\n        const line = lines[i].trim();\n\n        if (line.indexOf('uniform') > -1)\n        {\n            const splitLine = line.split(' ');\n            const type = splitLine[1];\n\n            let name = splitLine[2];\n            let size = 1;\n\n            if (name.indexOf('[') > -1)\n            {\n                // array!\n                nameSplit = name.split(/\\[|]/);\n                name = nameSplit[0];\n                size *= Number(nameSplit[1]);\n            }\n\n            if (!name.match(maskRegex))\n            {\n                uniforms[name] = {\n                    value: defaultValue(type, size),\n                    name,\n                    type,\n                };\n            }\n        }\n    }\n\n    return uniforms;\n}\n"],"mappings":";;;;;;AAAA;AAAkC;AAElC,IAAMA,YAAY,GAAGC,mBAAM,CAACC,MAAM,CAACF,YAAY;AAEhC,SAASG,sBAAsB,CAACC,SAAS,EAAEC,WAAW,EAAEC,IAAI,EAC3E;EACI,IAAMC,YAAY,GAAGC,yBAAyB,CAACJ,SAAS,EAAEE,IAAI,CAAC;EAC/D,IAAMG,YAAY,GAAGD,yBAAyB,CAACH,WAAW,EAAEC,IAAI,CAAC;EAEjE,OAAOI,MAAM,CAACC,MAAM,CAACJ,YAAY,EAAEE,YAAY,CAAC;AACpD;AAEA,SAASD,yBAAyB,CAACI,MAAM,EACzC;EACI,IAAMC,SAAS,GAAG,IAAIC,MAAM,CAAC,sDAAsD,CAAC;EAEpF,IAAMC,QAAQ,GAAG,CAAC,CAAC;EACnB,IAAIC,SAAS;;EAEb;EACA;EACA,IAAMC,KAAK,GAAGL,MAAM,CAACM,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAC5BC,KAAK,CAAC,SAAS,CAAC;;EAE7B;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACI,MAAM,EAAED,CAAC,EAAE,EACrC;IACI,IAAME,IAAI,GAAGL,KAAK,CAACG,CAAC,CAAC,CAACG,IAAI,EAAE;IAE5B,IAAID,IAAI,CAACE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAChC;MACI,IAAMC,SAAS,GAAGH,IAAI,CAACH,KAAK,CAAC,GAAG,CAAC;MACjC,IAAMO,IAAI,GAAGD,SAAS,CAAC,CAAC,CAAC;MAEzB,IAAIE,IAAI,GAAGF,SAAS,CAAC,CAAC,CAAC;MACvB,IAAIG,IAAI,GAAG,CAAC;MAEZ,IAAID,IAAI,CAACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAC1B;QACI;QACAR,SAAS,GAAGW,IAAI,CAACR,KAAK,CAAC,MAAM,CAAC;QAC9BQ,IAAI,GAAGX,SAAS,CAAC,CAAC,CAAC;QACnBY,IAAI,IAAIC,MAAM,CAACb,SAAS,CAAC,CAAC,CAAC,CAAC;MAChC;MAEA,IAAI,CAACW,IAAI,CAACG,KAAK,CAACjB,SAAS,CAAC,EAC1B;QACIE,QAAQ,CAACY,IAAI,CAAC,GAAG;UACbI,KAAK,EAAE/B,YAAY,CAAC0B,IAAI,EAAEE,IAAI,CAAC;UAC/BD,IAAI;UACJD;QACJ,CAAC;MACL;IACJ;EACJ;EAEA,OAAOX,QAAQ;AACnB"}