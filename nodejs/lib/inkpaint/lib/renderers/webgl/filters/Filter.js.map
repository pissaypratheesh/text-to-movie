{"version":3,"file":"Filter.js","names":["SOURCE_KEY_MAP","Filter","constructor","vertexSrc","fragmentSrc","uniformData","defaultVertexSrc","defaultFragmentSrc","_blendMode","BLEND_MODES","NORMAL","extractUniformsFromSrc","uniforms","i","value","type","toLowerCase","glShaders","uid","glShaderKey","padding","resolution","settings","FILTER_RESOLUTION","enabled","autoFit","apply","filterManager","input","output","clear","currentState","applyFilter","blendMode","join"],"sources":["../../../../src/renderers/webgl/filters/Filter.js"],"sourcesContent":["import extractUniformsFromSrc from \"./extractUniformsFromSrc\";\nimport { uid } from \"../../../utils\";\nimport { BLEND_MODES } from \"../../../const\";\nimport settings from \"../../../settings\";\n\nconst SOURCE_KEY_MAP = {};\n\nexport default class Filter {\n  constructor(vertexSrc, fragmentSrc, uniformData) {\n    this.vertexSrc = vertexSrc || Filter.defaultVertexSrc;\n    this.fragmentSrc = fragmentSrc || Filter.defaultFragmentSrc;\n    this._blendMode = BLEND_MODES.NORMAL;\n    this.uniformData =\n      uniformData ||\n      extractUniformsFromSrc(\n        this.vertexSrc,\n        this.fragmentSrc,\n        \"projectionMatrix|uSampler\"\n      );\n\n    this.uniforms = {};\n\n    for (const i in this.uniformData) {\n      this.uniforms[i] = this.uniformData[i].value;\n      if (this.uniformData[i].type) {\n        this.uniformData[i].type = this.uniformData[i].type.toLowerCase();\n      }\n    }\n\n    this.glShaders = {};\n    if (!SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc]) {\n      SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc] = uid();\n    }\n\n    this.glShaderKey = SOURCE_KEY_MAP[this.vertexSrc + this.fragmentSrc];\n    this.padding = 4;\n    this.resolution = settings.FILTER_RESOLUTION;\n    this.enabled = true;\n    this.autoFit = true;\n  }\n\n  apply(filterManager, input, output, clear, currentState) {\n    filterManager.applyFilter(this, input, output, clear);\n  }\n\n  get blendMode() {\n    return this._blendMode;\n  }\n\n  set blendMode(value) {\n    this._blendMode = value;\n  }\n\n  static get defaultVertexSrc() {\n    return [\n      \"attribute vec2 aVertexPosition;\",\n      \"attribute vec2 aTextureCoord;\",\n\n      \"uniform mat3 projectionMatrix;\",\n      \"uniform mat3 filterMatrix;\",\n\n      \"varying vec2 vTextureCoord;\",\n      \"varying vec2 vFilterCoord;\",\n\n      \"void main(void){\",\n      \"   gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\",\n      \"   vFilterCoord = ( filterMatrix * vec3( aTextureCoord, 1.0)  ).xy;\",\n      \"   vTextureCoord = aTextureCoord ;\",\n      \"}\"\n    ].join(\"\\n\");\n  }\n\n  static get defaultFragmentSrc() {\n    return [\n      \"varying vec2 vTextureCoord;\",\n      \"varying vec2 vFilterCoord;\",\n\n      \"uniform sampler2D uSampler;\",\n      \"uniform sampler2D filterSampler;\",\n\n      \"void main(void){\",\n      \"   vec4 masky = texture2D(filterSampler, vFilterCoord);\",\n      \"   vec4 sample = texture2D(uSampler, vTextureCoord);\",\n      \"   vec4 color;\",\n      \"   if(mod(vFilterCoord.x, 1.0) > 0.5)\",\n      \"   {\",\n      \"     color = vec4(1.0, 0.0, 0.0, 1.0);\",\n      \"   }\",\n      \"   else\",\n      \"   {\",\n      \"     color = vec4(0.0, 1.0, 0.0, 1.0);\",\n      \"   }\",\n      // '   gl_FragColor = vec4(mod(vFilterCoord.x, 1.5), vFilterCoord.y,0.0,1.0);',\n      \"   gl_FragColor = mix(sample, masky, 0.5);\",\n      \"   gl_FragColor *= sample.a;\",\n      \"}\"\n    ].join(\"\\n\");\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAAyC;AAEzC,IAAMA,cAAc,GAAG,CAAC,CAAC;AAEV,MAAMC,MAAM,CAAC;EAC1BC,WAAW,CAACC,SAAS,EAAEC,WAAW,EAAEC,WAAW,EAAE;IAC/C,IAAI,CAACF,SAAS,GAAGA,SAAS,IAAIF,MAAM,CAACK,gBAAgB;IACrD,IAAI,CAACF,WAAW,GAAGA,WAAW,IAAIH,MAAM,CAACM,kBAAkB;IAC3D,IAAI,CAACC,UAAU,GAAGC,kBAAW,CAACC,MAAM;IACpC,IAAI,CAACL,WAAW,GACdA,WAAW,IACX,IAAAM,+BAAsB,EACpB,IAAI,CAACR,SAAS,EACd,IAAI,CAACC,WAAW,EAChB,2BAA2B,CAC5B;IAEH,IAAI,CAACQ,QAAQ,GAAG,CAAC,CAAC;IAElB,KAAK,IAAMC,CAAC,IAAI,IAAI,CAACR,WAAW,EAAE;MAChC,IAAI,CAACO,QAAQ,CAACC,CAAC,CAAC,GAAG,IAAI,CAACR,WAAW,CAACQ,CAAC,CAAC,CAACC,KAAK;MAC5C,IAAI,IAAI,CAACT,WAAW,CAACQ,CAAC,CAAC,CAACE,IAAI,EAAE;QAC5B,IAAI,CAACV,WAAW,CAACQ,CAAC,CAAC,CAACE,IAAI,GAAG,IAAI,CAACV,WAAW,CAACQ,CAAC,CAAC,CAACE,IAAI,CAACC,WAAW,EAAE;MACnE;IACF;IAEA,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;IACnB,IAAI,CAACjB,cAAc,CAAC,IAAI,CAACG,SAAS,GAAG,IAAI,CAACC,WAAW,CAAC,EAAE;MACtDJ,cAAc,CAAC,IAAI,CAACG,SAAS,GAAG,IAAI,CAACC,WAAW,CAAC,GAAG,IAAAc,UAAG,GAAE;IAC3D;IAEA,IAAI,CAACC,WAAW,GAAGnB,cAAc,CAAC,IAAI,CAACG,SAAS,GAAG,IAAI,CAACC,WAAW,CAAC;IACpE,IAAI,CAACgB,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,UAAU,GAAGC,iBAAQ,CAACC,iBAAiB;IAC5C,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,OAAO,GAAG,IAAI;EACrB;EAEAC,KAAK,CAACC,aAAa,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,YAAY,EAAE;IACvDJ,aAAa,CAACK,WAAW,CAAC,IAAI,EAAEJ,KAAK,EAAEC,MAAM,EAAEC,KAAK,CAAC;EACvD;EAEA,IAAIG,SAAS,GAAG;IACd,OAAO,IAAI,CAACzB,UAAU;EACxB;EAEA,IAAIyB,SAAS,CAACnB,KAAK,EAAE;IACnB,IAAI,CAACN,UAAU,GAAGM,KAAK;EACzB;EAEA,WAAWR,gBAAgB,GAAG;IAC5B,OAAO,CACL,iCAAiC,EACjC,+BAA+B,EAE/B,gCAAgC,EAChC,4BAA4B,EAE5B,6BAA6B,EAC7B,4BAA4B,EAE5B,kBAAkB,EAClB,sFAAsF,EACtF,qEAAqE,EACrE,oCAAoC,EACpC,GAAG,CACJ,CAAC4B,IAAI,CAAC,IAAI,CAAC;EACd;EAEA,WAAW3B,kBAAkB,GAAG;IAC9B,OAAO,CACL,6BAA6B,EAC7B,4BAA4B,EAE5B,6BAA6B,EAC7B,kCAAkC,EAElC,kBAAkB,EAClB,yDAAyD,EACzD,sDAAsD,EACtD,gBAAgB,EAChB,uCAAuC,EACvC,MAAM,EACN,wCAAwC,EACxC,MAAM,EACN,SAAS,EACT,MAAM,EACN,wCAAwC,EACxC,MAAM;IACN;IACA,4CAA4C,EAC5C,8BAA8B,EAC9B,GAAG,CACJ,CAAC2B,IAAI,CAAC,IAAI,CAAC;EACd;AACF;AAAC"}