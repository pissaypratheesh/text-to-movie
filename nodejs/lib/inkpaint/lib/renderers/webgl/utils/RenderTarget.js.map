{"version":3,"file":"RenderTarget.js","names":["RenderTarget","constructor","gl","width","height","scaleMode","resolution","root","frameBuffer","texture","clearColor","size","Rectangle","settings","RESOLUTION","projectionMatrix","Matrix","transform","frame","defaultFrame","destinationFrame","sourceFrame","stencilBuffer","stencilMaskStack","filterData","filterPoolKey","undefined","SCALE_MODE","GLFramebuffer","createRGBA","SCALE_MODES","NEAREST","enableNearestScaling","enableLinearScaling","framebuffer","setFrame","resize","clear","cc","attachStencilBuffer","enableStencil","activate","bind","calculateProjection","append","enable","SCISSOR_TEST","scissor","x","y","disable","viewport","pm","identity","a","d","tx","ty","projectionFrame","destroy","stencil","deleteRenderbuffer"],"sources":["../../../../src/renderers/webgl/utils/RenderTarget.js"],"sourcesContent":["import { Rectangle, Matrix } from \"../../../math\";\nimport { SCALE_MODES } from \"../../../const\";\nimport settings from \"../../../settings\";\nimport { GLFramebuffer } from \"pixi-gl-core\";\n\nexport default class RenderTarget {\n  constructor(gl, width, height, scaleMode, resolution, root) {\n    this.gl = gl;\n    this.frameBuffer = null;\n    this.texture = null;\n    this.clearColor = [0, 0, 0, 0];\n    this.size = new Rectangle(0, 0, 1, 1);\n    this.resolution = resolution || settings.RESOLUTION;\n    this.projectionMatrix = new Matrix();\n    this.transform = null;\n    this.frame = null;\n    this.defaultFrame = new Rectangle();\n    this.destinationFrame = null;\n    this.sourceFrame = null;\n    this.stencilBuffer = null;\n    this.stencilMaskStack = [];\n    this.filterData = null;\n    this.filterPoolKey = \"\";\n\n    /**\n     * The scale mode.\n     *\n     * @member {number}\n     * @default InkPaint.settings.SCALE_MODE\n     * @see InkPaint.SCALE_MODES\n     */\n    this.scaleMode = scaleMode !== undefined ? scaleMode : settings.SCALE_MODE;\n\n    /**\n     * Whether this object is the root element or not\n     *\n     * @member {boolean}\n     * @default false\n     */\n    this.root = root || false;\n\n    if (!this.root) {\n      this.frameBuffer = GLFramebuffer.createRGBA(gl, 100, 100);\n\n      if (this.scaleMode === SCALE_MODES.NEAREST) {\n        this.frameBuffer.texture.enableNearestScaling();\n      } else {\n        this.frameBuffer.texture.enableLinearScaling();\n      }\n\n      this.texture = this.frameBuffer.texture;\n    } else {\n      // make it a null framebuffer..\n      this.frameBuffer = new GLFramebuffer(gl, 100, 100);\n      this.frameBuffer.framebuffer = null;\n    }\n\n    this.setFrame();\n\n    this.resize(width, height);\n  }\n\n  /**\n   * Clears the filter texture.\n   *\n   * @param {number[]} [clearColor=this.clearColor] - Array of [r,g,b,a] to clear the framebuffer\n   */\n  clear(clearColor) {\n    const cc = clearColor || this.clearColor;\n\n    this.frameBuffer.clear(cc[0], cc[1], cc[2], cc[3]); // r,g,b,a);\n  }\n\n  /**\n   * Binds the stencil buffer.\n   *\n   */\n  attachStencilBuffer() {\n    if (!this.root) {\n      this.frameBuffer.enableStencil();\n    }\n  }\n\n  /**\n   * Sets the frame of the render target.\n   *\n   * @param {Rectangle} destinationFrame - The destination frame.\n   * @param {Rectangle} sourceFrame - The source frame.\n   */\n  setFrame(destinationFrame, sourceFrame) {\n    this.destinationFrame =\n      destinationFrame || this.destinationFrame || this.defaultFrame;\n    this.sourceFrame = sourceFrame || this.sourceFrame || this.destinationFrame;\n  }\n\n  /**\n   * Binds the buffers and initialises the viewport.\n   *\n   */\n  activate() {\n    // TODO refactor usage of frame..\n    const gl = this.gl;\n\n    // make sure the texture is unbound!\n    this.frameBuffer.bind();\n\n    this.calculateProjection(this.destinationFrame, this.sourceFrame);\n\n    if (this.transform) {\n      this.projectionMatrix.append(this.transform);\n    }\n\n    // TODO add a check as them may be the same!\n    if (this.destinationFrame !== this.sourceFrame) {\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(\n        this.destinationFrame.x | 0,\n        this.destinationFrame.y | 0,\n        (this.destinationFrame.width * this.resolution) | 0,\n        (this.destinationFrame.height * this.resolution) | 0\n      );\n    } else {\n      gl.disable(gl.SCISSOR_TEST);\n    }\n\n    // TODO - does not need to be updated all the time??\n    gl.viewport(\n      this.destinationFrame.x | 0,\n      this.destinationFrame.y | 0,\n      (this.destinationFrame.width * this.resolution) | 0,\n      (this.destinationFrame.height * this.resolution) | 0\n    );\n  }\n\n  calculateProjection(destinationFrame, sourceFrame) {\n    const pm = this.projectionMatrix;\n\n    sourceFrame = sourceFrame || destinationFrame;\n\n    pm.identity();\n\n    // TODO: make dest scale source\n    if (!this.root) {\n      pm.a = (1 / destinationFrame.width) * 2;\n      pm.d = (1 / destinationFrame.height) * 2;\n\n      pm.tx = -1 - sourceFrame.x * pm.a;\n      pm.ty = -1 - sourceFrame.y * pm.d;\n    } else {\n      pm.a = (1 / destinationFrame.width) * 2;\n      pm.d = (-1 / destinationFrame.height) * 2;\n\n      pm.tx = -1 - sourceFrame.x * pm.a;\n      pm.ty = 1 - sourceFrame.y * pm.d;\n    }\n  }\n\n  resize(width, height) {\n    width = width | 0;\n    height = height | 0;\n\n    if (this.size.width === width && this.size.height === height) {\n      return;\n    }\n\n    this.size.width = width;\n    this.size.height = height;\n\n    this.defaultFrame.width = width;\n    this.defaultFrame.height = height;\n\n    this.frameBuffer.resize(width * this.resolution, height * this.resolution);\n\n    const projectionFrame = this.frame || this.size;\n\n    this.calculateProjection(projectionFrame);\n  }\n\n  /**\n   * Destroys the render target.\n   *\n   */\n  destroy() {\n    if (this.frameBuffer.stencil) {\n      this.gl.deleteRenderbuffer(this.frameBuffer.stencil);\n    }\n    this.frameBuffer.destroy();\n\n    this.frameBuffer = null;\n    this.texture = null;\n  }\n}\n"],"mappings":"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"}