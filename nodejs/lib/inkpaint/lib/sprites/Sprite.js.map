{"version":3,"file":"Sprite.js","names":["tempPoint","Point","Sprite","Container","constructor","texture","_anchor","ObservablePoint","_onAnchorUpdate","defaultAnchor","x","y","_texture","_width","_height","_tint","_tintRGB","tint","blendMode","BLEND_MODES","NORMAL","shader","cachedTint","Texture","EMPTY","vertexData","Float32Array","vertexTrimmedData","_transformID","_textureID","_transformTrimmedID","_textureTrimmedID","pluginName","log","_onTextureUpdate","scale","sign","orig","width","height","calculateVertices","transform","_worldID","_updateID","wt","worldTransform","a","b","c","d","tx","ty","trim","anchor","w0","w1","h0","h1","_x","_y","calculateTrimmedVertices","_renderWebGL","renderer","setObjectRenderer","plugins","render","_renderCanvas","_calculateBounds","_bounds","addQuad","updateBaseTexture","imageUrl","useCache","updateSource","getLocalBounds","rect","children","length","minX","minY","maxX","maxY","_localBoundsRect","Rectangle","getRectangle","call","containsPoint","point","applyInverse","x1","y1","destroy","options","destroyed","off","destroyTexture","destroyBaseTexture","baseTexture","from","source","fromFrame","frameId","TextureCache","Error","fromImage","imageId","crossorigin","scaleMode","Math","abs","value","s","copy","hasLoaded","once"],"sources":["../../src/sprites/Sprite.js"],"sourcesContent":["import { Point, ObservablePoint, Rectangle } from \"../math\";\nimport { sign } from \"../utils\";\nimport { BLEND_MODES } from \"../const\";\nimport Texture from \"../textures/Texture\";\nimport Container from \"../display/Container\";\nimport { TextureCache } from \"../utils/cache\";\n\nconst tempPoint = new Point();\n\nexport default class Sprite extends Container {\n  constructor(texture) {\n    super();\n\n    this._anchor = new ObservablePoint(\n      this._onAnchorUpdate,\n      this,\n      texture ? texture.defaultAnchor.x : 0,\n      texture ? texture.defaultAnchor.y : 0\n    );\n\n    this._texture = null;\n    this._width = 0;\n    this._height = 0;\n    this._tint = null;\n    this._tintRGB = null;\n\n    this.tint = 0xffffff;\n    this.blendMode = BLEND_MODES.NORMAL;\n    this.shader = null;\n    this.cachedTint = 0xffffff;\n    this.texture = texture || Texture.EMPTY;\n    this.vertexData = new Float32Array(8);\n    this.vertexTrimmedData = null;\n\n    this._transformID = -1;\n    this._textureID = -1;\n\n    this._transformTrimmedID = -1;\n    this._textureTrimmedID = -1;\n    this.pluginName = \"sprite\";\n    this.log = false;\n  }\n\n  _onTextureUpdate() {\n    this._textureID = -1;\n    this._textureTrimmedID = -1;\n    this.cachedTint = 0xffffff;\n\n    if (this._width) {\n      this.scale.x =\n        (sign(this.scale.x) * this._width) / this._texture.orig.width;\n    }\n\n    if (this._height) {\n      this.scale.y =\n        (sign(this.scale.y) * this._height) / this._texture.orig.height;\n    }\n  }\n\n  _onAnchorUpdate() {\n    this._transformID = -1;\n    this._transformTrimmedID = -1;\n  }\n\n  calculateVertices() {\n    if (\n      this._transformID === this.transform._worldID &&\n      this._textureID === this._texture._updateID\n    ) {\n      return;\n    }\n\n    this._transformID = this.transform._worldID;\n    this._textureID = this._texture._updateID;\n\n    const texture = this._texture;\n    const wt = this.transform.worldTransform;\n    const a = wt.a;\n    const b = wt.b;\n    const c = wt.c;\n    const d = wt.d;\n    const tx = wt.tx;\n    const ty = wt.ty;\n    const vertexData = this.vertexData;\n    const trim = texture.trim;\n    const orig = texture.orig;\n    const anchor = this._anchor;\n\n    let w0 = 0;\n    let w1 = 0;\n    let h0 = 0;\n    let h1 = 0;\n\n    if (trim) {\n      w1 = trim.x - anchor._x * orig.width;\n      w0 = w1 + trim.width;\n\n      h1 = trim.y - anchor._y * orig.height;\n      h0 = h1 + trim.height;\n    } else {\n      w1 = -anchor._x * orig.width;\n      w0 = w1 + orig.width;\n\n      h1 = -anchor._y * orig.height;\n      h0 = h1 + orig.height;\n    }\n\n    // xy\n    vertexData[0] = a * w1 + c * h1 + tx;\n    vertexData[1] = d * h1 + b * w1 + ty;\n\n    // xy\n    vertexData[2] = a * w0 + c * h1 + tx;\n    vertexData[3] = d * h1 + b * w0 + ty;\n\n    // xy\n    vertexData[4] = a * w0 + c * h0 + tx;\n    vertexData[5] = d * h0 + b * w0 + ty;\n\n    // xy\n    vertexData[6] = a * w1 + c * h0 + tx;\n    vertexData[7] = d * h0 + b * w1 + ty;\n  }\n\n  calculateTrimmedVertices() {\n    if (!this.vertexTrimmedData) {\n      this.vertexTrimmedData = new Float32Array(8);\n    } else if (\n      this._transformTrimmedID === this.transform._worldID &&\n      this._textureTrimmedID === this._texture._updateID\n    ) {\n      return;\n    }\n\n    this._transformTrimmedID = this.transform._worldID;\n    this._textureTrimmedID = this._texture._updateID;\n\n    // lets do some special trim code!\n    const texture = this._texture;\n    const vertexData = this.vertexTrimmedData;\n    const orig = texture.orig;\n    const anchor = this._anchor;\n\n    // lets calculate the new untrimmed bounds..\n    const wt = this.transform.worldTransform;\n    const a = wt.a;\n    const b = wt.b;\n    const c = wt.c;\n    const d = wt.d;\n    const tx = wt.tx;\n    const ty = wt.ty;\n\n    const w1 = -anchor._x * orig.width;\n    const w0 = w1 + orig.width;\n\n    const h1 = -anchor._y * orig.height;\n    const h0 = h1 + orig.height;\n\n    // xy\n    vertexData[0] = a * w1 + c * h1 + tx;\n    vertexData[1] = d * h1 + b * w1 + ty;\n\n    // xy\n    vertexData[2] = a * w0 + c * h1 + tx;\n    vertexData[3] = d * h1 + b * w0 + ty;\n\n    // xy\n    vertexData[4] = a * w0 + c * h0 + tx;\n    vertexData[5] = d * h0 + b * w0 + ty;\n\n    // xy\n    vertexData[6] = a * w1 + c * h0 + tx;\n    vertexData[7] = d * h0 + b * w1 + ty;\n  }\n\n  _renderWebGL(renderer) {\n    this.calculateVertices();\n\n    renderer.setObjectRenderer(renderer.plugins[this.pluginName]);\n    renderer.plugins[this.pluginName].render(this);\n  }\n\n  _renderCanvas(renderer) {\n    renderer.plugins[this.pluginName].render(this);\n  }\n\n  _calculateBounds() {\n    const trim = this._texture.trim;\n    const orig = this._texture.orig;\n\n    if (!trim || (trim.width === orig.width && trim.height === orig.height)) {\n      this.calculateVertices();\n      this._bounds.addQuad(this.vertexData);\n    } else {\n      this.calculateTrimmedVertices();\n      this._bounds.addQuad(this.vertexTrimmedData);\n    }\n  }\n\n  updateBaseTexture(imageUrl, useCache = false) {\n    if (!this.texture) return;\n    this.texture.updateSource(imageUrl, useCache);\n  }\n\n  getLocalBounds(rect) {\n    // we can do a fast local bounds if the sprite has no children!\n    if (this.children.length === 0) {\n      this._bounds.minX = this._texture.orig.width * -this._anchor._x;\n      this._bounds.minY = this._texture.orig.height * -this._anchor._y;\n      this._bounds.maxX = this._texture.orig.width * (1 - this._anchor._x);\n      this._bounds.maxY = this._texture.orig.height * (1 - this._anchor._y);\n\n      if (!rect) {\n        if (!this._localBoundsRect) {\n          this._localBoundsRect = new Rectangle();\n        }\n        rect = this._localBoundsRect;\n      }\n\n      return this._bounds.getRectangle(rect);\n    }\n\n    return super.getLocalBounds.call(this, rect);\n  }\n\n  containsPoint(point) {\n    this.worldTransform.applyInverse(point, tempPoint);\n\n    const width = this._texture.orig.width;\n    const height = this._texture.orig.height;\n    const x1 = -width * this.anchor.x;\n    let y1 = 0;\n\n    if (tempPoint.x >= x1 && tempPoint.x < x1 + width) {\n      y1 = -height * this.anchor.y;\n      if (tempPoint.y >= y1 && tempPoint.y < y1 + height) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  destroy(options) {\n    if (this.destroyed) return;\n\n    super.destroy(options);\n    this._texture.off(\"update\", this._onTextureUpdate, this);\n    this._anchor = null;\n\n    const destroyTexture =\n      typeof options === \"boolean\" ? options : options && options.texture;\n\n    if (destroyTexture) {\n      const destroyBaseTexture =\n        typeof options === \"boolean\" ? options : options && options.baseTexture;\n      this._texture.destroy(!!destroyBaseTexture);\n    }\n\n    this._texture = null;\n    this.shader = null;\n  }\n\n  static from(source) {\n    return new Sprite(Texture.from(source));\n  }\n\n  static fromFrame(frameId) {\n    const texture = TextureCache[frameId];\n    if (!texture) throw new Error(`The frameId \"${frameId}\" does not exist`);\n\n    return new Sprite(texture);\n  }\n\n  static fromImage(imageId, crossorigin, scaleMode) {\n    return new Sprite(Texture.fromImage(imageId, crossorigin, scaleMode));\n  }\n\n  get width() {\n    return Math.abs(this.scale.x) * this._texture.orig.width;\n  }\n\n  set width(value) {\n    const s = sign(this.scale.x) || 1;\n    this.scale.x = (s * value) / this._texture.orig.width;\n    this._width = value;\n  }\n\n  get height() {\n    return Math.abs(this.scale.y) * this._texture.orig.height;\n  }\n\n  set height(value) {\n    const s = sign(this.scale.y) || 1;\n    this.scale.y = (s * value) / this._texture.orig.height;\n    this._height = value;\n  }\n\n  get anchor() {\n    return this._anchor;\n  }\n\n  set anchor(value) {\n    this._anchor.copy(value);\n  }\n\n  get tint() {\n    return this._tint;\n  }\n\n  set tint(value) {\n    this._tint = value;\n    this._tintRGB = (value >> 16) + (value & 0xff00) + ((value & 0xff) << 16);\n  }\n\n  get texture() {\n    return this._texture;\n  }\n\n  set texture(value) {\n    if (this._texture === value) return;\n\n    this._texture = value || Texture.EMPTY;\n    this.cachedTint = 0xffffff;\n    this._textureID = -1;\n    this._textureTrimmedID = -1;\n\n    if (!value) return;\n    if (value.baseTexture.hasLoaded) {\n      this._onTextureUpdate();\n    } else {\n      value.once(\"update\", this._onTextureUpdate, this);\n    }\n  }\n}\n"],"mappings":"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"}