{"version":3,"file":"AlphaFilter.js","names":["AlphaFilter","Filter","constructor","alpha","glShaderKey","uniforms","uAlpha","value"],"sources":["../../../src/filters/alpha/AlphaFilter.js"],"sourcesContent":["import settings from \"../../settings\";\nimport Filter from \"../../renderers/webgl/filters/Filter\";\nimport { readFileSync } from \"fs\";\nimport { join } from \"path\";\nexport default class AlphaFilter extends Filter {\n  constructor(alpha = 1.0) {\n    super(\n      // vertex shader\n      readFileSync(join(__dirname, \"../fragments/default.vert\"), \"utf8\"),\n      // fragment shader\n      readFileSync(join(__dirname, \"./alpha.frag\"), \"utf8\")\n    );\n\n    this.alpha = alpha;\n    this.glShaderKey = \"alpha\";\n  }\n\n  /**\n   * Coefficient for alpha multiplication\n   *\n   * @member {number}\n   * @default 1\n   */\n  get alpha() {\n    return this.uniforms.uAlpha;\n  }\n\n  set alpha(value) {\n    this.uniforms.uAlpha = value;\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AAEA;AAA4B;AACb,MAAMA,WAAW,SAASC,eAAM,CAAC;EAC9CC,WAAW,CAACC,KAAK,EAAQ;IAAA,IAAbA,KAAK;MAALA,KAAK,GAAG,GAAG;IAAA;IACrB,KAAK,EACH;IAAA,uRAEA;IAAA,+KAED;IAED,IAAI,CAACA,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,WAAW,GAAG,OAAO;EAC5B;;EAEA;AACF;AACA;AACA;AACA;AACA;EACE,IAAID,KAAK,GAAG;IACV,OAAO,IAAI,CAACE,QAAQ,CAACC,MAAM;EAC7B;EAEA,IAAIH,KAAK,CAACI,KAAK,EAAE;IACf,IAAI,CAACF,QAAQ,CAACC,MAAM,GAAGC,KAAK;EAC9B;AACF;AAAC"}