{"version":3,"file":"Spritesheet.js","names":["Spritesheet","BATCH_SIZE","constructor","baseTexture","data","resolutionFilename","textures","animations","resolution","_updateResolution","imageUrl","_frames","frames","_frameKeys","Object","keys","_batchIndex","_callback","scale","meta","getResolutionOfUrl","undefined","parseFloat","update","parse","callback","length","_processFrames","_processAnimations","_parseComplete","_nextBatch","initialFrameIndex","frameIndex","maxFrames","sourceScale","i","rect","frame","trim","sourceSize","trimmed","orig","Rectangle","Math","floor","w","h","rotated","x","y","spriteSourceSize","Texture","anchor","addToTextureCache","animName","frameName","push","call","setTimeout","destroy","destroyBase"],"sources":["../../src/textures/Spritesheet.js"],"sourcesContent":["import { Rectangle, Texture } from \"../core\";\nimport { getResolutionOfUrl } from \"../utils\";\nimport { addToTextureCache } from \"../utils/cache\";\n\nexport default class Spritesheet {\n  static get BATCH_SIZE() {\n    return 1000;\n  }\n\n  constructor(baseTexture, data, resolutionFilename = null) {\n    this.baseTexture = baseTexture;\n    this.textures = {};\n    this.animations = {};\n    this.data = data;\n    this.resolution = this._updateResolution(\n      resolutionFilename || this.baseTexture.imageUrl\n    );\n\n    this._frames = this.data.frames;\n    this._frameKeys = Object.keys(this._frames);\n    this._batchIndex = 0;\n    this._callback = null;\n  }\n\n  _updateResolution(resolutionFilename) {\n    const scale = this.data.meta.scale;\n\n    // Use a defaultValue of `null` to check if a url-based resolution is set\n    let resolution = getResolutionOfUrl(resolutionFilename, null);\n\n    // No resolution found via URL\n    if (resolution === null) {\n      // Use the scale value or default to 1\n      resolution = scale !== undefined ? parseFloat(scale) : 1;\n    }\n\n    // For non-1 resolutions, update baseTexture\n    if (resolution !== 1) {\n      this.baseTexture.resolution = resolution;\n      this.baseTexture.update();\n    }\n\n    return resolution;\n  }\n\n  parse(callback) {\n    this._batchIndex = 0;\n    this._callback = callback;\n\n    if (this._frameKeys.length <= Spritesheet.BATCH_SIZE) {\n      this._processFrames(0);\n      this._processAnimations();\n      this._parseComplete();\n    } else {\n      this._nextBatch();\n    }\n  }\n\n  _processFrames(initialFrameIndex) {\n    let frameIndex = initialFrameIndex;\n    const maxFrames = Spritesheet.BATCH_SIZE;\n    const sourceScale = this.baseTexture.sourceScale;\n\n    while (\n      frameIndex - initialFrameIndex < maxFrames &&\n      frameIndex < this._frameKeys.length\n    ) {\n      const i = this._frameKeys[frameIndex];\n      const data = this._frames[i];\n      const rect = data.frame;\n\n      if (rect) {\n        let frame = null;\n        let trim = null;\n        const sourceSize =\n          data.trimmed !== false && data.sourceSize\n            ? data.sourceSize\n            : data.frame;\n\n        const orig = new Rectangle(\n          0,\n          0,\n          Math.floor(sourceSize.w * sourceScale) / this.resolution,\n          Math.floor(sourceSize.h * sourceScale) / this.resolution\n        );\n\n        if (data.rotated) {\n          frame = new Rectangle(\n            Math.floor(rect.x * sourceScale) / this.resolution,\n            Math.floor(rect.y * sourceScale) / this.resolution,\n            Math.floor(rect.h * sourceScale) / this.resolution,\n            Math.floor(rect.w * sourceScale) / this.resolution\n          );\n        } else {\n          frame = new Rectangle(\n            Math.floor(rect.x * sourceScale) / this.resolution,\n            Math.floor(rect.y * sourceScale) / this.resolution,\n            Math.floor(rect.w * sourceScale) / this.resolution,\n            Math.floor(rect.h * sourceScale) / this.resolution\n          );\n        }\n\n        //  Check to see if the sprite is trimmed\n        if (data.trimmed !== false && data.spriteSourceSize) {\n          trim = new Rectangle(\n            Math.floor(data.spriteSourceSize.x * sourceScale) / this.resolution,\n            Math.floor(data.spriteSourceSize.y * sourceScale) / this.resolution,\n            Math.floor(rect.w * sourceScale) / this.resolution,\n            Math.floor(rect.h * sourceScale) / this.resolution\n          );\n        }\n\n        this.textures[i] = new Texture(\n          this.baseTexture,\n          frame,\n          orig,\n          trim,\n          data.rotated ? 2 : 0,\n          data.anchor\n        );\n\n        addToTextureCache(this.textures[i], i);\n      }\n\n      frameIndex++;\n    }\n  }\n\n  _processAnimations() {\n    const animations = this.data.animations || {};\n\n    for (const animName in animations) {\n      this.animations[animName] = [];\n      for (const frameName of animations[animName]) {\n        this.animations[animName].push(this.textures[frameName]);\n      }\n    }\n  }\n\n  _parseComplete() {\n    const callback = this._callback;\n\n    this._callback = null;\n    this._batchIndex = 0;\n    callback.call(this, this.textures);\n  }\n\n  _nextBatch() {\n    this._processFrames(this._batchIndex * Spritesheet.BATCH_SIZE);\n    this._batchIndex++;\n    setTimeout(() => {\n      if (this._batchIndex * Spritesheet.BATCH_SIZE < this._frameKeys.length) {\n        this._nextBatch();\n      } else {\n        this._processAnimations();\n        this._parseComplete();\n      }\n    }, 0);\n  }\n\n  destroy(destroyBase = false) {\n    for (const i in this.textures) {\n      this.textures[i].destroy();\n    }\n    this._frames = null;\n    this._frameKeys = null;\n    this.data = null;\n    this.textures = null;\n    if (destroyBase) {\n      this.baseTexture.destroy();\n    }\n    this.baseTexture = null;\n  }\n}\n"],"mappings":"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"}