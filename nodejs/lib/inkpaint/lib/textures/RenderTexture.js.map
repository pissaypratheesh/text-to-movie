{"version":3,"file":"RenderTexture.js","names":["RenderTexture","Texture","constructor","baseRenderTexture","frame","_legacyRenderer","BaseRenderTexture","width","arguments","height","scaleMode","resolution","console","warn","legacyRenderer","valid","_updateUvs","resize","doNotResizeBaseTexture","Math","ceil","_frame","orig","baseTexture","create"],"sources":["../../src/textures/RenderTexture.js"],"sourcesContent":["import BaseRenderTexture from \"./BaseRenderTexture\";\nimport Texture from \"./Texture\";\n\nexport default class RenderTexture extends Texture {\n  constructor(baseRenderTexture, frame) {\n    // support for legacy..\n    let _legacyRenderer = null;\n\n    if (!(baseRenderTexture instanceof BaseRenderTexture)) {\n      /* eslint-disable prefer-rest-params, no-console */\n      const width = arguments[1];\n      const height = arguments[2];\n      const scaleMode = arguments[3];\n      const resolution = arguments[4];\n\n      // we have an old render texture..\n      console.warn(\n        `Please use RenderTexture.create(${width}, ${height}) instead of the ctor directly.`\n      );\n      _legacyRenderer = arguments[0];\n      frame = null;\n      baseRenderTexture = new BaseRenderTexture(\n        width,\n        height,\n        scaleMode,\n        resolution\n      );\n    }\n\n    super(baseRenderTexture, frame);\n    this.legacyRenderer = _legacyRenderer;\n    this.valid = true;\n    this._updateUvs();\n  }\n\n  resize(width, height, doNotResizeBaseTexture) {\n    width = Math.ceil(width);\n    height = Math.ceil(height);\n\n    // TODO - could be not required..\n    this.valid = width > 0 && height > 0;\n    this._frame.width = this.orig.width = width;\n    this._frame.height = this.orig.height = height;\n\n    if (!doNotResizeBaseTexture) {\n      this.baseTexture.resize(width, height);\n    }\n\n    this._updateUvs();\n  }\n\n  static create(width, height, scaleMode, resolution) {\n    return new RenderTexture(\n      new BaseRenderTexture(width, height, scaleMode, resolution)\n    );\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AAAgC;AAEjB,MAAMA,aAAa,SAASC,gBAAO,CAAC;EACjDC,WAAW,CAACC,iBAAiB,EAAEC,KAAK,EAAE;IACpC;IACA,IAAIC,eAAe,GAAG,IAAI;IAE1B,IAAI,EAAEF,iBAAiB,YAAYG,0BAAiB,CAAC,EAAE;MACrD;MACA,IAAMC,KAAK,GAAGC,SAAS,CAAC,CAAC,CAAC;MAC1B,IAAMC,MAAM,GAAGD,SAAS,CAAC,CAAC,CAAC;MAC3B,IAAME,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC;MAC9B,IAAMG,UAAU,GAAGH,SAAS,CAAC,CAAC,CAAC;;MAE/B;MACAI,OAAO,CAACC,IAAI,sCACyBN,KAAK,UAAKE,MAAM,qCACpD;MACDJ,eAAe,GAAGG,SAAS,CAAC,CAAC,CAAC;MAC9BJ,KAAK,GAAG,IAAI;MACZD,iBAAiB,GAAG,IAAIG,0BAAiB,CACvCC,KAAK,EACLE,MAAM,EACNC,SAAS,EACTC,UAAU,CACX;IACH;IAEA,KAAK,CAACR,iBAAiB,EAAEC,KAAK,CAAC;IAC/B,IAAI,CAACU,cAAc,GAAGT,eAAe;IACrC,IAAI,CAACU,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAC,MAAM,CAACV,KAAK,EAAEE,MAAM,EAAES,sBAAsB,EAAE;IAC5CX,KAAK,GAAGY,IAAI,CAACC,IAAI,CAACb,KAAK,CAAC;IACxBE,MAAM,GAAGU,IAAI,CAACC,IAAI,CAACX,MAAM,CAAC;;IAE1B;IACA,IAAI,CAACM,KAAK,GAAGR,KAAK,GAAG,CAAC,IAAIE,MAAM,GAAG,CAAC;IACpC,IAAI,CAACY,MAAM,CAACd,KAAK,GAAG,IAAI,CAACe,IAAI,CAACf,KAAK,GAAGA,KAAK;IAC3C,IAAI,CAACc,MAAM,CAACZ,MAAM,GAAG,IAAI,CAACa,IAAI,CAACb,MAAM,GAAGA,MAAM;IAE9C,IAAI,CAACS,sBAAsB,EAAE;MAC3B,IAAI,CAACK,WAAW,CAACN,MAAM,CAACV,KAAK,EAAEE,MAAM,CAAC;IACxC;IAEA,IAAI,CAACO,UAAU,EAAE;EACnB;EAEA,OAAOQ,MAAM,CAACjB,KAAK,EAAEE,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAE;IAClD,OAAO,IAAIX,aAAa,CACtB,IAAIM,0BAAiB,CAACC,KAAK,EAAEE,MAAM,EAAEC,SAAS,EAAEC,UAAU,CAAC,CAC5D;EACH;AACF;AAAC"}