{"version":3,"file":"bezierCurveTo.js","names":["bezierCurveTo","fromX","fromY","cpX","cpY","cpX2","cpY2","toX","toY","n","path","dt","dt2","dt3","t2","t3","push","i","j"],"sources":["../../../src/graphics/utils/bezierCurveTo.js"],"sourcesContent":["/**\n * Calculate the points for a bezier curve and then draws it.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @param {number} fromX - Starting point x\n * @param {number} fromY - Starting point y\n * @param {number} cpX - Control point x\n * @param {number} cpY - Control point y\n * @param {number} cpX2 - Second Control point x\n * @param {number} cpY2 - Second Control point y\n * @param {number} toX - Destination point x\n * @param {number} toY - Destination point y\n * @param {number} n - Number of segments approximating the bezier curve\n * @param {number[]} [path=[]] - Path array to push points into\n * @return {number[]} Array of points of the curve\n */\nexport default function bezierCurveTo(fromX, fromY, cpX, cpY, cpX2, cpY2, toX, toY, n, path = [])\n{\n    let dt = 0;\n    let dt2 = 0;\n    let dt3 = 0;\n    let t2 = 0;\n    let t3 = 0;\n\n    path.push(fromX, fromY);\n\n    for (let i = 1, j = 0; i <= n; ++i)\n    {\n        j = i / n;\n\n        dt = (1 - j);\n        dt2 = dt * dt;\n        dt3 = dt2 * dt;\n\n        t2 = j * j;\n        t3 = t2 * j;\n\n        path.push(\n            (dt3 * fromX) + (3 * dt2 * j * cpX) + (3 * dt * t2 * cpX2) + (t3 * toX),\n            (dt3 * fromY) + (3 * dt2 * j * cpY) + (3 * dt * t2 * cpY2) + (t3 * toY)\n        );\n    }\n\n    return path;\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,aAAa,CAACC,KAAK,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,CAAC,EAAEC,IAAI,EAC3F;EAAA,IADuFA,IAAI;IAAJA,IAAI,GAAG,EAAE;EAAA;EAE5F,IAAIC,EAAE,GAAG,CAAC;EACV,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,GAAG,GAAG,CAAC;EACX,IAAIC,EAAE,GAAG,CAAC;EACV,IAAIC,EAAE,GAAG,CAAC;EAEVL,IAAI,CAACM,IAAI,CAACf,KAAK,EAAEC,KAAK,CAAC;EAEvB,KAAK,IAAIe,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAED,CAAC,IAAIR,CAAC,EAAE,EAAEQ,CAAC,EAClC;IACIC,CAAC,GAAGD,CAAC,GAAGR,CAAC;IAETE,EAAE,GAAI,CAAC,GAAGO,CAAE;IACZN,GAAG,GAAGD,EAAE,GAAGA,EAAE;IACbE,GAAG,GAAGD,GAAG,GAAGD,EAAE;IAEdG,EAAE,GAAGI,CAAC,GAAGA,CAAC;IACVH,EAAE,GAAGD,EAAE,GAAGI,CAAC;IAEXR,IAAI,CAACM,IAAI,CACJH,GAAG,GAAGZ,KAAK,GAAK,CAAC,GAAGW,GAAG,GAAGM,CAAC,GAAGf,GAAI,GAAI,CAAC,GAAGQ,EAAE,GAAGG,EAAE,GAAGT,IAAK,GAAIU,EAAE,GAAGR,GAAI,EACtEM,GAAG,GAAGX,KAAK,GAAK,CAAC,GAAGU,GAAG,GAAGM,CAAC,GAAGd,GAAI,GAAI,CAAC,GAAGO,EAAE,GAAGG,EAAE,GAAGR,IAAK,GAAIS,EAAE,GAAGP,GAAI,CAC1E;EACL;EAEA,OAAOE,IAAI;AACf"}