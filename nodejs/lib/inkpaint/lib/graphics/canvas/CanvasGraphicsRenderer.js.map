{"version":3,"file":"CanvasGraphicsRenderer.js","names":["CanvasGraphicsRenderer","constructor","renderer","render","graphics","context","worldAlpha","transform","worldTransform","resolution","setTransform","a","b","c","d","tx","ty","canvasTintDirty","dirty","_prevTint","tint","updateGraphicsTint","setBlendMode","blendMode","i","graphicsData","length","data","shape","fillColor","_fillTint","lineColor","_lineTint","lineWidth","type","SHAPES","POLY","beginPath","points","holes","outerArea","innerArea","px","py","moveTo","j","lineTo","closed","closePath","k","close","fill","globalAlpha","fillAlpha","fillStyle","toString","substr","lineAlpha","strokeStyle","stroke","RECT","fillRect","x","y","width","height","strokeRect","CIRC","arc","radius","Math","PI","ELIP","w","h","kappa","ox","oy","xe","ye","xm","ym","bezierCurveTo","RREC","rx","ry","maxRadius","min","quadraticCurveTo","tintR","tintG","tintB","renderPolygon","destroy","CanvasRenderer","registerPlugin"],"sources":["../../../src/graphics/canvas/CanvasGraphicsRenderer.js"],"sourcesContent":["import CanvasRenderer from \"../../renderers/canvas/CanvasRenderer\";\nimport { SHAPES } from \"../../const\";\n\nexport default class CanvasGraphicsRenderer {\n  constructor(renderer) {\n    this.renderer = renderer;\n  }\n\n  render(graphics) {\n    const renderer = this.renderer;\n    const context = renderer.context;\n    const worldAlpha = graphics.worldAlpha;\n    const transform = graphics.transform.worldTransform;\n    const resolution = renderer.resolution;\n\n    context.setTransform(\n      transform.a * resolution,\n      transform.b * resolution,\n      transform.c * resolution,\n      transform.d * resolution,\n      transform.tx * resolution,\n      transform.ty * resolution\n    );\n\n    // update tint if graphics was dirty\n    if (\n      graphics.canvasTintDirty !== graphics.dirty ||\n      graphics._prevTint !== graphics.tint\n    ) {\n      this.updateGraphicsTint(graphics);\n    }\n\n    renderer.setBlendMode(graphics.blendMode);\n\n    for (let i = 0; i < graphics.graphicsData.length; i++) {\n      const data = graphics.graphicsData[i];\n      const shape = data.shape;\n\n      const fillColor = data._fillTint;\n      const lineColor = data._lineTint;\n\n      context.lineWidth = data.lineWidth;\n\n      if (data.type === SHAPES.POLY) {\n        context.beginPath();\n\n        let points = shape.points;\n        const holes = data.holes;\n        let outerArea;\n        let innerArea;\n        let px;\n        let py;\n\n        context.moveTo(points[0], points[1]);\n\n        for (let j = 2; j < points.length; j += 2) {\n          context.lineTo(points[j], points[j + 1]);\n        }\n\n        // if the first and last point are the same close the path - much neater :)\n        if (shape.closed) {\n          context.closePath();\n        }\n\n        if (holes.length > 0) {\n          outerArea = 0;\n          px = points[0];\n          py = points[1];\n          for (let j = 2; j + 2 < points.length; j += 2) {\n            outerArea +=\n              (points[j] - px) * (points[j + 3] - py) -\n              (points[j + 2] - px) * (points[j + 1] - py);\n          }\n\n          for (let k = 0; k < holes.length; k++) {\n            points = holes[k].points;\n\n            if (!points) {\n              continue;\n            }\n\n            innerArea = 0;\n            px = points[0];\n            py = points[1];\n            for (let j = 2; j + 2 < points.length; j += 2) {\n              innerArea +=\n                (points[j] - px) * (points[j + 3] - py) -\n                (points[j + 2] - px) * (points[j + 1] - py);\n            }\n\n            if (innerArea * outerArea < 0) {\n              context.moveTo(points[0], points[1]);\n\n              for (let j = 2; j < points.length; j += 2) {\n                context.lineTo(points[j], points[j + 1]);\n              }\n            } else {\n              context.moveTo(\n                points[points.length - 2],\n                points[points.length - 1]\n              );\n\n              for (let j = points.length - 4; j >= 0; j -= 2) {\n                context.lineTo(points[j], points[j + 1]);\n              }\n            }\n\n            if (holes[k].close) {\n              context.closePath();\n            }\n          }\n        }\n\n        if (data.fill) {\n          context.globalAlpha = data.fillAlpha * worldAlpha;\n          context.fillStyle = `#${`00000${(fillColor | 0).toString(16)}`.substr(\n            -6\n          )}`;\n          context.fill();\n        }\n        if (data.lineWidth) {\n          context.globalAlpha = data.lineAlpha * worldAlpha;\n          context.strokeStyle = `#${`00000${(lineColor | 0).toString(\n            16\n          )}`.substr(-6)}`;\n          context.stroke();\n        }\n      } else if (data.type === SHAPES.RECT) {\n        if (data.fillColor || data.fillColor === 0) {\n          context.globalAlpha = data.fillAlpha * worldAlpha;\n          context.fillStyle = `#${`00000${(fillColor | 0).toString(16)}`.substr(\n            -6\n          )}`;\n          context.fillRect(shape.x, shape.y, shape.width, shape.height);\n        }\n        if (data.lineWidth) {\n          context.globalAlpha = data.lineAlpha * worldAlpha;\n          context.strokeStyle = `#${`00000${(lineColor | 0).toString(\n            16\n          )}`.substr(-6)}`;\n          context.strokeRect(shape.x, shape.y, shape.width, shape.height);\n        }\n      } else if (data.type === SHAPES.CIRC) {\n        // TODO - need to be Undefined!\n        context.beginPath();\n        context.arc(shape.x, shape.y, shape.radius, 0, 2 * Math.PI);\n        context.closePath();\n\n        if (data.fill) {\n          context.globalAlpha = data.fillAlpha * worldAlpha;\n          context.fillStyle = `#${`00000${(fillColor | 0).toString(16)}`.substr(\n            -6\n          )}`;\n          context.fill();\n        }\n        if (data.lineWidth) {\n          context.globalAlpha = data.lineAlpha * worldAlpha;\n          context.strokeStyle = `#${`00000${(lineColor | 0).toString(\n            16\n          )}`.substr(-6)}`;\n          context.stroke();\n        }\n      } else if (data.type === SHAPES.ELIP) {\n        // ellipse code taken from: http://stackoverflow.com/questions/2172798/how-to-draw-an-oval-in-html5-canvas\n\n        const w = shape.width * 2;\n        const h = shape.height * 2;\n\n        const x = shape.x - w / 2;\n        const y = shape.y - h / 2;\n\n        context.beginPath();\n\n        const kappa = 0.5522848;\n        const ox = (w / 2) * kappa; // control point offset horizontal\n        const oy = (h / 2) * kappa; // control point offset vertical\n        const xe = x + w; // x-end\n        const ye = y + h; // y-end\n        const xm = x + w / 2; // x-middle\n        const ym = y + h / 2; // y-middle\n\n        context.moveTo(x, ym);\n        context.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n        context.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n        context.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n        context.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n\n        context.closePath();\n\n        if (data.fill) {\n          context.globalAlpha = data.fillAlpha * worldAlpha;\n          context.fillStyle = `#${`00000${(fillColor | 0).toString(16)}`.substr(\n            -6\n          )}`;\n          context.fill();\n        }\n        if (data.lineWidth) {\n          context.globalAlpha = data.lineAlpha * worldAlpha;\n          context.strokeStyle = `#${`00000${(lineColor | 0).toString(\n            16\n          )}`.substr(-6)}`;\n          context.stroke();\n        }\n      } else if (data.type === SHAPES.RREC) {\n        const rx = shape.x;\n        const ry = shape.y;\n        const width = shape.width;\n        const height = shape.height;\n        let radius = shape.radius;\n\n        const maxRadius = (Math.min(width, height) / 2) | 0;\n\n        radius = radius > maxRadius ? maxRadius : radius;\n\n        context.beginPath();\n        context.moveTo(rx, ry + radius);\n        context.lineTo(rx, ry + height - radius);\n        context.quadraticCurveTo(rx, ry + height, rx + radius, ry + height);\n        context.lineTo(rx + width - radius, ry + height);\n        context.quadraticCurveTo(\n          rx + width,\n          ry + height,\n          rx + width,\n          ry + height - radius\n        );\n        context.lineTo(rx + width, ry + radius);\n        context.quadraticCurveTo(rx + width, ry, rx + width - radius, ry);\n        context.lineTo(rx + radius, ry);\n        context.quadraticCurveTo(rx, ry, rx, ry + radius);\n        context.closePath();\n\n        if (data.fillColor || data.fillColor === 0) {\n          context.globalAlpha = data.fillAlpha * worldAlpha;\n          context.fillStyle = `#${`00000${(fillColor | 0).toString(16)}`.substr(\n            -6\n          )}`;\n          context.fill();\n        }\n\n        if (data.lineWidth) {\n          context.globalAlpha = data.lineAlpha * worldAlpha;\n          context.strokeStyle = `#${`00000${(lineColor | 0).toString(\n            16\n          )}`.substr(-6)}`;\n          context.stroke();\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the tint of a graphics object\n   *\n   * @private\n   * @param {InkPaint.Graphics} graphics - the graphics that will have its tint updated\n   */\n  updateGraphicsTint(graphics) {\n    graphics._prevTint = graphics.tint;\n    graphics.canvasTintDirty = graphics.dirty;\n\n    const tintR = ((graphics.tint >> 16) & 0xff) / 255;\n    const tintG = ((graphics.tint >> 8) & 0xff) / 255;\n    const tintB = (graphics.tint & 0xff) / 255;\n\n    for (let i = 0; i < graphics.graphicsData.length; ++i) {\n      const data = graphics.graphicsData[i];\n\n      const fillColor = data.fillColor | 0;\n      const lineColor = data.lineColor | 0;\n\n      // super inline, cos optimization :)\n      data._fillTint =\n        (((((fillColor >> 16) & 0xff) / 255) * tintR * 255) << 16) +\n        (((((fillColor >> 8) & 0xff) / 255) * tintG * 255) << 8) +\n        ((fillColor & 0xff) / 255) * tintB * 255;\n\n      data._lineTint =\n        (((((lineColor >> 16) & 0xff) / 255) * tintR * 255) << 16) +\n        (((((lineColor >> 8) & 0xff) / 255) * tintG * 255) << 8) +\n        ((lineColor & 0xff) / 255) * tintB * 255;\n    }\n  }\n\n  renderPolygon(points, close, context) {\n    context.moveTo(points[0], points[1]);\n\n    for (let j = 1; j < points.length / 2; ++j) {\n      context.lineTo(points[j * 2], points[j * 2 + 1]);\n    }\n\n    if (close) {\n      context.closePath();\n    }\n  }\n\n  /**\n   * destroy graphics object\n   *\n   */\n  destroy() {\n    this.renderer = null;\n  }\n}\n\nCanvasRenderer.registerPlugin(\"graphics\", CanvasGraphicsRenderer);\n"],"mappings":";;;;;;AAAA;AACA;AAAqC;AAEtB,MAAMA,sBAAsB,CAAC;EAC1CC,WAAW,CAACC,QAAQ,EAAE;IACpB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;EAC1B;EAEAC,MAAM,CAACC,QAAQ,EAAE;IACf,IAAMF,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC9B,IAAMG,OAAO,GAAGH,QAAQ,CAACG,OAAO;IAChC,IAAMC,UAAU,GAAGF,QAAQ,CAACE,UAAU;IACtC,IAAMC,SAAS,GAAGH,QAAQ,CAACG,SAAS,CAACC,cAAc;IACnD,IAAMC,UAAU,GAAGP,QAAQ,CAACO,UAAU;IAEtCJ,OAAO,CAACK,YAAY,CAClBH,SAAS,CAACI,CAAC,GAAGF,UAAU,EACxBF,SAAS,CAACK,CAAC,GAAGH,UAAU,EACxBF,SAAS,CAACM,CAAC,GAAGJ,UAAU,EACxBF,SAAS,CAACO,CAAC,GAAGL,UAAU,EACxBF,SAAS,CAACQ,EAAE,GAAGN,UAAU,EACzBF,SAAS,CAACS,EAAE,GAAGP,UAAU,CAC1B;;IAED;IACA,IACEL,QAAQ,CAACa,eAAe,KAAKb,QAAQ,CAACc,KAAK,IAC3Cd,QAAQ,CAACe,SAAS,KAAKf,QAAQ,CAACgB,IAAI,EACpC;MACA,IAAI,CAACC,kBAAkB,CAACjB,QAAQ,CAAC;IACnC;IAEAF,QAAQ,CAACoB,YAAY,CAAClB,QAAQ,CAACmB,SAAS,CAAC;IAEzC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,QAAQ,CAACqB,YAAY,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MACrD,IAAMG,IAAI,GAAGvB,QAAQ,CAACqB,YAAY,CAACD,CAAC,CAAC;MACrC,IAAMI,KAAK,GAAGD,IAAI,CAACC,KAAK;MAExB,IAAMC,SAAS,GAAGF,IAAI,CAACG,SAAS;MAChC,IAAMC,SAAS,GAAGJ,IAAI,CAACK,SAAS;MAEhC3B,OAAO,CAAC4B,SAAS,GAAGN,IAAI,CAACM,SAAS;MAElC,IAAIN,IAAI,CAACO,IAAI,KAAKC,aAAM,CAACC,IAAI,EAAE;QAC7B/B,OAAO,CAACgC,SAAS,EAAE;QAEnB,IAAIC,MAAM,GAAGV,KAAK,CAACU,MAAM;QACzB,IAAMC,KAAK,GAAGZ,IAAI,CAACY,KAAK;QACxB,IAAIC,SAAS;QACb,IAAIC,SAAS;QACb,IAAIC,EAAE;QACN,IAAIC,EAAE;QAENtC,OAAO,CAACuC,MAAM,CAACN,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;QAEpC,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAACZ,MAAM,EAAEmB,CAAC,IAAI,CAAC,EAAE;UACzCxC,OAAO,CAACyC,MAAM,CAACR,MAAM,CAACO,CAAC,CAAC,EAAEP,MAAM,CAACO,CAAC,GAAG,CAAC,CAAC,CAAC;QAC1C;;QAEA;QACA,IAAIjB,KAAK,CAACmB,MAAM,EAAE;UAChB1C,OAAO,CAAC2C,SAAS,EAAE;QACrB;QAEA,IAAIT,KAAK,CAACb,MAAM,GAAG,CAAC,EAAE;UACpBc,SAAS,GAAG,CAAC;UACbE,EAAE,GAAGJ,MAAM,CAAC,CAAC,CAAC;UACdK,EAAE,GAAGL,MAAM,CAAC,CAAC,CAAC;UACd,KAAK,IAAIO,EAAC,GAAG,CAAC,EAAEA,EAAC,GAAG,CAAC,GAAGP,MAAM,CAACZ,MAAM,EAAEmB,EAAC,IAAI,CAAC,EAAE;YAC7CL,SAAS,IACP,CAACF,MAAM,CAACO,EAAC,CAAC,GAAGH,EAAE,KAAKJ,MAAM,CAACO,EAAC,GAAG,CAAC,CAAC,GAAGF,EAAE,CAAC,GACvC,CAACL,MAAM,CAACO,EAAC,GAAG,CAAC,CAAC,GAAGH,EAAE,KAAKJ,MAAM,CAACO,EAAC,GAAG,CAAC,CAAC,GAAGF,EAAE,CAAC;UAC/C;UAEA,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,KAAK,CAACb,MAAM,EAAEuB,CAAC,EAAE,EAAE;YACrCX,MAAM,GAAGC,KAAK,CAACU,CAAC,CAAC,CAACX,MAAM;YAExB,IAAI,CAACA,MAAM,EAAE;cACX;YACF;YAEAG,SAAS,GAAG,CAAC;YACbC,EAAE,GAAGJ,MAAM,CAAC,CAAC,CAAC;YACdK,EAAE,GAAGL,MAAM,CAAC,CAAC,CAAC;YACd,KAAK,IAAIO,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAG,CAAC,GAAGP,MAAM,CAACZ,MAAM,EAAEmB,GAAC,IAAI,CAAC,EAAE;cAC7CJ,SAAS,IACP,CAACH,MAAM,CAACO,GAAC,CAAC,GAAGH,EAAE,KAAKJ,MAAM,CAACO,GAAC,GAAG,CAAC,CAAC,GAAGF,EAAE,CAAC,GACvC,CAACL,MAAM,CAACO,GAAC,GAAG,CAAC,CAAC,GAAGH,EAAE,KAAKJ,MAAM,CAACO,GAAC,GAAG,CAAC,CAAC,GAAGF,EAAE,CAAC;YAC/C;YAEA,IAAIF,SAAS,GAAGD,SAAS,GAAG,CAAC,EAAE;cAC7BnC,OAAO,CAACuC,MAAM,CAACN,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;cAEpC,KAAK,IAAIO,GAAC,GAAG,CAAC,EAAEA,GAAC,GAAGP,MAAM,CAACZ,MAAM,EAAEmB,GAAC,IAAI,CAAC,EAAE;gBACzCxC,OAAO,CAACyC,MAAM,CAACR,MAAM,CAACO,GAAC,CAAC,EAAEP,MAAM,CAACO,GAAC,GAAG,CAAC,CAAC,CAAC;cAC1C;YACF,CAAC,MAAM;cACLxC,OAAO,CAACuC,MAAM,CACZN,MAAM,CAACA,MAAM,CAACZ,MAAM,GAAG,CAAC,CAAC,EACzBY,MAAM,CAACA,MAAM,CAACZ,MAAM,GAAG,CAAC,CAAC,CAC1B;cAED,KAAK,IAAImB,GAAC,GAAGP,MAAM,CAACZ,MAAM,GAAG,CAAC,EAAEmB,GAAC,IAAI,CAAC,EAAEA,GAAC,IAAI,CAAC,EAAE;gBAC9CxC,OAAO,CAACyC,MAAM,CAACR,MAAM,CAACO,GAAC,CAAC,EAAEP,MAAM,CAACO,GAAC,GAAG,CAAC,CAAC,CAAC;cAC1C;YACF;YAEA,IAAIN,KAAK,CAACU,CAAC,CAAC,CAACC,KAAK,EAAE;cAClB7C,OAAO,CAAC2C,SAAS,EAAE;YACrB;UACF;QACF;QAEA,IAAIrB,IAAI,CAACwB,IAAI,EAAE;UACb9C,OAAO,CAAC+C,WAAW,GAAGzB,IAAI,CAAC0B,SAAS,GAAG/C,UAAU;UACjDD,OAAO,CAACiD,SAAS,SAAO,WAAQ,CAACzB,SAAS,GAAG,CAAC,EAAE0B,QAAQ,CAAC,EAAE,CAAC,EAAGC,MAAM,CACnE,CAAC,CAAC,CACD;UACHnD,OAAO,CAAC8C,IAAI,EAAE;QAChB;QACA,IAAIxB,IAAI,CAACM,SAAS,EAAE;UAClB5B,OAAO,CAAC+C,WAAW,GAAGzB,IAAI,CAAC8B,SAAS,GAAGnD,UAAU;UACjDD,OAAO,CAACqD,WAAW,SAAO,WAAQ,CAAC3B,SAAS,GAAG,CAAC,EAAEwB,QAAQ,CACxD,EAAE,CACH,EAAGC,MAAM,CAAC,CAAC,CAAC,CAAG;UAChBnD,OAAO,CAACsD,MAAM,EAAE;QAClB;MACF,CAAC,MAAM,IAAIhC,IAAI,CAACO,IAAI,KAAKC,aAAM,CAACyB,IAAI,EAAE;QACpC,IAAIjC,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACE,SAAS,KAAK,CAAC,EAAE;UAC1CxB,OAAO,CAAC+C,WAAW,GAAGzB,IAAI,CAAC0B,SAAS,GAAG/C,UAAU;UACjDD,OAAO,CAACiD,SAAS,SAAO,WAAQ,CAACzB,SAAS,GAAG,CAAC,EAAE0B,QAAQ,CAAC,EAAE,CAAC,EAAGC,MAAM,CACnE,CAAC,CAAC,CACD;UACHnD,OAAO,CAACwD,QAAQ,CAACjC,KAAK,CAACkC,CAAC,EAAElC,KAAK,CAACmC,CAAC,EAAEnC,KAAK,CAACoC,KAAK,EAAEpC,KAAK,CAACqC,MAAM,CAAC;QAC/D;QACA,IAAItC,IAAI,CAACM,SAAS,EAAE;UAClB5B,OAAO,CAAC+C,WAAW,GAAGzB,IAAI,CAAC8B,SAAS,GAAGnD,UAAU;UACjDD,OAAO,CAACqD,WAAW,SAAO,WAAQ,CAAC3B,SAAS,GAAG,CAAC,EAAEwB,QAAQ,CACxD,EAAE,CACH,EAAGC,MAAM,CAAC,CAAC,CAAC,CAAG;UAChBnD,OAAO,CAAC6D,UAAU,CAACtC,KAAK,CAACkC,CAAC,EAAElC,KAAK,CAACmC,CAAC,EAAEnC,KAAK,CAACoC,KAAK,EAAEpC,KAAK,CAACqC,MAAM,CAAC;QACjE;MACF,CAAC,MAAM,IAAItC,IAAI,CAACO,IAAI,KAAKC,aAAM,CAACgC,IAAI,EAAE;QACpC;QACA9D,OAAO,CAACgC,SAAS,EAAE;QACnBhC,OAAO,CAAC+D,GAAG,CAACxC,KAAK,CAACkC,CAAC,EAAElC,KAAK,CAACmC,CAAC,EAAEnC,KAAK,CAACyC,MAAM,EAAE,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACC,EAAE,CAAC;QAC3DlE,OAAO,CAAC2C,SAAS,EAAE;QAEnB,IAAIrB,IAAI,CAACwB,IAAI,EAAE;UACb9C,OAAO,CAAC+C,WAAW,GAAGzB,IAAI,CAAC0B,SAAS,GAAG/C,UAAU;UACjDD,OAAO,CAACiD,SAAS,SAAO,WAAQ,CAACzB,SAAS,GAAG,CAAC,EAAE0B,QAAQ,CAAC,EAAE,CAAC,EAAGC,MAAM,CACnE,CAAC,CAAC,CACD;UACHnD,OAAO,CAAC8C,IAAI,EAAE;QAChB;QACA,IAAIxB,IAAI,CAACM,SAAS,EAAE;UAClB5B,OAAO,CAAC+C,WAAW,GAAGzB,IAAI,CAAC8B,SAAS,GAAGnD,UAAU;UACjDD,OAAO,CAACqD,WAAW,SAAO,WAAQ,CAAC3B,SAAS,GAAG,CAAC,EAAEwB,QAAQ,CACxD,EAAE,CACH,EAAGC,MAAM,CAAC,CAAC,CAAC,CAAG;UAChBnD,OAAO,CAACsD,MAAM,EAAE;QAClB;MACF,CAAC,MAAM,IAAIhC,IAAI,CAACO,IAAI,KAAKC,aAAM,CAACqC,IAAI,EAAE;QACpC;;QAEA,IAAMC,CAAC,GAAG7C,KAAK,CAACoC,KAAK,GAAG,CAAC;QACzB,IAAMU,CAAC,GAAG9C,KAAK,CAACqC,MAAM,GAAG,CAAC;QAE1B,IAAMH,CAAC,GAAGlC,KAAK,CAACkC,CAAC,GAAGW,CAAC,GAAG,CAAC;QACzB,IAAMV,CAAC,GAAGnC,KAAK,CAACmC,CAAC,GAAGW,CAAC,GAAG,CAAC;QAEzBrE,OAAO,CAACgC,SAAS,EAAE;QAEnB,IAAMsC,KAAK,GAAG,SAAS;QACvB,IAAMC,EAAE,GAAIH,CAAC,GAAG,CAAC,GAAIE,KAAK,CAAC,CAAC;QAC5B,IAAME,EAAE,GAAIH,CAAC,GAAG,CAAC,GAAIC,KAAK,CAAC,CAAC;QAC5B,IAAMG,EAAE,GAAGhB,CAAC,GAAGW,CAAC,CAAC,CAAC;QAClB,IAAMM,EAAE,GAAGhB,CAAC,GAAGW,CAAC,CAAC,CAAC;QAClB,IAAMM,EAAE,GAAGlB,CAAC,GAAGW,CAAC,GAAG,CAAC,CAAC,CAAC;QACtB,IAAMQ,EAAE,GAAGlB,CAAC,GAAGW,CAAC,GAAG,CAAC,CAAC,CAAC;;QAEtBrE,OAAO,CAACuC,MAAM,CAACkB,CAAC,EAAEmB,EAAE,CAAC;QACrB5E,OAAO,CAAC6E,aAAa,CAACpB,CAAC,EAAEmB,EAAE,GAAGJ,EAAE,EAAEG,EAAE,GAAGJ,EAAE,EAAEb,CAAC,EAAEiB,EAAE,EAAEjB,CAAC,CAAC;QACpD1D,OAAO,CAAC6E,aAAa,CAACF,EAAE,GAAGJ,EAAE,EAAEb,CAAC,EAAEe,EAAE,EAAEG,EAAE,GAAGJ,EAAE,EAAEC,EAAE,EAAEG,EAAE,CAAC;QACtD5E,OAAO,CAAC6E,aAAa,CAACJ,EAAE,EAAEG,EAAE,GAAGJ,EAAE,EAAEG,EAAE,GAAGJ,EAAE,EAAEG,EAAE,EAAEC,EAAE,EAAED,EAAE,CAAC;QACvD1E,OAAO,CAAC6E,aAAa,CAACF,EAAE,GAAGJ,EAAE,EAAEG,EAAE,EAAEjB,CAAC,EAAEmB,EAAE,GAAGJ,EAAE,EAAEf,CAAC,EAAEmB,EAAE,CAAC;QAErD5E,OAAO,CAAC2C,SAAS,EAAE;QAEnB,IAAIrB,IAAI,CAACwB,IAAI,EAAE;UACb9C,OAAO,CAAC+C,WAAW,GAAGzB,IAAI,CAAC0B,SAAS,GAAG/C,UAAU;UACjDD,OAAO,CAACiD,SAAS,SAAO,WAAQ,CAACzB,SAAS,GAAG,CAAC,EAAE0B,QAAQ,CAAC,EAAE,CAAC,EAAGC,MAAM,CACnE,CAAC,CAAC,CACD;UACHnD,OAAO,CAAC8C,IAAI,EAAE;QAChB;QACA,IAAIxB,IAAI,CAACM,SAAS,EAAE;UAClB5B,OAAO,CAAC+C,WAAW,GAAGzB,IAAI,CAAC8B,SAAS,GAAGnD,UAAU;UACjDD,OAAO,CAACqD,WAAW,SAAO,WAAQ,CAAC3B,SAAS,GAAG,CAAC,EAAEwB,QAAQ,CACxD,EAAE,CACH,EAAGC,MAAM,CAAC,CAAC,CAAC,CAAG;UAChBnD,OAAO,CAACsD,MAAM,EAAE;QAClB;MACF,CAAC,MAAM,IAAIhC,IAAI,CAACO,IAAI,KAAKC,aAAM,CAACgD,IAAI,EAAE;QACpC,IAAMC,EAAE,GAAGxD,KAAK,CAACkC,CAAC;QAClB,IAAMuB,EAAE,GAAGzD,KAAK,CAACmC,CAAC;QAClB,IAAMC,KAAK,GAAGpC,KAAK,CAACoC,KAAK;QACzB,IAAMC,MAAM,GAAGrC,KAAK,CAACqC,MAAM;QAC3B,IAAII,MAAM,GAAGzC,KAAK,CAACyC,MAAM;QAEzB,IAAMiB,SAAS,GAAIhB,IAAI,CAACiB,GAAG,CAACvB,KAAK,EAAEC,MAAM,CAAC,GAAG,CAAC,GAAI,CAAC;QAEnDI,MAAM,GAAGA,MAAM,GAAGiB,SAAS,GAAGA,SAAS,GAAGjB,MAAM;QAEhDhE,OAAO,CAACgC,SAAS,EAAE;QACnBhC,OAAO,CAACuC,MAAM,CAACwC,EAAE,EAAEC,EAAE,GAAGhB,MAAM,CAAC;QAC/BhE,OAAO,CAACyC,MAAM,CAACsC,EAAE,EAAEC,EAAE,GAAGpB,MAAM,GAAGI,MAAM,CAAC;QACxChE,OAAO,CAACmF,gBAAgB,CAACJ,EAAE,EAAEC,EAAE,GAAGpB,MAAM,EAAEmB,EAAE,GAAGf,MAAM,EAAEgB,EAAE,GAAGpB,MAAM,CAAC;QACnE5D,OAAO,CAACyC,MAAM,CAACsC,EAAE,GAAGpB,KAAK,GAAGK,MAAM,EAAEgB,EAAE,GAAGpB,MAAM,CAAC;QAChD5D,OAAO,CAACmF,gBAAgB,CACtBJ,EAAE,GAAGpB,KAAK,EACVqB,EAAE,GAAGpB,MAAM,EACXmB,EAAE,GAAGpB,KAAK,EACVqB,EAAE,GAAGpB,MAAM,GAAGI,MAAM,CACrB;QACDhE,OAAO,CAACyC,MAAM,CAACsC,EAAE,GAAGpB,KAAK,EAAEqB,EAAE,GAAGhB,MAAM,CAAC;QACvChE,OAAO,CAACmF,gBAAgB,CAACJ,EAAE,GAAGpB,KAAK,EAAEqB,EAAE,EAAED,EAAE,GAAGpB,KAAK,GAAGK,MAAM,EAAEgB,EAAE,CAAC;QACjEhF,OAAO,CAACyC,MAAM,CAACsC,EAAE,GAAGf,MAAM,EAAEgB,EAAE,CAAC;QAC/BhF,OAAO,CAACmF,gBAAgB,CAACJ,EAAE,EAAEC,EAAE,EAAED,EAAE,EAAEC,EAAE,GAAGhB,MAAM,CAAC;QACjDhE,OAAO,CAAC2C,SAAS,EAAE;QAEnB,IAAIrB,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACE,SAAS,KAAK,CAAC,EAAE;UAC1CxB,OAAO,CAAC+C,WAAW,GAAGzB,IAAI,CAAC0B,SAAS,GAAG/C,UAAU;UACjDD,OAAO,CAACiD,SAAS,SAAO,WAAQ,CAACzB,SAAS,GAAG,CAAC,EAAE0B,QAAQ,CAAC,EAAE,CAAC,EAAGC,MAAM,CACnE,CAAC,CAAC,CACD;UACHnD,OAAO,CAAC8C,IAAI,EAAE;QAChB;QAEA,IAAIxB,IAAI,CAACM,SAAS,EAAE;UAClB5B,OAAO,CAAC+C,WAAW,GAAGzB,IAAI,CAAC8B,SAAS,GAAGnD,UAAU;UACjDD,OAAO,CAACqD,WAAW,SAAO,WAAQ,CAAC3B,SAAS,GAAG,CAAC,EAAEwB,QAAQ,CACxD,EAAE,CACH,EAAGC,MAAM,CAAC,CAAC,CAAC,CAAG;UAChBnD,OAAO,CAACsD,MAAM,EAAE;QAClB;MACF;IACF;EACF;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEtC,kBAAkB,CAACjB,QAAQ,EAAE;IAC3BA,QAAQ,CAACe,SAAS,GAAGf,QAAQ,CAACgB,IAAI;IAClChB,QAAQ,CAACa,eAAe,GAAGb,QAAQ,CAACc,KAAK;IAEzC,IAAMuE,KAAK,GAAG,CAAErF,QAAQ,CAACgB,IAAI,IAAI,EAAE,GAAI,IAAI,IAAI,GAAG;IAClD,IAAMsE,KAAK,GAAG,CAAEtF,QAAQ,CAACgB,IAAI,IAAI,CAAC,GAAI,IAAI,IAAI,GAAG;IACjD,IAAMuE,KAAK,GAAG,CAACvF,QAAQ,CAACgB,IAAI,GAAG,IAAI,IAAI,GAAG;IAE1C,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,QAAQ,CAACqB,YAAY,CAACC,MAAM,EAAE,EAAEF,CAAC,EAAE;MACrD,IAAMG,IAAI,GAAGvB,QAAQ,CAACqB,YAAY,CAACD,CAAC,CAAC;MAErC,IAAMK,SAAS,GAAGF,IAAI,CAACE,SAAS,GAAG,CAAC;MACpC,IAAME,SAAS,GAAGJ,IAAI,CAACI,SAAS,GAAG,CAAC;;MAEpC;MACAJ,IAAI,CAACG,SAAS,GACZ,CAAG,CAAED,SAAS,IAAI,EAAE,GAAI,IAAI,IAAI,GAAG,GAAI4D,KAAK,GAAG,GAAG,IAAK,EAAE,KACtD,CAAE5D,SAAS,IAAI,CAAC,GAAI,IAAI,IAAI,GAAG,GAAI6D,KAAK,GAAG,GAAG,IAAK,CAAC,CAAC,GACvD,CAAC7D,SAAS,GAAG,IAAI,IAAI,GAAG,GAAI8D,KAAK,GAAG,GAAG;MAE1ChE,IAAI,CAACK,SAAS,GACZ,CAAG,CAAED,SAAS,IAAI,EAAE,GAAI,IAAI,IAAI,GAAG,GAAI0D,KAAK,GAAG,GAAG,IAAK,EAAE,KACtD,CAAE1D,SAAS,IAAI,CAAC,GAAI,IAAI,IAAI,GAAG,GAAI2D,KAAK,GAAG,GAAG,IAAK,CAAC,CAAC,GACvD,CAAC3D,SAAS,GAAG,IAAI,IAAI,GAAG,GAAI4D,KAAK,GAAG,GAAG;IAC5C;EACF;EAEAC,aAAa,CAACtD,MAAM,EAAEY,KAAK,EAAE7C,OAAO,EAAE;IACpCA,OAAO,CAACuC,MAAM,CAACN,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;IAEpC,KAAK,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,MAAM,CAACZ,MAAM,GAAG,CAAC,EAAE,EAAEmB,CAAC,EAAE;MAC1CxC,OAAO,CAACyC,MAAM,CAACR,MAAM,CAACO,CAAC,GAAG,CAAC,CAAC,EAAEP,MAAM,CAACO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAClD;IAEA,IAAIK,KAAK,EAAE;MACT7C,OAAO,CAAC2C,SAAS,EAAE;IACrB;EACF;;EAEA;AACF;AACA;AACA;EACE6C,OAAO,GAAG;IACR,IAAI,CAAC3F,QAAQ,GAAG,IAAI;EACtB;AACF;AAAC;AAED4F,uBAAc,CAACC,cAAc,CAAC,UAAU,EAAE/F,sBAAsB,CAAC"}