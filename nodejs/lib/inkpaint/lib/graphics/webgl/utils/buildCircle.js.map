{"version":3,"file":"buildCircle.js","names":["buildCircle","graphicsData","webGLData","webGLDataNativeLines","circleData","shape","x","y","width","height","type","SHAPES","CIRC","radius","totalSegs","Math","floor","sqrt","seg","PI","fill","color","hex2rgb","fillColor","alpha","fillAlpha","r","g","b","verts","points","indices","vecPos","length","push","i","sin","cos","lineWidth","tempPoints","buildLine"],"sources":["../../../../src/graphics/webgl/utils/buildCircle.js"],"sourcesContent":["import buildLine from './buildLine';\nimport { SHAPES } from '../../../const';\nimport { hex2rgb } from '../../../utils';\n\n/**\n * Builds a circle to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {InkPaint.WebGLGraphicsData} graphicsData - The graphics object to draw\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the webGL-specific information to create nativeLines\n */\nexport default function buildCircle(graphicsData, webGLData, webGLDataNativeLines)\n{\n    // need to convert points to a nice regular data\n    const circleData = graphicsData.shape;\n    const x = circleData.x;\n    const y = circleData.y;\n    let width;\n    let height;\n\n    // TODO - bit hacky??\n    if (graphicsData.type === SHAPES.CIRC)\n    {\n        width = circleData.radius;\n        height = circleData.radius;\n    }\n    else\n    {\n        width = circleData.width;\n        height = circleData.height;\n    }\n\n    if (width === 0 || height === 0)\n    {\n        return;\n    }\n\n    const totalSegs = Math.floor(30 * Math.sqrt(circleData.radius))\n        || Math.floor(15 * Math.sqrt(circleData.width + circleData.height));\n\n    const seg = (Math.PI * 2) / totalSegs;\n\n    if (graphicsData.fill)\n    {\n        const color = hex2rgb(graphicsData.fillColor);\n        const alpha = graphicsData.fillAlpha;\n\n        const r = color[0] * alpha;\n        const g = color[1] * alpha;\n        const b = color[2] * alpha;\n\n        const verts = webGLData.points;\n        const indices = webGLData.indices;\n\n        let vecPos = verts.length / 6;\n\n        indices.push(vecPos);\n\n        for (let i = 0; i < totalSegs + 1; i++)\n        {\n            verts.push(x, y, r, g, b, alpha);\n\n            verts.push(\n                x + (Math.sin(seg * i) * width),\n                y + (Math.cos(seg * i) * height),\n                r, g, b, alpha\n            );\n\n            indices.push(vecPos++, vecPos++);\n        }\n\n        indices.push(vecPos - 1);\n    }\n\n    if (graphicsData.lineWidth)\n    {\n        const tempPoints = graphicsData.points;\n\n        graphicsData.points = [];\n\n        for (let i = 0; i < totalSegs; i++)\n        {\n            graphicsData.points.push(\n                x + (Math.sin(seg * -i) * width),\n                y + (Math.cos(seg * -i) * height)\n            );\n        }\n\n        graphicsData.points.push(\n            graphicsData.points[0],\n            graphicsData.points[1]\n        );\n\n        buildLine(graphicsData, webGLData, webGLDataNativeLines);\n\n        graphicsData.points = tempPoints;\n    }\n}\n"],"mappings":"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"}