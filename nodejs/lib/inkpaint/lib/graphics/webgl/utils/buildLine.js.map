{"version":3,"file":"buildLine.js","names":["graphicsData","webGLData","webGLDataNativeLines","nativeLines","buildNativeLine","buildLine","points","length","firstPoint","Point","lastPoint","x","y","slice","pop","midPointX","midPointY","unshift","push","verts","indices","indexCount","indexStart","width","lineWidth","color","hex2rgb","lineColor","alpha","lineAlpha","r","g","b","p1x","p1y","p2x","p2y","p3x","p3y","perpx","perpy","perp2x","perp2y","perp3x","perp3y","dist","Math","sqrt","ratio","lineAlignment","r1","r2","i","a1","b1","c1","a2","b2","c2","denom","abs","px","py","pdist"],"sources":["../../../../src/graphics/webgl/utils/buildLine.js"],"sourcesContent":["import { Point } from '../../../math';\nimport { hex2rgb } from '../../../utils';\n\n/**\n * Builds a line to draw\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {InkPaint.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n * @param {object} webGLDataNativeLines - an object containing all the webGL-specific information to create nativeLines\n */\nexport default function (graphicsData, webGLData, webGLDataNativeLines)\n{\n    if (graphicsData.nativeLines)\n    {\n        buildNativeLine(graphicsData, webGLDataNativeLines);\n    }\n    else\n    {\n        buildLine(graphicsData, webGLData);\n    }\n}\n\n/**\n * Builds a line to draw using the poligon method.\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {InkPaint.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildLine(graphicsData, webGLData)\n{\n    // TODO OPTIMISE!\n    let points = graphicsData.points;\n\n    if (points.length === 0)\n    {\n        return;\n    }\n    // if the line width is an odd number add 0.5 to align to a whole pixel\n    // commenting this out fixes #711 and #1620\n    // if (graphicsData.lineWidth%2)\n    // {\n    //     for (i = 0; i < points.length; i++)\n    //     {\n    //         points[i] += 0.5;\n    //     }\n    // }\n\n    // get first and last point.. figure out the middle!\n    const firstPoint = new Point(points[0], points[1]);\n    let lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n\n    // if the first point is the last point - gonna have issues :)\n    if (firstPoint.x === lastPoint.x && firstPoint.y === lastPoint.y)\n    {\n        // need to clone as we are going to slightly modify the shape..\n        points = points.slice();\n\n        points.pop();\n        points.pop();\n\n        lastPoint = new Point(points[points.length - 2], points[points.length - 1]);\n\n        const midPointX = lastPoint.x + ((firstPoint.x - lastPoint.x) * 0.5);\n        const midPointY = lastPoint.y + ((firstPoint.y - lastPoint.y) * 0.5);\n\n        points.unshift(midPointX, midPointY);\n        points.push(midPointX, midPointY);\n    }\n\n    const verts = webGLData.points;\n    const indices = webGLData.indices;\n    const length = points.length / 2;\n    let indexCount = points.length;\n    let indexStart = verts.length / 6;\n\n    // DRAW the Line\n    const width = graphicsData.lineWidth / 2;\n\n    // sort color\n    const color = hex2rgb(graphicsData.lineColor);\n    const alpha = graphicsData.lineAlpha;\n    const r = color[0] * alpha;\n    const g = color[1] * alpha;\n    const b = color[2] * alpha;\n\n    let p1x = points[0];\n    let p1y = points[1];\n    let p2x = points[2];\n    let p2y = points[3];\n    let p3x = 0;\n    let p3y = 0;\n\n    let perpx = -(p1y - p2y);\n    let perpy = p1x - p2x;\n    let perp2x = 0;\n    let perp2y = 0;\n    let perp3x = 0;\n    let perp3y = 0;\n\n    let dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    const ratio = graphicsData.lineAlignment;// 0.5;\n    const r1 = (1 - ratio) * 2;\n    const r2 = ratio * 2;\n\n    // start\n    verts.push(\n        p1x - (perpx * r1),\n        p1y - (perpy * r1),\n        r, g, b, alpha\n    );\n\n    verts.push(\n        p1x + (perpx * r2),\n        p1y + (perpy * r2),\n        r, g, b, alpha\n    );\n\n    for (let i = 1; i < length - 1; ++i)\n    {\n        p1x = points[(i - 1) * 2];\n        p1y = points[((i - 1) * 2) + 1];\n\n        p2x = points[i * 2];\n        p2y = points[(i * 2) + 1];\n\n        p3x = points[(i + 1) * 2];\n        p3y = points[((i + 1) * 2) + 1];\n\n        perpx = -(p1y - p2y);\n        perpy = p1x - p2x;\n\n        dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n        perpx /= dist;\n        perpy /= dist;\n        perpx *= width;\n        perpy *= width;\n\n        perp2x = -(p2y - p3y);\n        perp2y = p2x - p3x;\n\n        dist = Math.sqrt((perp2x * perp2x) + (perp2y * perp2y));\n        perp2x /= dist;\n        perp2y /= dist;\n        perp2x *= width;\n        perp2y *= width;\n\n        const a1 = (-perpy + p1y) - (-perpy + p2y);\n        const b1 = (-perpx + p2x) - (-perpx + p1x);\n        const c1 = ((-perpx + p1x) * (-perpy + p2y)) - ((-perpx + p2x) * (-perpy + p1y));\n        const a2 = (-perp2y + p3y) - (-perp2y + p2y);\n        const b2 = (-perp2x + p2x) - (-perp2x + p3x);\n        const c2 = ((-perp2x + p3x) * (-perp2y + p2y)) - ((-perp2x + p2x) * (-perp2y + p3y));\n\n        let denom = (a1 * b2) - (a2 * b1);\n\n        if (Math.abs(denom) < 0.1)\n        {\n            denom += 10.1;\n            verts.push(\n                p2x - (perpx * r1),\n                p2y - (perpy * r1),\n                r, g, b, alpha\n            );\n\n            verts.push(\n                p2x + (perpx * r2),\n                p2y + (perpy * r2),\n                r, g, b, alpha\n            );\n\n            continue;\n        }\n\n        const px = ((b1 * c2) - (b2 * c1)) / denom;\n        const py = ((a2 * c1) - (a1 * c2)) / denom;\n        const pdist = ((px - p2x) * (px - p2x)) + ((py - p2y) * (py - p2y));\n\n        if (pdist > (196 * width * width))\n        {\n            perp3x = perpx - perp2x;\n            perp3y = perpy - perp2y;\n\n            dist = Math.sqrt((perp3x * perp3x) + (perp3y * perp3y));\n            perp3x /= dist;\n            perp3y /= dist;\n            perp3x *= width;\n            perp3y *= width;\n\n            verts.push(p2x - (perp3x * r1), p2y - (perp3y * r1));\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x + (perp3x * r2), p2y + (perp3y * r2));\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x - (perp3x * r2 * r1), p2y - (perp3y * r1));\n            verts.push(r, g, b, alpha);\n\n            indexCount++;\n        }\n        else\n        {\n            verts.push(p2x + ((px - p2x) * r1), p2y + ((py - p2y) * r1));\n            verts.push(r, g, b, alpha);\n\n            verts.push(p2x - ((px - p2x) * r2), p2y - ((py - p2y) * r2));\n            verts.push(r, g, b, alpha);\n        }\n    }\n\n    p1x = points[(length - 2) * 2];\n    p1y = points[((length - 2) * 2) + 1];\n\n    p2x = points[(length - 1) * 2];\n    p2y = points[((length - 1) * 2) + 1];\n\n    perpx = -(p1y - p2y);\n    perpy = p1x - p2x;\n\n    dist = Math.sqrt((perpx * perpx) + (perpy * perpy));\n    perpx /= dist;\n    perpy /= dist;\n    perpx *= width;\n    perpy *= width;\n\n    verts.push(p2x - (perpx * r1), p2y - (perpy * r1));\n    verts.push(r, g, b, alpha);\n\n    verts.push(p2x + (perpx * r2), p2y + (perpy * r2));\n    verts.push(r, g, b, alpha);\n\n    indices.push(indexStart);\n\n    for (let i = 0; i < indexCount; ++i)\n    {\n        indices.push(indexStart++);\n    }\n\n    indices.push(indexStart - 1);\n}\n\n/**\n * Builds a line to draw using the gl.drawArrays(gl.LINES) method\n *\n * Ignored from docs since it is not directly exposed.\n *\n * @ignore\n * @private\n * @param {InkPaint.WebGLGraphicsData} graphicsData - The graphics object containing all the necessary properties\n * @param {object} webGLData - an object containing all the webGL-specific information to create this shape\n */\nfunction buildNativeLine(graphicsData, webGLData)\n{\n    let i = 0;\n    const points = graphicsData.points;\n\n    if (points.length === 0) return;\n\n    const verts = webGLData.points;\n    const length = points.length / 2;\n\n    // sort color\n    const color = hex2rgb(graphicsData.lineColor);\n    const alpha = graphicsData.lineAlpha;\n    const r = color[0] * alpha;\n    const g = color[1] * alpha;\n    const b = color[2] * alpha;\n\n    for (i = 1; i < length; i++)\n    {\n        const p1x = points[(i - 1) * 2];\n        const p1y = points[((i - 1) * 2) + 1];\n\n        const p2x = points[i * 2];\n        const p2y = points[(i * 2) + 1];\n\n        verts.push(p1x, p1y);\n        verts.push(r, g, b, alpha);\n\n        verts.push(p2x, p2y);\n        verts.push(r, g, b, alpha);\n    }\n}\n"],"mappings":"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"}