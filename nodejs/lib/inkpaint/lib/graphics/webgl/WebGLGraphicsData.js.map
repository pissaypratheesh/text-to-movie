{"version":3,"file":"WebGLGraphicsData.js","names":["WebGLGraphicsData","constructor","gl","shader","attribsState","color","points","indices","buffer","glCore","GLBuffer","createVertexBuffer","indexBuffer","createIndexBuffer","dirty","nativeLines","glPoints","glIndices","vao","VertexArrayObject","addIndex","addAttribute","attributes","aVertexPosition","FLOAT","aColor","reset","length","upload","Float32Array","Uint16Array","destroy"],"sources":["../../../src/graphics/webgl/WebGLGraphicsData.js"],"sourcesContent":["import glCore from 'pixi-gl-core';\n\n/**\n * An object containing WebGL specific properties to be used by the WebGL renderer\n *\n * @class\n * @private\n * @memberof InkPaint\n */\nexport default class WebGLGraphicsData\n{\n    /**\n     * @param {WebGLRenderingContext} gl - The current WebGL drawing context\n     * @param {InkPaint.Shader} shader - The shader\n     * @param {object} attribsState - The state for the VAO\n     */\n    constructor(gl, shader, attribsState)\n    {\n        /**\n         * The current WebGL drawing context\n         *\n         * @member {WebGLRenderingContext}\n         */\n        this.gl = gl;\n\n        // TODO does this need to be split before uploading??\n        /**\n         * An array of color components (r,g,b)\n         * @member {number[]}\n         */\n        this.color = [0, 0, 0]; // color split!\n\n        /**\n         * An array of points to draw\n         * @member {InkPaint.Point[]}\n         */\n        this.points = [];\n\n        /**\n         * The indices of the vertices\n         * @member {number[]}\n         */\n        this.indices = [];\n        /**\n         * The main buffer\n         * @member {WebGLBuffer}\n         */\n        this.buffer = glCore.GLBuffer.createVertexBuffer(gl);\n\n        /**\n         * The index buffer\n         * @member {WebGLBuffer}\n         */\n        this.indexBuffer = glCore.GLBuffer.createIndexBuffer(gl);\n\n        /**\n         * Whether this graphics is dirty or not\n         * @member {boolean}\n         */\n        this.dirty = true;\n\n        /**\n         * Whether this graphics is nativeLines or not\n         * @member {boolean}\n         */\n        this.nativeLines = false;\n\n        this.glPoints = null;\n        this.glIndices = null;\n\n        /**\n         *\n         * @member {InkPaint.Shader}\n         */\n        this.shader = shader;\n\n        this.vao = new glCore.VertexArrayObject(gl, attribsState)\n        .addIndex(this.indexBuffer)\n        .addAttribute(this.buffer, shader.attributes.aVertexPosition, gl.FLOAT, false, 4 * 6, 0)\n        .addAttribute(this.buffer, shader.attributes.aColor, gl.FLOAT, false, 4 * 6, 2 * 4);\n    }\n\n    /**\n     * Resets the vertices and the indices\n     */\n    reset()\n    {\n        this.points.length = 0;\n        this.indices.length = 0;\n    }\n\n    /**\n     * Binds the buffers and uploads the data\n     */\n    upload()\n    {\n        this.glPoints = new Float32Array(this.points);\n        this.buffer.upload(this.glPoints);\n\n        this.glIndices = new Uint16Array(this.indices);\n        this.indexBuffer.upload(this.glIndices);\n\n        this.dirty = false;\n    }\n\n    /**\n     * Empties all the data\n     */\n    destroy()\n    {\n        this.color = null;\n        this.points = null;\n        this.indices = null;\n\n        this.vao.destroy();\n        this.buffer.destroy();\n        this.indexBuffer.destroy();\n\n        this.gl = null;\n\n        this.buffer = null;\n        this.indexBuffer = null;\n\n        this.glPoints = null;\n        this.glIndices = null;\n    }\n}\n"],"mappings":"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"}